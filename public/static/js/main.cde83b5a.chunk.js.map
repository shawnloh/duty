{"version":3,"sources":["actions/authActions.js","pages/personnels/single/constants.js","utils/api.js","pages/points/constants.js","pages/ranks/constants.js","pages/platoons/constants.js","pages/statuses/constants.js","pages/personnels/single/actions.js","AuthRoute.js","components/commons/Loading.jsx","pages/NotFoundPage/NotFoundPage.jsx","pages/logout/LogoutPage.jsx","App.js","reducers/authReducer.js","reducers/ranksReducer.js","reducers/platoonsReducer.js","reducers/eventsReducer.js","reducers/personnelsReducer.js","reducers/pointsReducer.js","reducers/statusesReducer.js","pages/login/reducer.js","pages/loading/reducer.js","pages/ranks/reducer.js","pages/platoons/reducer.js","pages/points/reducer.js","pages/statuses/reducer.js","pages/personnels/all/reducer.js","pages/personnels/add/reducer.js","pages/personnels/single/reducer.js","pages/personnels/edit/reducer.js","pages/personnels/reducer.js","pages/events/delete/reducer.js","pages/events/add/reducer.js","pages/events/edit/reducer.js","pages/events/reducer.js","reducers/pagesReducer.js","reducers/rootReducer.js","services/accounts.js","sagas/authSaga.js","actions/personnelsActions.js","services/personnels.js","sagas/personnelsSaga.js","pages/login/saga.js","actions/ranksActions.js","actions/platoonsActions.js","actions/pointsActions.js","actions/eventsActions.js","actions/statusesActions.js","services/ranks.js","services/platoons.js","services/points.js","services/statuses.js","pages/loading/saga.js","pages/ranks/saga.js","pages/platoons/saga.js","pages/points/saga.js","pages/statuses/saga.js","pages/personnels/all/saga.js","pages/personnels/add/saga.js","pages/personnels/single/saga.js","pages/personnels/edit/saga.js","pages/personnels/saga.js","pages/events/delete/saga.js","pages/events/add/saga.js","pages/events/edit/saga.js","pages/events/saga.js","sagas/pageSagas.js","sagas/rootSaga.js","stores/createStore.js","index.js","pages/points/actions.js","pages/events/edit/constants.js","pages/personnels/all/constants.js","pages/personnels/add/constants.js","pages/personnels/edit/constants.js","pages/ranks/actions.js","pages/platoons/actions.js","pages/events/delete/constants.js","pages/events/add/constants.js","pages/statuses/actions.js","pages/login/constants.js","pages/loading/constants.js","services/events.js","pages/events/delete/actions.js","pages/loading/actions.js","pages/login/actions.js","pages/personnels/all/actions.js","pages/personnels/add/actions.js","pages/personnels/edit/actions.js","pages/events/edit/actions.js","actions/constants.js","pages/events/add/actions.js","components/commons/TopNavBar.jsx","pages/shared/AppLayout.jsx"],"names":["logout","type","LOG_OUT","logoutFailure","LOG_OUT_FAILURE","logoutSuccess","LOG_OUT_SUCCESS","checkAuth","CHECK_AUTH","checkAuthSuccess","payload","CHECK_AUTH_SUCCESS","checkAuthFailure","errors","CHECK_AUTH_FAILURE","ADD_STATUS","ADD_STATUS_SUCCESS","ADD_STATUS_FAILURE","DELETE_STATUS","DELETE_STATUS_SUCCESS","DELETE_STATUS_FAILURE","ADD_BLOCKOUT","ADD_BLOCKOUT_SUCCESS","ADD_BLOCKOUT_FAILURE","DELETE_BLOCKOUT","DELETE_BLOCKOUT_SUCCESS","DELETE_BLOCKOUT_FAILURE","EDIT_PERSONNEL_POINT","EDIT_PERSONNEL_POINT_SUCCESS","EDIT_PERSONNEL_POINT_FAILURE","CLEAR_ERRORS","api","create","baseURL","withCredentials","ADD_POINT","ADD_POINT_SUCCESS","ADD_POINT_FAILURE","UPDATE_POINT","UPDATE_POINT_SUCCESS","UPDATE_POINT_FAILURE","DELETE_POINT","DELETE_POINT_SUCCESS","DELETE_POINT_FAILURE","CLEAR_ERROR","ADD_RANK","ADD_RANK_SUCCESS","ADD_RANK_FAILURE","UPDATE_RANK","UPDATE_RANK_SUCCESS","UPDATE_RANK_FAILURE","DELETE_RANK","DELETE_RANK_SUCCESS","DELETE_RANK_FAILURE","ADD_PLATOON","ADD_PLATOON_SUCCESS","ADD_PLATOON_FAILURE","UPDATE_PLATOON","UPDATE_PLATOON_SUCCESS","UPDATE_PLATOON_FAILURE","DELETE_PLATOON","DELETE_PLATOON_SUCCESS","DELETE_PLATOON_FAILURE","UPDATE_STATUS","UPDATE_STATUS_SUCCESS","UPDATE_STATUS_FAILURE","addStatus","personnelId","statusId","startDate","endDate","addStatusSuccess","status","addStatusFailure","deleteStatus","pStatusId","deleteStatusSuccess","deleteStatusFailure","addBlockout","date","addBlockoutSuccess","blockoutDates","addBlockoutFailure","deleteBlockout","deleteBlockoutSuccess","deleteBlockoutFailure","clearErrors","editPersonnelPoint","personnelPointId","point","editPersonnelPointSuccess","points","editPersonnelPointFailure","memo","Component","component","path","isAuthenticated","useSelector","state","auth","get","render","props","undefined","exact","to","Container","className","Row","Spinner","color","history","useHistory","Col","Button","onClick","goBack","dispatch","useDispatch","useEffect","Progress","animated","value","LoginPage","lazy","LoadingPage","DashboardPage","RanksPage","PlatoonsPage","PointsPage","StatusesPage","PersonnelsPage","EventsPage","appLoaded","pages","loading","checkAuthenticated","useCallback","reloadApp","loadApp","fallback","from","LogoutPage","NotFoundPage","initialState","Map","username","authReducer","LOGIN","merge","fromJS","ids","ranks","platoons","events","personnels","statuses","isAuthenticating","loggedOut","isLoading","appLoadedFailure","taskLoading","actionInProgress","isUpdating","personnelsPageReducers","combineReducers","all","DELETE_PERSONNEL","List","DELETE_PERSONNEL_SUCCESS","DELETE_PERSONNEL_FAILURE","CLEAR_ERROR_MESSAGE","add","ADD_PERSONNEL","ADD_PERSONNEL_SUCCESS","ADD_PERSONNEL_FAILURE","CLEAR_ADD_PERSONNEL_ERROR","single","edit","UPDATE_PERSON","UPDATE_PERSON_SUCCESS","UPDATE_PERSON_NO_CHANGE","UPDATE_PERSON_FAILURE","isDeleting","isAdding","delete","DELETE_EVENT","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAILURE","CREATE_EVENT","CREATE_EVENT_SUCCESS","CREATE_EVENT_FAILURE","UPDATE_EVENT","UPDATE_EVENT_SUCCESS","UPDATE_EVENT_NO_CHANGE","UPDATE_EVENT_FAILURE","login","LOGIN_FAIL","set","CONST","update","val","LOAD_APP","LOAD_APP_FAILURE","LOAD_APP_SUCCESS","eventsPageReducer","personnelsPageReducer","appReducer","LOAD_RANKS_SUCCESS","push","_id","indexOf","setIn","LOAD_RANKS_FAILURE","LOAD_PLATOONS_SUCCESS","LOAD_PLATOONS_FAILURE","LOAD_EVENTS_SUCCESS","LOAD_EVENTS_FAILURE","LOAD_PERSONNELS_SUCCESS","LOAD_PERSONNELS_FAILURE","updateIn","filter","map","mergeIn","PERSONNELS_UPDATE_EVENT_POINTS","PERSONNELS_UPDATE_PLATOON_NAME","PERSONNELS_UPDATE_RANK_NAME","PERSONNELS_UPDATE_POINTS_SYSTEM","PERSONNELS_UPDATE_STATUS_NAME","LOAD_POINTS_SUCCESS","LOAD_POINTS_FAILURE","LOAD_STATUSES_SUCCESS","LOAD_STATUSES_FAILURE","pagesReducer","persistConfig","transforms","immutableTransform","key","storage","blacklist","persistedRootReducer","persistReducer","action","newState","AccountService","password","post","then","response","catch","error","authSagaWatcher","select","call","put","ok","isAuth","data","logoutAction","message","takeLatest","loadPersonnels","LOAD_PERSONNELS","loadPersonnelsSuccess","loadPersonnelsFailure","personnelsUpdateEventPoints","personnelsUpdatePointsSystem","personnelsUpdatePlatoon","personnelsUpdateRank","personnelsUpdateStatus","PersonnelsService","name","rank","platoon","id","updatedPersonnel","refreshPersonnelsFromServer","updatePersonnelsPointSystemName","deletePersonnelsPointsSystem","revertPersonnelPoints","addPersonnelPoints","deleteEventUpdatePoints","createEventUpdatePoints","updateEventUpdatePoints","updatePersonnelsPlatoonName","updatePersonnelsRankName","updateStatusesName","personnelsSagaWatcher","getPersonnels","forEach","person","newPoints","currPoint","getIn","eventIdToDelete","race","success","take","failure","personnelsState","event","newEventsDate","pId","revert","eventId","oldEvent","successAction","newEvent","personId","String","toUpperCase","newStatuses","currStatus","takeEvery","loginWatcher","delay","loginFailure","loginSuccess","loadRanks","LOAD_RANKS","loadRanksSuccess","loadRanksFailure","loadPlatoons","LOAD_PLATOONS","loadPlatoonsSuccess","loadPlatoonsFailure","loadPoints","LOAD_POINTS","loadPointsSuccess","loadPointsFailure","loadEvents","LOAD_EVENTS","loadEventsSuccess","loadEventsFailure","loadStatuses","LOAD_STATUSES","loadStatusesSuccess","loadStatusesFailure","RanksService","PlatoonService","PointsService","Statuses","loadPointsSaga","loadRanksSaga","loadPlatoonsSaga","loadEventsSaga","loadPersonnelsSaga","loadStatusesSaga","loadEssentials","refresh","loadingWatcher","ERROR_CODES","UNAUTHORIZED","getPoints","Error","concat","getRanks","PlatoonsService","getPlatoons","EventsService","getEvents","StatusesService","getStatuses","loadAppSuccess","loadAppFailed","clearError","addRank","deleteRank","updateRank","ranksWatcher","addRankFailure","createRank","newRank","addRankSuccess","deleteId","deleteRankSuccess","deleteRankFailure","updateRankFailure","updatedRank","updateRankSuccess","addPlatoon","deletePlatoon","updatePlatoon","platoonsWatcher","addPlatoonFailure","createPlatoon","newPlatoon","addPlatoonSuccess","deletePlatoonSuccess","deletePlatoonFailure","updatePlatoonFailure","updatedPlatoon","updatePlatoonSuccess","addPoint","deletePoint","updatePoint","pointsWatcher","addPointFailure","createPoint","newPoint","addPointSuccess","deletePointSuccess","deletePointFailure","updatePointFailure","updatedPoint","updatePointSuccess","updateStatus","statusesWatcher","createStatus","newStatus","updatedStatus","updateStatusSuccess","updateStatusFailure","deletePersonnel","allWatcher","clearErrorMessage","deletePersonnelSuccess","deletePersonnelFailure","clearMessage","addPersonnel","addWatcher","clearPersonnelError","createPersonnel","addPersonnelSuccess","addPersonnelFailure","singleWatcher","moment","format","toLowerCase","addPersonnelStatus","newPersonnelStatus","expired","deletePersonnelStatus","dateToSubmit","addPersonnelBlockout","blockOutDates","isValid","deletePersonnelBlockout","personnelPoint","updatePerson","editPersonnelWatcher","editPersonnel","updatePersonSuccess","updatePersonNoChange","updatePersonFailure","personnelsSaga","allSaga","addSaga","singleSaga","editSaga","deleteEvent","deleteWatcher","deleteEventFailure","deleteEventSuccess","createEvent","createEventSuccess","createEventFailure","updateEvent","editEventnelWatcher","updateEventSuccess","updateEventNoChange","updateEventFailure","eventsWatcher","deleteSaga","pageSagas","loginPageSaga","loadingPageSaga","ranksPageSaga","platoonsPageSaga","pointsPageSaga","statusesPageSaga","personnelsPageSaga","eventsPageSaga","rootSagas","globalSagas","authSaga","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","persistor","persistStore","run","document","getElementById","LOGIN_SUCCESS","newPersonnels","TopNavBar","useState","isOpen","setIsOpen","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","Link","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","children"],"mappings":"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","file":"static/js/main.cde83b5a.chunk.js","sourcesContent":["import {\n  LOG_OUT,\n  LOG_OUT_FAILURE,\n  LOG_OUT_SUCCESS,\n  CHECK_AUTH,\n  CHECK_AUTH_SUCCESS,\n  CHECK_AUTH_FAILURE\n} from './constants';\n\nexport const logout = () => {\n  return {\n    type: LOG_OUT\n  };\n};\n\nexport const logoutFailure = () => {\n  return {\n    type: LOG_OUT_FAILURE\n  };\n};\nexport const logoutSuccess = () => {\n  return {\n    type: LOG_OUT_SUCCESS\n  };\n};\n\nexport const checkAuth = () => ({\n  type: CHECK_AUTH\n});\n\nexport const checkAuthSuccess = payload => ({\n  type: CHECK_AUTH_SUCCESS,\n  payload\n});\n\nexport const checkAuthFailure = errors => ({\n  type: CHECK_AUTH_FAILURE,\n  payload: errors\n});\n","export const ADD_STATUS = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS';\nexport const ADD_STATUS_SUCCESS = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS_SUCCESS';\nexport const ADD_STATUS_FAILURE = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS_FAILURE';\n\nexport const DELETE_STATUS = 'PERSONNELS_PAGE/SINGLE/DELETE_STATUS';\nexport const DELETE_STATUS_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/DELETE_STATUS_SUCCESS';\nexport const DELETE_STATUS_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/DELETE_STATUS_FAILURE';\n\nexport const ADD_BLOCKOUT = 'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT';\nexport const ADD_BLOCKOUT_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_SUCCESS';\nexport const ADD_BLOCKOUT_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_FAILURE';\n\nexport const DELETE_BLOCKOUT = 'PERSONNELS_PAGE/SINGLE/DELETE_BLOCKOUT';\nexport const DELETE_BLOCKOUT_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/DELETE_BLOCKOUT_SUCCESS';\nexport const DELETE_BLOCKOUT_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/DELETE_BLOCKOUT_FAILURE';\n\nexport const EDIT_PERSONNEL_POINT =\n  'PERSONNELS_PAGE/SINGLE/EDIT_PERSONNEL_POINT';\nexport const EDIT_PERSONNEL_POINT_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/EDIT_PERSONNEL_POINT_SUCCESS';\nexport const EDIT_PERSONNEL_POINT_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/EDIT_PERSONNEL_POINT_FAILURE';\n\nexport const CLEAR_ERRORS = 'PERSONNELS_PAGE/SINGLE/CLEAR_ERRORS';\n","import { create } from 'apisauce';\n\nconst api = create({\n  baseURL: '/api',\n  withCredentials: true\n});\n\nexport default api;\n","export const ADD_POINT = 'POINTS_PAGE/ADD_POINT';\nexport const ADD_POINT_SUCCESS = 'POINTS_PAGE/ADD_POINT_SUCCESS';\nexport const ADD_POINT_FAILURE = 'POINTS_PAGE/ADD_POINT_FAILURE';\n\nexport const UPDATE_POINT = 'POINTS_PAGE/UPDATE_POINT';\nexport const UPDATE_POINT_SUCCESS = 'POINTS_PAGE/UPDATE_POINT_SUCCESS';\nexport const UPDATE_POINT_FAILURE = 'POINTS_PAGE/UPDATE_POINT_FAILURE';\n\nexport const DELETE_POINT = 'POINTS_PAGE/DELETE_POINT';\nexport const DELETE_POINT_SUCCESS = 'POINTS_PAGE/DELETE_POINT_SUCCESS';\nexport const DELETE_POINT_FAILURE = 'POINTS_PAGE/DELETE_POINT_FAILURE';\n\nexport const CLEAR_ERROR = 'POINTS_PAGE/CLEAR_ERROR';\n","export const ADD_RANK = 'RANKS_PAGE/ADD_RANK';\nexport const ADD_RANK_SUCCESS = 'RANKS_PAGE/ADD_RANK_SUCCESS';\nexport const ADD_RANK_FAILURE = 'RANKS_PAGE/ADD_RANK_FAILURE';\n\nexport const UPDATE_RANK = 'RANKS_PAGE/UPDATE_RANK';\nexport const UPDATE_RANK_SUCCESS = 'RANKS_PAGE/UPDATE_RANK_SUCCESS';\nexport const UPDATE_RANK_FAILURE = 'RANKS_PAGE/UPDATE_RANK_FAILURE';\n\nexport const DELETE_RANK = 'RANKS_PAGE/DELETE_RANK';\nexport const DELETE_RANK_SUCCESS = 'RANKS_PAGE/DELETE_RANK_SUCCESS';\nexport const DELETE_RANK_FAILURE = 'RANKS_PAGE/DELETE_RANK_FAILURE';\n\nexport const CLEAR_ERROR = 'RANKS_PAGE/CLEAR_ERROR';\n","export const ADD_PLATOON = 'PLATOONS_PAGE/ADD_PLATOON';\nexport const ADD_PLATOON_SUCCESS = 'PLATOONS_PAGE/ADD_PLATOON_SUCCESS';\nexport const ADD_PLATOON_FAILURE = 'PLATOONS_PAGE/ADD_PLATOON_FAILURE';\n\nexport const UPDATE_PLATOON = 'PLATOONS_PAGE/UPDATE_PLATOON';\nexport const UPDATE_PLATOON_SUCCESS = 'PLATOONS_PAGE/UPDATE_PLATOON_SUCCESS';\nexport const UPDATE_PLATOON_FAILURE = 'PLATOONS_PAGE/UPDATE_PLATOON_FAILURE';\n\nexport const DELETE_PLATOON = 'PLATOONS_PAGE/DELETE_PLATOON';\nexport const DELETE_PLATOON_SUCCESS = 'PLATOONS_PAGE/DELETE_PLATOON_SUCCESS';\nexport const DELETE_PLATOON_FAILURE = 'PLATOONS_PAGE/DELETE_PLATOON_FAILURE';\n\nexport const CLEAR_ERROR = 'PLATOONS_PAGE/CLEAR_ERROR';\n","export const ADD_STATUS = 'STATUSES_PAGE/ADD_STATUS';\nexport const ADD_STATUS_SUCCESS = 'STATUSES_PAGE/ADD_STATUS_SUCCESS';\nexport const ADD_STATUS_FAILURE = 'STATUSES_PAGE/ADD_STATUS_FAILURE';\n\nexport const UPDATE_STATUS = 'STATUSES_PAGE/UPDATE_STATUS';\nexport const UPDATE_STATUS_SUCCESS = 'STATUSES_PAGE/UPDATE_STATUS_SUCCESS';\nexport const UPDATE_STATUS_FAILURE = 'STATUSES_PAGE/UPDATE_STATUS_FAILURE';\n\nexport const DELETE_STATUS = 'STATUSES_PAGE/DELETE_STATUS';\nexport const DELETE_STATUS_SUCCESS = 'STATUSES_PAGE/DELETE_STATUS_SUCCESS';\nexport const DELETE_STATUS_FAILURE = 'STATUSES_PAGE/DELETE_STATUS_FAILURE';\n\nexport const CLEAR_ERROR = 'STATUSES_PAGE/CLEAR_ERROR';\n","import {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT,\n  ADD_BLOCKOUT_FAILURE,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT,\n  DELETE_BLOCKOUT_FAILURE,\n  DELETE_BLOCKOUT_SUCCESS,\n  CLEAR_ERRORS,\n  EDIT_PERSONNEL_POINT,\n  EDIT_PERSONNEL_POINT_FAILURE,\n  EDIT_PERSONNEL_POINT_SUCCESS\n} from './constants';\n\nexport const addStatus = (personnelId, statusId, startDate, endDate) => ({\n  type: ADD_STATUS,\n  payload: {\n    personnelId,\n    statusId,\n    startDate,\n    endDate\n  }\n});\n\nexport const addStatusSuccess = ({ personnelId, status }) => ({\n  type: ADD_STATUS_SUCCESS,\n  payload: {\n    personnelId,\n    status\n  }\n});\n\nexport const addStatusFailure = errors => ({\n  type: ADD_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const deleteStatus = (personnelId, pStatusId) => ({\n  type: DELETE_STATUS,\n  payload: {\n    personnelId,\n    pStatusId\n  }\n});\n\nexport const deleteStatusSuccess = ({ personnelId, statusId }) => ({\n  type: DELETE_STATUS_SUCCESS,\n  payload: {\n    personnelId,\n    statusId\n  }\n});\n\nexport const deleteStatusFailure = errors => ({\n  type: DELETE_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const addBlockout = (personnelId, date) => ({\n  type: ADD_BLOCKOUT,\n  payload: {\n    personnelId,\n    date\n  }\n});\n\nexport const addBlockoutSuccess = (personnelId, blockoutDates) => ({\n  type: ADD_BLOCKOUT_SUCCESS,\n  payload: {\n    personnelId,\n    blockoutDates\n  }\n});\n\nexport const addBlockoutFailure = errors => ({\n  type: ADD_BLOCKOUT_FAILURE,\n  payload: errors\n});\n\nexport const deleteBlockout = (personnelId, date) => ({\n  type: DELETE_BLOCKOUT,\n  payload: {\n    personnelId,\n    date\n  }\n});\n\nexport const deleteBlockoutSuccess = (personnelId, blockoutDates) => ({\n  type: DELETE_BLOCKOUT_SUCCESS,\n  payload: {\n    personnelId,\n    blockoutDates\n  }\n});\n\nexport const deleteBlockoutFailure = errors => ({\n  type: DELETE_BLOCKOUT_FAILURE,\n  payload: errors\n});\n\nexport const clearErrors = () => ({\n  type: CLEAR_ERRORS\n});\n\nexport const editPersonnelPoint = (personnelId, personnelPointId, point) => ({\n  type: EDIT_PERSONNEL_POINT,\n  payload: {\n    personnelId,\n    personnelPointId,\n    point\n  }\n});\n\nexport const editPersonnelPointSuccess = (\n  personnelId,\n  personnelPointId,\n  points\n) => ({\n  type: EDIT_PERSONNEL_POINT_SUCCESS,\n  payload: {\n    personnelId,\n    personnelPointId,\n    points\n  }\n});\n\nexport const editPersonnelPointFailure = errors => ({\n  type: EDIT_PERSONNEL_POINT_FAILURE,\n  payload: errors\n});\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { memo } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction AuthRoute({ component: Component, path }) {\n  const isAuthenticated = useSelector(state =>\n    state.auth.get('isAuthenticated')\n  );\n\n  return (\n    <Route\n      path={path}\n      render={props => {\n        if (isAuthenticated === undefined) {\n          return null;\n        }\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        }\n\n        return <Redirect exact to=\"/\" />;\n      }}\n    />\n  );\n}\n\nAuthRoute.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.node,\n    PropTypes.object\n  ]).isRequired,\n  path: PropTypes.string.isRequired\n};\n\nexport default memo(AuthRoute);\n","import React, { memo } from 'react';\nimport { Spinner, Row, Container } from 'reactstrap';\nimport { useSelector } from 'react-redux';\nimport Layout from '../../pages/shared/AppLayout';\n\nexport function Loading() {\n  const isAuthenticated = useSelector(state =>\n    state.auth.get('isAuthenticated')\n  );\n  if (isAuthenticated) {\n    return (\n      <Layout>\n        <Container className=\"d-flex h-100 justify-content-center align-items-center flex-column\">\n          <Row>\n            <Spinner type=\"grow\" color=\"primary\" />\n            <Spinner type=\"grow\" color=\"secondary\" />\n            <Spinner type=\"grow\" color=\"success\" />\n            <Spinner type=\"grow\" color=\"danger\" />\n            <Spinner type=\"grow\" color=\"warning\" />\n            <Spinner type=\"grow\" color=\"info\" />\n            <Spinner type=\"grow\" color=\"dark\" />\n          </Row>\n          <Row>Loading Page...</Row>\n        </Container>\n      </Layout>\n    );\n  }\n\n  return (\n    <Container className=\"d-flex h-100 justify-content-center align-items-center flex-column\">\n      <Row>\n        <Spinner type=\"grow\" color=\"primary\" />\n        <Spinner type=\"grow\" color=\"secondary\" />\n        <Spinner type=\"grow\" color=\"success\" />\n        <Spinner type=\"grow\" color=\"danger\" />\n        <Spinner type=\"grow\" color=\"warning\" />\n        <Spinner type=\"grow\" color=\"info\" />\n        <Spinner type=\"grow\" color=\"dark\" />\n      </Row>\n      <Row>Loading Page...</Row>\n    </Container>\n  );\n}\n\nexport default memo(Loading);\n","import React, { memo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Container, Button, Row, Col } from 'reactstrap';\n\nexport function NotFoundPage() {\n  const history = useHistory();\n\n  return (\n    <Container className=\"h-100\">\n      <Row className=\"h-100 justify-content-center align-items-center\">\n        <Col className=\"d-flex justify-content-center align-items-center flex-column\">\n          <h1>404</h1>\n          <p>The page that you are looking is not available</p>\n          <Button color=\"primary\" onClick={history.goBack}>\n            Click Here To Go back\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default memo(NotFoundPage);\n","import React, { memo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Container, Row, Progress, Col } from 'reactstrap';\nimport { logout } from '../../actions/authActions';\n\nfunction LogoutPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n  return (\n    <Container className=\"h-100\">\n      <Row className=\"h-100\">\n        <Col className=\"my-auto mx-auto\">\n          <Progress animated value={100} color=\"primary\" />\n          <p className=\"text-center\">Logging you out...</p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default memo(LogoutPage);\n","import React, { memo, Suspense, lazy, useCallback, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkAuth } from './actions/authActions';\nimport { loadApp } from './pages/loading/actions';\n\nimport AuthRoute from './AuthRoute';\n\nimport LoadingFallback from './components/commons/Loading';\nimport NotFoundPage from './pages/NotFoundPage';\nimport LogoutPage from './pages/logout/LogoutPage';\n\nconst LoginPage = lazy(() => import('./pages/login'));\nconst LoadingPage = lazy(() => import('./pages/loading'));\nconst DashboardPage = lazy(() => import('./pages/dashboard'));\nconst RanksPage = lazy(() => import('./pages/ranks'));\nconst PlatoonsPage = lazy(() => import('./pages/platoons'));\nconst PointsPage = lazy(() => import('./pages/points'));\nconst StatusesPage = lazy(() => import('./pages/statuses'));\nconst PersonnelsPage = lazy(() => import('./pages/personnels'));\nconst EventsPage = lazy(() => import('./pages/events'));\n\nfunction App() {\n  const isAuthenticated = useSelector(state =>\n    state.auth.get('isAuthenticated')\n  );\n  const appLoaded = useSelector(state => state.pages.loading.get('appLoaded'));\n  const dispatch = useDispatch();\n\n  const checkAuthenticated = useCallback(() => {\n    dispatch(checkAuth());\n  }, [dispatch]);\n  const reloadApp = useCallback(() => {\n    dispatch(loadApp());\n  }, [dispatch]);\n\n  useEffect(() => {\n    checkAuthenticated();\n  }, [checkAuthenticated]);\n\n  useEffect(() => {\n    if (isAuthenticated && !appLoaded) {\n      reloadApp();\n    }\n  }, [appLoaded, isAuthenticated, reloadApp]);\n\n  return (\n    <Router>\n      <Suspense fallback={<LoadingFallback />}>\n        <Switch>\n          <Redirect from=\"/\" to=\"/login\" exact />\n          <Route path=\"/login\" component={LoginPage} />\n          <AuthRoute path=\"/app\" component={LoadingPage} />\n          <AuthRoute path=\"/dashboard\" component={DashboardPage} />\n          <AuthRoute path=\"/events\" component={EventsPage} />\n          <AuthRoute path=\"/ranks\" component={RanksPage} />\n          <AuthRoute path=\"/platoons\" component={PlatoonsPage} />\n          <AuthRoute path=\"/points\" component={PointsPage} />\n          <AuthRoute path=\"/statuses\" component={StatusesPage} />\n          <AuthRoute path=\"/personnels\" component={PersonnelsPage} />\n          <AuthRoute path=\"/logout\" component={LogoutPage} />\n          <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default memo(App);\n","import { Map } from 'immutable';\nimport { LOGIN } from '../pages/login/constants';\nimport { CHECK_AUTH_SUCCESS, CHECK_AUTH_FAILURE } from '../actions/constants';\n\nconst initialState = Map({\n  username: '',\n  isAuthenticated: false\n});\n\nconst authReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN:\n      return state.merge({\n        username: payload.username\n      });\n    case CHECK_AUTH_SUCCESS:\n      return state.merge({\n        isAuthenticated: payload\n      });\n    case CHECK_AUTH_FAILURE:\n      return state.merge({\n        isAuthenticated: false\n      });\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { fromJS, List } from 'immutable';\nimport { LOAD_RANKS_FAILURE, LOAD_RANKS_SUCCESS } from '../actions/constants';\nimport {\n  ADD_RANK_SUCCESS,\n  DELETE_RANK_SUCCESS,\n  UPDATE_RANK_SUCCESS\n} from '../pages/ranks/constants';\n\nconst initialState = fromJS({\n  ids: [],\n  ranks: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_RANKS_SUCCESS:\n      return state.merge({\n        ids: List(payload.ids),\n        ranks: fromJS(payload.ranks),\n        errors: List()\n      });\n    case ADD_RANK_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').push(payload._id),\n        ranks: state.get('ranks').set(payload._id, fromJS(payload))\n      });\n    case DELETE_RANK_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').delete(state.get('ids').indexOf(payload)),\n        ranks: state.get('ranks').delete(payload)\n      });\n    case UPDATE_RANK_SUCCESS:\n      return state.setIn(['ranks', payload._id], fromJS(payload));\n    case LOAD_RANKS_FAILURE:\n      return state.merge({\n        errors: List(payload)\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  LOAD_PLATOONS_FAILURE,\n  LOAD_PLATOONS_SUCCESS\n} from '../actions/constants';\nimport {\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON_SUCCESS,\n  UPDATE_PLATOON_SUCCESS\n} from '../pages/platoons/constants';\n\nconst initialState = fromJS({\n  ids: [],\n  platoons: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_PLATOONS_SUCCESS:\n      return state.merge({\n        ids: List(payload.ids),\n        platoons: fromJS(payload.platoons),\n        errors: List()\n      });\n    case ADD_PLATOON_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').push(payload._id),\n        platoons: state.get('platoons').set(payload._id, fromJS(payload))\n      });\n    case DELETE_PLATOON_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').delete(state.get('ids').indexOf(payload)),\n        platoons: state.get('platoons').delete(payload)\n      });\n    case UPDATE_PLATOON_SUCCESS:\n      return state.setIn(['platoons', payload._id], fromJS(payload));\n    case LOAD_PLATOONS_FAILURE:\n      return state.merge({\n        errors: List(payload)\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport { LOAD_EVENTS_FAILURE, LOAD_EVENTS_SUCCESS } from '../actions/constants';\nimport {\n  DELETE_EVENT_SUCCESS,\n  CREATE_EVENT_SUCCESS,\n  UPDATE_EVENT_SUCCESS\n} from '../pages/events/constants';\n\nconst initialState = fromJS({\n  ids: [],\n  events: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_EVENTS_SUCCESS:\n      return state.merge({\n        ids: List(payload.ids),\n        events: fromJS(payload.events),\n        errors: List()\n      });\n\n    case LOAD_EVENTS_FAILURE:\n      return state.merge({\n        errors: List(payload)\n      });\n    case CREATE_EVENT_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').push(payload._id),\n        events: state.get('events').set(payload._id, fromJS(payload))\n      });\n    case DELETE_EVENT_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').delete(state.get('ids').indexOf(payload._id)),\n        events: state.get('events').delete(payload._id)\n      });\n    case UPDATE_EVENT_SUCCESS:\n      return state.setIn(['events', payload._id], fromJS(payload));\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  LOAD_PERSONNELS_FAILURE,\n  LOAD_PERSONNELS_SUCCESS,\n  PERSONNELS_UPDATE_EVENT_POINTS,\n  PERSONNELS_UPDATE_PLATOON_NAME,\n  PERSONNELS_UPDATE_POINTS_SYSTEM,\n  PERSONNELS_UPDATE_RANK_NAME,\n  PERSONNELS_UPDATE_STATUS_NAME\n} from '../actions/constants';\nimport {\n  DELETE_PERSONNEL_SUCCESS,\n  ADD_PERSONNEL_SUCCESS,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT_SUCCESS,\n  EDIT_PERSONNEL_POINT_SUCCESS,\n  UPDATE_PERSON_SUCCESS\n} from '../pages/personnels/constants';\n\nconst initialState = fromJS({\n  ids: [],\n  personnels: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_PERSONNELS_SUCCESS:\n      return state.merge({\n        ids: List(payload.ids),\n        personnels: fromJS(payload.personnels),\n        errors: List()\n      });\n    case LOAD_PERSONNELS_FAILURE:\n      return state.merge({\n        errors: List(payload)\n      });\n    case DELETE_PERSONNEL_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').delete(state.get('ids').indexOf(payload)),\n        personnels: state.get('personnels').delete(payload)\n      });\n    case ADD_STATUS_SUCCESS:\n      return state.updateIn(\n        ['personnels', payload.personnelId, 'statuses'],\n        statuses => statuses.push(fromJS(payload.status))\n      );\n    case DELETE_STATUS_SUCCESS:\n      return state.updateIn(\n        ['personnels', payload.personnelId, 'statuses'],\n        statuses =>\n          statuses.filter(status => status.get('_id') !== payload.statusId)\n      );\n    case ADD_BLOCKOUT_SUCCESS:\n    case DELETE_BLOCKOUT_SUCCESS:\n      return state.setIn(\n        ['personnels', payload.personnelId, 'blockOutDates'],\n        List(payload.blockoutDates)\n      );\n    case EDIT_PERSONNEL_POINT_SUCCESS:\n      return state.updateIn(\n        ['personnels', payload.personnelId, 'points'],\n        points => {\n          return points.map(point => {\n            if (point.get('_id') === payload.personnelPointId) {\n              return point.set('points', payload.points);\n            }\n            return point;\n          });\n        }\n      );\n    case UPDATE_PERSON_SUCCESS:\n      return state.mergeIn(['personnels', payload._id], fromJS(payload));\n    case PERSONNELS_UPDATE_EVENT_POINTS:\n    case PERSONNELS_UPDATE_PLATOON_NAME:\n    case PERSONNELS_UPDATE_RANK_NAME:\n    case PERSONNELS_UPDATE_POINTS_SYSTEM:\n    case PERSONNELS_UPDATE_STATUS_NAME:\n      return state.merge({\n        personnels: payload\n      });\n    case ADD_PERSONNEL_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').push(payload._id),\n        personnels: state.get('personnels').set(payload._id, fromJS(payload))\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport { LOAD_POINTS_FAILURE, LOAD_POINTS_SUCCESS } from '../actions/constants';\nimport {\n  ADD_POINT_SUCCESS,\n  DELETE_POINT_SUCCESS,\n  UPDATE_POINT_SUCCESS\n} from '../pages/points/constants';\n\nconst initialState = fromJS({\n  ids: [],\n  points: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_POINTS_SUCCESS:\n      return state.merge({\n        ids: List(payload.ids),\n        points: fromJS(payload.points),\n        errors: List()\n      });\n    case ADD_POINT_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').push(payload._id),\n        points: state.get('points').set(payload._id, fromJS(payload))\n      });\n    case DELETE_POINT_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').delete(state.get('ids').indexOf(payload)),\n        points: state.get('points').delete(payload)\n      });\n    case UPDATE_POINT_SUCCESS:\n      return state.setIn(['points', payload._id], fromJS(payload));\n    case LOAD_POINTS_FAILURE:\n      return state.merge({\n        errors: List(payload)\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  LOAD_STATUSES_FAILURE,\n  LOAD_STATUSES_SUCCESS\n} from '../actions/constants';\nimport {\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS_SUCCESS,\n  UPDATE_STATUS_SUCCESS\n} from '../pages/statuses/constants';\n\nconst initialState = fromJS({\n  ids: [],\n  statuses: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_STATUSES_SUCCESS:\n      return state.merge({\n        ids: List(payload.ids),\n        statuses: fromJS(payload.statuses),\n        errors: List()\n      });\n    case ADD_STATUS_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').push(payload._id),\n        statuses: state.get('statuses').set(payload._id, fromJS(payload))\n      });\n    case DELETE_STATUS_SUCCESS:\n      return state.merge({\n        ids: state.get('ids').delete(state.get('ids').indexOf(payload)),\n        statuses: state.get('statuses').delete(payload)\n      });\n    case UPDATE_STATUS_SUCCESS:\n      return state.setIn(['statuses', payload._id], fromJS(payload));\n    case LOAD_STATUSES_FAILURE:\n      return state.merge({\n        errors: List(payload)\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport { LOGIN, LOGIN_FAIL } from './constants';\nimport {\n  CHECK_AUTH_SUCCESS,\n  CHECK_AUTH_FAILURE,\n  LOG_OUT_SUCCESS\n} from '../../actions/constants';\n\nconst initialState = fromJS({\n  isAuthenticating: false,\n  errors: [],\n  loggedOut: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN:\n      return state.merge({\n        isAuthenticating: true,\n        errors: List(),\n        loggedOut: false\n      });\n    case LOGIN_FAIL:\n      return state.merge({\n        isAuthenticating: false,\n        errors: List(payload),\n        loggedOut: false\n      });\n    case LOG_OUT_SUCCESS:\n      return state.set('loggedOut', true);\n    case CHECK_AUTH_SUCCESS:\n    case CHECK_AUTH_FAILURE:\n      return state.merge({\n        isAuthenticating: false\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOAD_APP, LOAD_APP_FAILURE, LOAD_APP_SUCCESS } from './constants';\nimport * as CONST from '../../actions/constants';\n\nconst initialState = Map({\n  isLoading: false,\n  appLoaded: false,\n  appLoadedFailure: false,\n  taskLoading: 6\n});\n\nexport default (state = initialState, { type }) => {\n  switch (type) {\n    case CONST.LOAD_EVENTS:\n    case CONST.LOAD_PERSONNELS:\n    case CONST.LOAD_PLATOONS:\n    case CONST.LOAD_POINTS:\n    case CONST.LOAD_RANKS:\n    case CONST.LOAD_STATUSES:\n      return state.update('taskLoading', val => val + 1);\n    case CONST.LOAD_EVENTS_SUCCESS:\n    case CONST.LOAD_PERSONNELS_SUCCESS:\n    case CONST.LOAD_PLATOONS_SUCCESS:\n    case CONST.LOAD_POINTS_SUCCESS:\n    case CONST.LOAD_RANKS_SUCCESS:\n    case CONST.LOAD_STATUSES_SUCCESS:\n    case CONST.LOAD_EVENTS_FAILURE:\n    case CONST.LOAD_PERSONNELS_FAILURE:\n    case CONST.LOAD_PLATOONS_FAILURE:\n    case CONST.LOAD_POINTS_FAILURE:\n    case CONST.LOAD_RANKS_FAILURE:\n    case CONST.LOAD_STATUSES_FAILURE:\n      return state.update('taskLoading', val => (val === 0 ? 0 : val - 1));\n    case LOAD_APP:\n      return state.merge({\n        isLoading: true,\n        appLoaded: false,\n        appLoadedFailure: false\n      });\n    case LOAD_APP_FAILURE:\n      return state.merge({\n        taskLoading: 0,\n        isLoading: false,\n        appLoaded: false,\n        appLoadedFailure: true\n      });\n    case LOAD_APP_SUCCESS:\n      return state.merge({\n        taskLoading: 0,\n        isLoading: false,\n        appLoaded: true\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  ADD_RANK_FAILURE,\n  ADD_RANK,\n  ADD_RANK_SUCCESS,\n  DELETE_RANK,\n  DELETE_RANK_SUCCESS,\n  DELETE_RANK_FAILURE,\n  UPDATE_RANK,\n  UPDATE_RANK_FAILURE,\n  UPDATE_RANK_SUCCESS,\n  CLEAR_ERROR\n} from './constants';\n\nconst initialState = fromJS({\n  errors: [],\n  actionInProgress: 0\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_RANK:\n    case DELETE_RANK:\n    case UPDATE_RANK:\n      return state.merge({\n        errors: List(),\n        actionInProgress: state.get('actionInProgress') + 1\n      });\n    case ADD_RANK_SUCCESS:\n    case DELETE_RANK_SUCCESS:\n    case UPDATE_RANK_SUCCESS:\n      return state.merge({\n        errors: [],\n        actionInProgress: state.get('actionInProgress') - 1\n      });\n    case ADD_RANK_FAILURE:\n    case DELETE_RANK_FAILURE:\n    case UPDATE_RANK_FAILURE:\n      return state.merge({\n        errors: List(payload),\n        actionInProgress: state.get('actionInProgress') - 1\n      });\n    case CLEAR_ERROR:\n      return state.merge({\n        errors: List()\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  ADD_PLATOON_FAILURE,\n  ADD_PLATOON,\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON,\n  DELETE_PLATOON_SUCCESS,\n  DELETE_PLATOON_FAILURE,\n  UPDATE_PLATOON,\n  UPDATE_PLATOON_FAILURE,\n  UPDATE_PLATOON_SUCCESS,\n  CLEAR_ERROR\n} from './constants';\n\nconst initialState = fromJS({\n  errors: [],\n  actionInProgress: 0\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PLATOON:\n    case DELETE_PLATOON:\n    case UPDATE_PLATOON:\n      return state.merge({\n        actionInProgress: state.get('actionInProgress') + 1,\n        errors: List()\n      });\n    case ADD_PLATOON_SUCCESS:\n    case DELETE_PLATOON_SUCCESS:\n    case UPDATE_PLATOON_SUCCESS:\n      return state.merge({\n        actionInProgress: state.get('actionInProgress') - 1,\n        errors: List()\n      });\n    case ADD_PLATOON_FAILURE:\n    case DELETE_PLATOON_FAILURE:\n    case UPDATE_PLATOON_FAILURE:\n      return state.merge({\n        errors: List(payload),\n        actionInProgress: state.get('actionInProgress') - 1\n      });\n    case CLEAR_ERROR:\n      return state.merge({\n        errors: []\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  ADD_POINT_FAILURE,\n  ADD_POINT,\n  ADD_POINT_SUCCESS,\n  DELETE_POINT,\n  DELETE_POINT_SUCCESS,\n  DELETE_POINT_FAILURE,\n  UPDATE_POINT,\n  UPDATE_POINT_FAILURE,\n  UPDATE_POINT_SUCCESS,\n  CLEAR_ERROR\n} from './constants';\n\nconst initialState = fromJS({\n  errors: [],\n  actionInProgress: 0\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_POINT:\n    case DELETE_POINT:\n    case UPDATE_POINT:\n      return state.merge({\n        errors: List(),\n        actionInProgress: state.get('actionInProgress') + 1\n      });\n    case ADD_POINT_SUCCESS:\n    case DELETE_POINT_SUCCESS:\n    case UPDATE_POINT_SUCCESS:\n      return state.merge({\n        actionInProgress: state.get('actionInProgress') - 1\n      });\n    case ADD_POINT_FAILURE:\n    case DELETE_POINT_FAILURE:\n    case UPDATE_POINT_FAILURE:\n      return state.merge({\n        errors: List(payload),\n        actionInProgress: state.get('actionInProgress') - 1\n      });\n    case CLEAR_ERROR:\n      return state.set('errors', List());\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  ADD_STATUS_FAILURE,\n  ADD_STATUS,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_SUCCESS,\n  DELETE_STATUS_FAILURE,\n  UPDATE_STATUS,\n  UPDATE_STATUS_FAILURE,\n  UPDATE_STATUS_SUCCESS,\n  CLEAR_ERROR\n} from './constants';\n\nconst initialState = fromJS({\n  errors: [],\n  actionInProgress: 0\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS:\n    case DELETE_STATUS:\n    case UPDATE_STATUS:\n      return state.merge({\n        actionInProgress: state.get('actionInProgress') + 1,\n        errors: List()\n      });\n    case ADD_STATUS_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n    case UPDATE_STATUS_SUCCESS:\n      return state.merge({\n        actionInProgress: state.get('actionInProgress') - 1\n      });\n    case ADD_STATUS_FAILURE:\n    case DELETE_STATUS_FAILURE:\n    case UPDATE_STATUS_FAILURE:\n      return state.merge({\n        errors: List(payload),\n        actionInProgress: state.get('actionInProgress') - 1\n      });\n    case CLEAR_ERROR:\n      return state.set('errors', List());\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  DELETE_PERSONNEL,\n  DELETE_PERSONNEL_FAILURE,\n  DELETE_PERSONNEL_SUCCESS,\n  CLEAR_ERROR_MESSAGE\n} from './constants';\n\nconst initialState = fromJS({\n  errors: [],\n  actionInProgress: 0\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DELETE_PERSONNEL:\n      return state.merge({\n        actionInProgress: state.get('actionInProgress') + 1,\n        errors: List()\n      });\n    case DELETE_PERSONNEL_SUCCESS:\n      return state.merge({\n        actionInProgress: state.get('actionInProgress') - 1\n      });\n    case DELETE_PERSONNEL_FAILURE:\n      return state.merge({\n        errors: List(payload),\n        actionInProgress: state.get('actionInProgress') - 1\n      });\n    case CLEAR_ERROR_MESSAGE:\n      return state.merge({\n        errors: List()\n      });\n    default:\n      return state;\n  }\n};\n","import { List, fromJS } from 'immutable';\nimport {\n  ADD_PERSONNEL,\n  ADD_PERSONNEL_FAILURE,\n  ADD_PERSONNEL_SUCCESS,\n  CLEAR_ADD_PERSONNEL_ERROR\n} from './constants';\n\nconst initialState = fromJS({\n  actionInProgress: false,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PERSONNEL:\n      return state.merge({\n        errors: List(),\n        actionInProgress: true\n      });\n    case ADD_PERSONNEL_SUCCESS:\n      return state.merge({\n        actionInProgress: false,\n        errors: List()\n      });\n    case ADD_PERSONNEL_FAILURE:\n      return state.merge({\n        actionInProgress: false,\n        errors: List(payload)\n      });\n    case CLEAR_ADD_PERSONNEL_ERROR:\n      return state.merge({\n        errors: List()\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT,\n  ADD_BLOCKOUT_FAILURE,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT,\n  DELETE_BLOCKOUT_FAILURE,\n  DELETE_BLOCKOUT_SUCCESS,\n  CLEAR_ERRORS,\n  EDIT_PERSONNEL_POINT,\n  EDIT_PERSONNEL_POINT_FAILURE,\n  EDIT_PERSONNEL_POINT_SUCCESS\n} from './constants';\n\nconst initialState = fromJS({\n  actionInProgress: 0,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS:\n    case DELETE_STATUS:\n    case ADD_BLOCKOUT:\n    case DELETE_BLOCKOUT:\n    case EDIT_PERSONNEL_POINT:\n      return state.merge({\n        actionInProgress: state.get('actionInProgress') + 1\n      });\n    case ADD_STATUS_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n    case ADD_BLOCKOUT_SUCCESS:\n    case DELETE_BLOCKOUT_SUCCESS:\n    case EDIT_PERSONNEL_POINT_SUCCESS:\n      return state.merge({\n        actionInProgress: state.get('actionInProgress') - 1\n      });\n\n    case ADD_STATUS_FAILURE:\n    case DELETE_STATUS_FAILURE:\n    case ADD_BLOCKOUT_FAILURE:\n    case DELETE_BLOCKOUT_FAILURE:\n    case EDIT_PERSONNEL_POINT_FAILURE:\n      return state.merge({\n        actionInProgress: state.get('actionInProgress') - 1,\n        errors: List(payload)\n      });\n    case CLEAR_ERRORS:\n      return state.merge({\n        errors: List()\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  UPDATE_PERSON,\n  UPDATE_PERSON_FAILURE,\n  UPDATE_PERSON_SUCCESS,\n  UPDATE_PERSON_NO_CHANGE\n} from './constants';\n\nconst initialState = fromJS({\n  isUpdating: false,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case UPDATE_PERSON:\n      return state.merge({\n        isUpdating: true,\n        errors: List()\n      });\n\n    case UPDATE_PERSON_SUCCESS:\n    case UPDATE_PERSON_NO_CHANGE:\n      return state.merge({\n        isUpdating: false\n      });\n    case UPDATE_PERSON_FAILURE:\n      return state.merge({\n        isUpdating: false,\n        errors: List(payload)\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport allReducer from './all/reducer';\nimport addReducer from './add/reducer';\nimport singleReducer from './single/reducer';\nimport editReducer from './edit/reducer';\n\nconst personnelsPageReducers = combineReducers({\n  all: allReducer,\n  add: addReducer,\n  single: singleReducer,\n  edit: editReducer\n});\n\nexport default personnelsPageReducers;\n","import { fromJS, List } from 'immutable';\nimport {\n  DELETE_EVENT,\n  DELETE_EVENT_FAILURE,\n  DELETE_EVENT_SUCCESS\n} from './constants';\n\nconst initialState = fromJS({\n  errors: [],\n  isDeleting: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DELETE_EVENT:\n      return state.merge({\n        errors: List(),\n        isDeleting: true\n      });\n\n    case DELETE_EVENT_SUCCESS:\n      return state.merge({\n        isDeleting: false,\n        errors: List()\n      });\n\n    case DELETE_EVENT_FAILURE:\n      return state.merge({\n        isDeleting: false,\n        errors: List(payload)\n      });\n\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  CREATE_EVENT,\n  CREATE_EVENT_FAILURE,\n  CREATE_EVENT_SUCCESS\n} from './constants';\n\nconst initialState = fromJS({\n  errors: [],\n  isAdding: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CREATE_EVENT:\n      return state.merge({\n        isAdding: true,\n        errors: List()\n      });\n    case CREATE_EVENT_SUCCESS:\n      return state.merge({\n        isAdding: false,\n        errors: List()\n      });\n    case CREATE_EVENT_FAILURE:\n      return state.merge({\n        isAdding: false,\n        errors: List(payload)\n      });\n    default:\n      return state;\n  }\n};\n","import { fromJS, List } from 'immutable';\nimport {\n  UPDATE_EVENT,\n  UPDATE_EVENT_FAILURE,\n  UPDATE_EVENT_SUCCESS,\n  UPDATE_EVENT_NO_CHANGE\n} from './constants';\n\nconst initialState = fromJS({\n  isUpdating: false,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case UPDATE_EVENT:\n      return state.merge({\n        isUpdating: true,\n        errors: List()\n      });\n\n    case UPDATE_EVENT_SUCCESS:\n    case UPDATE_EVENT_NO_CHANGE:\n      return state.merge({\n        isUpdating: false\n      });\n    case UPDATE_EVENT_FAILURE:\n      return state.merge({\n        isUpdating: false,\n        errors: List(payload)\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport deleteReducer from './delete/reducer';\nimport addReducer from './add/reducer';\nimport editReducer from './edit/reducer';\n\nexport default combineReducers({\n  delete: deleteReducer,\n  add: addReducer,\n  edit: editReducer\n});\n","import { combineReducers } from 'redux';\nimport loginPageReducer from '../pages/login/reducer';\nimport loadingPageReducer from '../pages/loading/reducer';\nimport ranksPageReducer from '../pages/ranks/reducer';\nimport platoonsPageReducer from '../pages/platoons/reducer';\nimport pointsPageReducer from '../pages/points/reducer';\nimport statusesPageReducer from '../pages/statuses/reducer';\nimport personnelsPageReducer from '../pages/personnels/reducer';\nimport eventsPageReducer from '../pages/events/reducer';\n\nconst pages = combineReducers({\n  login: loginPageReducer,\n  loading: loadingPageReducer,\n  events: eventsPageReducer,\n  ranks: ranksPageReducer,\n  platoons: platoonsPageReducer,\n  points: pointsPageReducer,\n  statuses: statusesPageReducer,\n  personnels: personnelsPageReducer\n});\n\nexport default pages;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport immutableTransform from 'redux-persist-transform-immutable';\nimport { LOG_OUT_SUCCESS } from '../actions/constants';\n\n// GLOBAL REDUCERS\nimport authReducer from './authReducer';\nimport ranksReducer from './ranksReducer';\nimport platoonsReducer from './platoonsReducer';\nimport eventsReducer from './eventsReducer';\nimport personnelsReducer from './personnelsReducer';\nimport pointsReducer from './pointsReducer';\nimport statusesReducer from './statusesReducer';\nimport pagesReducer from './pagesReducer';\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n  ranks: ranksReducer,\n  platoons: platoonsReducer,\n  events: eventsReducer,\n  personnels: personnelsReducer,\n  points: pointsReducer,\n  statuses: statusesReducer,\n  pages: pagesReducer\n});\n\nconst rootReducer = (state, action) => {\n  let newState = state;\n  if (action.type === LOG_OUT_SUCCESS) {\n    newState = undefined;\n  }\n  return appReducer(newState, action);\n};\n\nconst persistConfig = {\n  transforms: [immutableTransform()],\n  key: 'root',\n  storage,\n  blacklist: ['pages']\n};\n\nconst persistedRootReducer = persistReducer(persistConfig, rootReducer);\n\nexport default persistedRootReducer;\n","import api from '../utils/api';\n\nclass AccountService {\n  static login(username, password) {\n    return api\n      .post('/accounts/login', { username, password })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static checkAuthenticated() {\n    return api\n      .get('/accounts/isauthenticated')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static logout() {\n    return api\n      .post('/accounts/logout')\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default AccountService;\n","import { put, call, takeLatest, all, select } from 'redux-saga/effects';\nimport { LOG_OUT, CHECK_AUTH } from '../actions/constants';\nimport {\n  logoutSuccess,\n  logoutFailure,\n  checkAuthFailure,\n  checkAuthSuccess,\n  logout as logoutAction\n} from '../actions/authActions';\nimport AccountService from '../services/accounts';\n\nfunction* logout() {\n  try {\n    const isAuthenticated = yield select(state =>\n      state.auth.get('isAuthenticated')\n    );\n    if (isAuthenticated) {\n      yield call(AccountService.logout);\n      yield put(logoutSuccess());\n    }\n  } catch (error) {\n    yield put(logoutFailure());\n  }\n}\n\nfunction* checkAuth() {\n  try {\n    const response = yield call(AccountService.checkAuthenticated);\n    if (!response.ok) {\n      yield put(checkAuthFailure());\n    } else {\n      const isAuth = response.data.isAuthenticated;\n      yield put(checkAuthSuccess(isAuth));\n      if (!isAuth) {\n        yield put(logoutAction());\n      }\n    }\n  } catch (error) {\n    yield put(checkAuthFailure(error.message || ['Unable to login']));\n  }\n}\n\nfunction* authSagaWatcher() {\n  yield all([takeLatest(CHECK_AUTH, checkAuth), takeLatest(LOG_OUT, logout)]);\n}\n\nexport default authSagaWatcher;\n","import {\n  LOAD_PERSONNELS,\n  LOAD_PERSONNELS_FAILURE,\n  LOAD_PERSONNELS_SUCCESS,\n  PERSONNELS_UPDATE_EVENT_POINTS,\n  PERSONNELS_UPDATE_PLATOON_NAME,\n  PERSONNELS_UPDATE_POINTS_SYSTEM,\n  PERSONNELS_UPDATE_RANK_NAME,\n  PERSONNELS_UPDATE_STATUS_NAME\n} from './constants';\n\nexport const loadPersonnels = () => ({\n  type: LOAD_PERSONNELS\n});\n\nexport const loadPersonnelsSuccess = payload => ({\n  type: LOAD_PERSONNELS_SUCCESS,\n  payload\n});\n\nexport const loadPersonnelsFailure = payload => ({\n  type: LOAD_PERSONNELS_FAILURE,\n  payload\n});\n\nexport const personnelsUpdateEventPoints = payload => ({\n  type: PERSONNELS_UPDATE_EVENT_POINTS,\n  payload\n});\nexport const personnelsUpdatePointsSystem = payload => ({\n  type: PERSONNELS_UPDATE_POINTS_SYSTEM,\n  payload\n});\n\nexport const personnelsUpdatePlatoon = payload => ({\n  type: PERSONNELS_UPDATE_PLATOON_NAME,\n  payload\n});\n\nexport const personnelsUpdateRank = payload => ({\n  type: PERSONNELS_UPDATE_RANK_NAME,\n  payload\n});\nexport const personnelsUpdateStatus = payload => ({\n  type: PERSONNELS_UPDATE_STATUS_NAME,\n  payload\n});\n","import api from '../utils/api';\n\nclass PersonnelsService {\n  static getPersonnels() {\n    return api\n      .get('/person')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPersonnel(name, rank, platoon) {\n    return api\n      .post('/person/new', { name, rank, platoon })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static editPersonnel(id, updatedPersonnel) {\n    return api\n      .put(`/person/${id}`, updatedPersonnel)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnel(id) {\n    return api\n      .delete(`/person/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static addPersonnelStatus(personnelId, statusId, startDate, endDate) {\n    return api\n      .post(`/person/status/${personnelId}/add`, {\n        statusId,\n        startDate,\n        endDate\n      })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnelStatus(personnelId, pStatusId) {\n    return api\n      .delete(`/person/status/${personnelId}/${pStatusId}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static addPersonnelBlockout(personnelId, date) {\n    return api\n      .post(`/person/${personnelId}/blockout`, date)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnelBlockout(personnelId, date) {\n    return api\n      .post(`/person/${personnelId}/blockout/delete`, { ...date })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static editPersonnelPoint(personnelId, personnelPointId, points) {\n    return api\n      .put(`person/point/${personnelId}/${personnelPointId}`, { points })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PersonnelsService;\n","import {\n  all,\n  takeLatest,\n  select,\n  take,\n  race,\n  put,\n  takeEvery,\n  call\n} from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\n\nimport {\n  loadPersonnelsFailure,\n  loadPersonnelsSuccess,\n  personnelsUpdateEventPoints,\n  personnelsUpdatePlatoon,\n  personnelsUpdatePointsSystem,\n  personnelsUpdateRank,\n  personnelsUpdateStatus\n} from '../actions/personnelsActions';\n\nimport {\n  UPDATE_RANK,\n  UPDATE_RANK_SUCCESS,\n  UPDATE_RANK_FAILURE\n} from '../pages/ranks/constants';\nimport {\n  UPDATE_PLATOON,\n  UPDATE_PLATOON_FAILURE,\n  UPDATE_PLATOON_SUCCESS\n} from '../pages/platoons/constants';\n\nimport {\n  UPDATE_EVENT,\n  UPDATE_EVENT_SUCCESS,\n  UPDATE_EVENT_FAILURE,\n  CREATE_EVENT_SUCCESS,\n  DELETE_EVENT,\n  DELETE_EVENT_FAILURE,\n  DELETE_EVENT_SUCCESS\n} from '../pages/events/constants';\n\nimport {\n  ADD_POINT_SUCCESS,\n  DELETE_POINT,\n  DELETE_POINT_SUCCESS,\n  DELETE_POINT_FAILURE,\n  UPDATE_POINT_SUCCESS\n} from '../pages/points/constants';\n\nimport {\n  UPDATE_STATUS,\n  UPDATE_STATUS_FAILURE,\n  UPDATE_STATUS_SUCCESS\n} from '../pages/statuses/constants';\n\nimport PersonnelsService from '../services/personnels';\n\nfunction* refreshPersonnelsFromServer() {\n  try {\n    const response = yield call(PersonnelsService.getPersonnels);\n    if (response.ok) {\n      const personnels = {};\n      const ids = [];\n\n      response.data.forEach(person => {\n        const { _id: id } = person;\n        personnels[id] = person;\n        ids.push(id);\n      });\n      yield put(loadPersonnelsSuccess({ ids, personnels }));\n    } else {\n      yield put(\n        loadPersonnelsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPersonnelsFailure([error.message]));\n  }\n}\nfunction* updatePersonnelsPointSystemName() {\n  const points = yield select(state => state.points.get('points'));\n\n  const ids = yield select(state => state.personnels.get('ids'));\n  let personnels = yield select(state => state.personnels.get('personnels'));\n\n  ids.forEach(id => {\n    const person = personnels.get(id);\n    const newPoints = person.get('points').map(point => {\n      let currPoint = point;\n      currPoint = currPoint.set(\n        'pointSystem',\n        points.get(currPoint.getIn(['pointSystem', '_id']))\n      );\n      return currPoint;\n    });\n    personnels = personnels.setIn([id, 'points'], newPoints);\n  });\n  yield put(personnelsUpdatePointsSystem(personnels));\n}\n\nfunction* deletePersonnelsPointsSystem(action) {\n  const eventIdToDelete = action.payload;\n  const { success } = yield race({\n    success: take(DELETE_POINT_SUCCESS),\n    failure: take(DELETE_POINT_FAILURE)\n  });\n  if (success) {\n    const personnelsState = yield select(state => state.personnels);\n    const ids = personnelsState.get('ids');\n    let personnels = personnelsState.get('personnels');\n    ids.forEach(id => {\n      const person = personnels.get(id);\n      const newPoints = person.get('points').filter(point => {\n        return point.getIn(['pointSystem', '_id']) !== eventIdToDelete;\n      });\n      personnels = personnels.setIn([id, 'points'], newPoints);\n    });\n\n    yield put(personnelsUpdatePointsSystem(personnels));\n  }\n}\n\nfunction* revertPersonnelPoints(event) {\n  let personnels = yield select(state => state.personnels.get('personnels'));\n  const personnelIds = event.get('personnels').map(person => person.get('_id'));\n\n  personnelIds.forEach(id => {\n    const person = personnels.get(id);\n    const newPoints = person.get('points').map(point => {\n      let currPoint = point;\n      if (\n        point.getIn(['pointSystem', '_id']) ===\n        event.getIn(['pointSystem', '_id'])\n      ) {\n        currPoint = currPoint.set(\n          'points',\n          currPoint.get('points') - event.get('pointsAllocation')\n        );\n        return currPoint;\n      }\n      return currPoint;\n    });\n    const newEventsDate = person\n      .get('blockOutDates')\n      .indexOf(event.get('date') >= 0)\n      ? person\n          .get('eventsDate')\n          .delete(person.get('eventsDate').indexOf(event.get('date')))\n      : null;\n\n    personnels = personnels.setIn([id, 'points'], newPoints);\n\n    if (newEventsDate) {\n      personnels = personnels.setIn([id, 'eventsDate'], newEventsDate);\n    }\n  });\n  return personnels;\n}\n\nfunction* addPersonnelPoints(event) {\n  let personnels = yield select(state => state.personnels.get('personnels'));\n  const personnelIds = event.get('personnels').map(person => person.get('_id'));\n\n  personnelIds.forEach(pId => {\n    const person = personnels.get(pId);\n    const newPoints = person.get('points').map(point => {\n      let currPoint = point;\n      if (\n        point.getIn(['pointSystem', '_id']) ===\n        event.getIn(['pointSystem', '_id'])\n      ) {\n        currPoint = currPoint.set(\n          'points',\n          currPoint.get('points') + event.get('pointsAllocation')\n        );\n        return currPoint;\n      }\n      return currPoint;\n    });\n\n    const newEventsDate = person\n      .get('eventsDate')\n      .indexOf(event.get('date') < 0)\n      ? person.get('eventsDate').push(event.get('date'))\n      : null;\n\n    personnels = personnels.setIn([pId, 'points'], newPoints);\n\n    if (newEventsDate) {\n      personnels = personnels.setIn([pId, 'eventsDate'], newEventsDate);\n    }\n  });\n  return personnels;\n}\n\nfunction* deleteEventUpdatePoints(action) {\n  const { revert, eventId } = action.payload;\n  if (revert) {\n    const event = yield select(state =>\n      state.events.get('events').get(eventId)\n    );\n    const { success } = yield race({\n      success: take(DELETE_EVENT_SUCCESS),\n      failure: take(DELETE_EVENT_FAILURE)\n    });\n    if (success) {\n      const personnels = yield call(revertPersonnelPoints, event);\n      yield put(personnelsUpdateEventPoints(personnels));\n    }\n  }\n}\n\nfunction* createEventUpdatePoints(action) {\n  const { _id: id } = action.payload;\n  const event = yield select(state => state.events.get('events').get(id));\n  const personnels = yield call(addPersonnelPoints, event);\n  yield put(personnelsUpdateEventPoints(personnels));\n}\n\nfunction* updateEventUpdatePoints(action) {\n  const { eventId } = action.payload;\n  const oldEvent = yield select(state =>\n    state.events.get('events').get(eventId)\n  );\n  const { successAction } = yield race({\n    successAction: take(UPDATE_EVENT_SUCCESS),\n    failure: take(UPDATE_EVENT_FAILURE)\n  });\n  if (successAction) {\n    let personnels = yield call(revertPersonnelPoints, oldEvent);\n    yield put(personnelsUpdateEventPoints(personnels));\n    const newEvent = fromJS(successAction.payload);\n    personnels = yield call(addPersonnelPoints, newEvent);\n    yield put(personnelsUpdateEventPoints(personnels));\n  }\n}\n\nfunction* updatePersonnelsPlatoonName(action) {\n  const { id, name } = action.payload;\n  const { success } = yield race({\n    success: take(UPDATE_PLATOON_SUCCESS),\n    failure: take(UPDATE_PLATOON_FAILURE)\n  });\n  if (success) {\n    const personnelsState = yield select(state => state.personnels);\n    const ids = personnelsState.get('ids');\n    let personnels = personnelsState.get('personnels');\n    ids.forEach(personId => {\n      let person = personnels.get(personId);\n      if (person.getIn(['platoon', '_id']) === id) {\n        person = person.setIn(['platoon', 'name'], String(name).toUpperCase());\n      }\n      personnels = personnels.set(personId, person);\n    });\n    yield put(personnelsUpdatePlatoon(personnels));\n  }\n}\n\nfunction* updatePersonnelsRankName(action) {\n  const { id, name } = action.payload;\n  const { success } = yield race({\n    success: take(UPDATE_RANK_SUCCESS),\n    failure: take(UPDATE_RANK_FAILURE)\n  });\n\n  if (success) {\n    const personnelsState = yield select(state => state.personnels);\n    const ids = personnelsState.get('ids');\n    let personnels = personnelsState.get('personnels');\n    ids.forEach(personId => {\n      let person = personnels.get(personId);\n      if (person.getIn(['rank', '_id']) === id) {\n        person = person.setIn(['rank', 'name'], String(name).toUpperCase());\n      }\n      personnels = personnels.set(personId, person);\n    });\n    yield put(personnelsUpdateRank(personnels));\n  }\n}\n\nfunction* updateStatusesName(action) {\n  const { id, name } = action.payload;\n  const { success } = yield race({\n    success: take(UPDATE_STATUS_SUCCESS),\n    failure: take(UPDATE_STATUS_FAILURE)\n  });\n\n  if (success) {\n    const personnelsState = yield select(state => state.personnels);\n    const ids = personnelsState.get('ids');\n    let personnels = personnelsState.get('personnels');\n    ids.forEach(personId => {\n      const person = personnels.get(personId);\n      const newStatuses = person.get('statuses').map(status => {\n        let currStatus = status;\n        if (status.getIn(['statusId', '_id']) === id) {\n          currStatus = currStatus.setIn(\n            ['statusId', 'name'],\n            String(name).toUpperCase()\n          );\n        }\n        return currStatus;\n      });\n      personnels = personnels.setIn([personId, 'statuses'], newStatuses);\n    });\n    yield put(personnelsUpdateStatus(personnels));\n  }\n}\n\nfunction* personnelsSagaWatcher() {\n  yield all([\n    takeEvery(UPDATE_POINT_SUCCESS, updatePersonnelsPointSystemName),\n    takeLatest(ADD_POINT_SUCCESS, refreshPersonnelsFromServer),\n    takeEvery(DELETE_POINT, deletePersonnelsPointsSystem),\n    takeEvery(UPDATE_PLATOON, updatePersonnelsPlatoonName),\n    takeEvery(UPDATE_RANK, updatePersonnelsRankName),\n    takeEvery(UPDATE_STATUS, updateStatusesName),\n    takeEvery(DELETE_EVENT, deleteEventUpdatePoints),\n    // takeLatest(CREATE_EVENT_SUCCESS, refreshPersonnelsFromServer)\n    takeEvery(CREATE_EVENT_SUCCESS, createEventUpdatePoints),\n    takeEvery(UPDATE_EVENT, updateEventUpdatePoints)\n  ]);\n}\n\nexport default personnelsSagaWatcher;\n","import { takeLatest, put, call, delay } from 'redux-saga/effects';\nimport { LOGIN } from './constants';\nimport { loginFailure, loginSuccess } from './actions';\nimport { checkAuth } from '../../actions/authActions';\nimport AccountService from '../../services/accounts';\n\nfunction* login(action) {\n  try {\n    const { username, password } = action.payload;\n    const response = yield call(AccountService.login, username, password);\n    yield delay(500);\n    if (!response.ok) {\n      if (response.status === 420) {\n        yield put(\n          loginFailure(['Too many login request, please login in 30mins time'])\n        );\n      }\n      const errors = [];\n      if (response.data.errors) {\n        errors.push(response.data.errors);\n      }\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n      yield put(loginFailure(errors));\n    } else {\n      yield put(loginSuccess());\n      yield put(checkAuth());\n    }\n  } catch (error) {\n    yield put(loginFailure([error.message || 'Unable to login']));\n  }\n}\n\nfunction* loginWatcher() {\n  yield takeLatest(LOGIN, login);\n}\n\nexport default loginWatcher;\n","import {\n  LOAD_RANKS,\n  LOAD_RANKS_FAILURE,\n  LOAD_RANKS_SUCCESS\n} from './constants';\n\nexport const loadRanks = () => ({\n  type: LOAD_RANKS\n});\n\nexport const loadRanksSuccess = payload => ({\n  type: LOAD_RANKS_SUCCESS,\n  payload\n});\n\nexport const loadRanksFailure = payload => ({\n  type: LOAD_RANKS_FAILURE,\n  payload\n});\n","import {\n  LOAD_PLATOONS,\n  LOAD_PLATOONS_FAILURE,\n  LOAD_PLATOONS_SUCCESS\n} from './constants';\n\nexport const loadPlatoons = () => ({\n  type: LOAD_PLATOONS\n});\n\nexport const loadPlatoonsSuccess = payload => ({\n  type: LOAD_PLATOONS_SUCCESS,\n  payload\n});\n\nexport const loadPlatoonsFailure = payload => ({\n  type: LOAD_PLATOONS_FAILURE,\n  payload\n});\n","import {\n  LOAD_POINTS,\n  LOAD_POINTS_FAILURE,\n  LOAD_POINTS_SUCCESS\n} from './constants';\n\nexport const loadPoints = () => ({\n  type: LOAD_POINTS\n});\n\nexport const loadPointsSuccess = payload => ({\n  type: LOAD_POINTS_SUCCESS,\n  payload\n});\n\nexport const loadPointsFailure = payload => ({\n  type: LOAD_POINTS_FAILURE,\n  payload\n});\n","import {\n  LOAD_EVENTS,\n  LOAD_EVENTS_FAILURE,\n  LOAD_EVENTS_SUCCESS\n} from './constants';\n\nexport const loadEvents = () => ({\n  type: LOAD_EVENTS\n});\n\nexport const loadEventsSuccess = payload => ({\n  type: LOAD_EVENTS_SUCCESS,\n  payload\n});\n\nexport const loadEventsFailure = payload => ({\n  type: LOAD_EVENTS_FAILURE,\n  payload\n});\n","import {\n  LOAD_STATUSES,\n  LOAD_STATUSES_FAILURE,\n  LOAD_STATUSES_SUCCESS\n} from './constants';\n\nexport const loadStatuses = () => ({\n  type: LOAD_STATUSES\n});\n\nexport const loadStatusesSuccess = payload => ({\n  type: LOAD_STATUSES_SUCCESS,\n  payload\n});\n\nexport const loadStatusesFailure = errors => ({\n  type: LOAD_STATUSES_FAILURE,\n  payload: errors\n});\n","import api from '../utils/api';\n\nclass RanksService {\n  static getRanks() {\n    return api\n      .get('/ranks')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createRank(name) {\n    return api\n      .post('/ranks', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteRank(id) {\n    return api\n      .delete(`/ranks/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updateRank(id, name) {\n    return api\n      .put(`/ranks/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default RanksService;\n","import api from '../utils/api';\n\nclass PlatoonService {\n  static getPlatoons() {\n    return api\n      .get('/platoons')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPlatoon(name) {\n    return api\n      .post('/platoons', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePlatoon(id) {\n    return api\n      .delete(`/platoons/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updatePlatoon(id, name) {\n    return api\n      .put(`/platoons/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PlatoonService;\n","import api from '../utils/api';\n\nclass PointsService {\n  static getPoints() {\n    return api\n      .get('/points')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPoint(name) {\n    return api\n      .post('/points', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePoint(id) {\n    return api\n      .delete(`/points/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updatePoint(id, name) {\n    return api\n      .put(`/points/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PointsService;\n","import api from '../utils/api';\n\nclass Statuses {\n  static getStatuses() {\n    return api\n      .get('/status')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createStatus(name) {\n    return api\n      .post('/status', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteStatus(id) {\n    return api\n      .delete(`/status/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updateStatus(id, name) {\n    return api\n      .put(`/status/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default Statuses;\n","import { takeLatest, call, all, put, delay, select } from 'redux-saga/effects';\nimport { logout } from '../../actions/authActions';\nimport { LOAD_APP } from './constants';\nimport {\n  loadRanksSuccess,\n  loadRanksFailure,\n  loadRanks\n} from '../../actions/ranksActions';\nimport {\n  loadPlatoons,\n  loadPlatoonsFailure,\n  loadPlatoonsSuccess\n} from '../../actions/platoonsActions';\nimport {\n  loadPoints,\n  loadPointsFailure,\n  loadPointsSuccess\n} from '../../actions/pointsActions';\nimport {\n  loadEvents,\n  loadEventsSuccess,\n  loadEventsFailure\n} from '../../actions/eventsActions';\nimport {\n  loadPersonnels,\n  loadPersonnelsFailure,\n  loadPersonnelsSuccess\n} from '../../actions/personnelsActions';\nimport {\n  loadStatuses,\n  loadStatusesFailure,\n  loadStatusesSuccess\n} from '../../actions/statusesActions';\n\nimport { loadAppSuccess, loadAppFailed } from './actions';\nimport RanksService from '../../services/ranks';\nimport PlatoonsService from '../../services/platoons';\nimport PointsService from '../../services/points';\nimport EventsService from '../../services/events';\nimport PersonnelsService from '../../services/personnels';\nimport StatusesService from '../../services/statuses';\n\nconst ERROR_CODES = {\n  UNAUTHORIZED: 'UNAUTHORIZED'\n};\n\nfunction* loadPointsSaga() {\n  yield put(loadPoints());\n  const response = yield call(PointsService.getPoints);\n  if (response.ok) {\n    const points = {};\n    const ids = [];\n\n    response.data.forEach(point => {\n      const { _id: id } = point;\n      points[id] = point;\n      ids.push(id);\n    });\n    yield put(loadPointsSuccess({ ids, points }));\n  } else if (response.status === 401) {\n    throw new Error(ERROR_CODES.UNAUTHORIZED);\n  } else {\n    let errors = [];\n    if (response.data.message) {\n      errors = errors.concat(response.data.message);\n    }\n    if (response.data.errors) {\n      errors = errors.concat(response.data.errors);\n    }\n    yield put(loadPointsFailure(errors));\n  }\n}\n\nfunction* loadRanksSaga() {\n  yield put(loadRanks());\n  const response = yield call(RanksService.getRanks);\n  if (response.ok) {\n    const ranks = {};\n    const ids = [];\n\n    response.data.forEach(rank => {\n      const { _id: id } = rank;\n      ranks[id] = rank;\n      ids.push(id);\n    });\n    yield put(loadRanksSuccess({ ids, ranks }));\n  } else if (response.status === 401) {\n    throw new Error(ERROR_CODES.UNAUTHORIZED);\n  } else {\n    yield put(loadRanksFailure(response.data.message || response.data.errors));\n  }\n}\n\nfunction* loadPlatoonsSaga() {\n  yield put(loadPlatoons());\n  const response = yield call(PlatoonsService.getPlatoons);\n  if (response.ok) {\n    const platoons = {};\n    const ids = [];\n\n    response.data.forEach(platoon => {\n      const { _id: id } = platoon;\n      platoons[id] = platoon;\n      ids.push(id);\n    });\n    yield put(loadPlatoonsSuccess({ ids, platoons }));\n  } else if (response.status === 401) {\n    throw new Error(ERROR_CODES.UNAUTHORIZED);\n  } else {\n    yield put(\n      loadPlatoonsFailure(response.data.message || response.data.errors)\n    );\n  }\n}\n\nfunction* loadEventsSaga() {\n  yield put(loadEvents());\n  const response = yield call(EventsService.getEvents);\n  if (response.ok) {\n    const events = {};\n    const ids = [];\n\n    response.data.forEach(event => {\n      const { _id: id } = event;\n      events[id] = event;\n      ids.push(id);\n    });\n    yield put(loadEventsSuccess({ ids, events }));\n  } else if (response.status === 401) {\n    throw new Error(ERROR_CODES.UNAUTHORIZED);\n  } else {\n    yield put(loadEventsFailure(response.data.message || response.data.errors));\n  }\n}\n\nfunction* loadPersonnelsSaga() {\n  yield put(loadPersonnels());\n  const response = yield call(PersonnelsService.getPersonnels);\n  if (response.ok) {\n    const personnels = {};\n    const ids = [];\n\n    response.data.forEach(person => {\n      const { _id: id } = person;\n      personnels[id] = person;\n      ids.push(id);\n    });\n    yield put(loadPersonnelsSuccess({ ids, personnels }));\n  } else if (response.status === 401) {\n    throw new Error(ERROR_CODES.UNAUTHORIZED);\n  } else {\n    yield put(\n      loadPersonnelsFailure(response.data.message || response.data.errors)\n    );\n  }\n}\n\nfunction* loadStatusesSaga() {\n  yield put(loadStatuses());\n  const response = yield call(StatusesService.getStatuses);\n  if (response.ok) {\n    const statuses = {};\n    const ids = [];\n\n    response.data.forEach(status => {\n      const { _id: id } = status;\n      statuses[id] = status;\n      ids.push(id);\n    });\n    yield put(loadStatusesSuccess({ ids, statuses }));\n  } else if (response.status === 401) {\n    throw new Error(ERROR_CODES.UNAUTHORIZED);\n  } else {\n    yield put(\n      loadStatusesFailure(response.data.message || response.data.errors)\n    );\n  }\n  return false;\n}\n\nfunction* loadEssentials() {\n  try {\n    yield all([\n      call(loadRanksSaga),\n      call(loadPlatoonsSaga),\n      call(loadPointsSaga),\n      call(loadEventsSaga),\n      call(loadPersonnelsSaga),\n      call(loadStatusesSaga)\n    ]);\n    yield put(loadAppSuccess());\n  } catch (error) {\n    if (error.message === ERROR_CODES.UNAUTHORIZED) {\n      yield put(logout());\n    }\n    yield put(loadAppFailed());\n  }\n}\n\nfunction* refresh() {\n  while (true) {\n    try {\n      const threeMinute = 1000 * 60 * 3;\n      yield delay(threeMinute);\n      const isAuth = yield select(state => state.auth.get('isAuthenticated'));\n      if (isAuth) {\n        yield call(loadEssentials);\n      }\n    } catch (error) {\n      if (error.message === ERROR_CODES.UNAUTHORIZED) {\n        yield put(logout());\n      }\n    }\n  }\n}\n\nfunction* loadingWatcher() {\n  yield all([takeLatest(LOAD_APP, loadEssentials), refresh()]);\n}\n\nexport default loadingWatcher;\n","import { call, put, all, delay, takeEvery } from 'redux-saga/effects';\nimport { ADD_RANK, DELETE_RANK, UPDATE_RANK } from './constants';\nimport {\n  addRankSuccess,\n  addRankFailure,\n  deleteRankSuccess,\n  deleteRankFailure,\n  updateRankSuccess,\n  updateRankFailure,\n  clearErrors\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport RanksService from '../../services/ranks';\n\nfunction* clearError() {\n  yield delay(4000);\n  yield put(clearErrors());\n}\n\nfunction* addRank(action) {\n  try {\n    const name = action.payload;\n    if (!name) {\n      yield put(addRankFailure(['Cannot give an empty name for new rank']));\n      yield call(clearError);\n    } else {\n      const response = yield call(RanksService.createRank, name);\n      if (response.ok) {\n        const newRank = response.data;\n        yield put(addRankSuccess(newRank));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(addRankFailure(errors));\n        yield call(clearError);\n      }\n    }\n  } catch (error) {\n    yield put(addRankFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteRank(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(RanksService.deleteRank, deleteId);\n    if (response.ok) {\n      yield put(deleteRankSuccess(deleteId));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteRankFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteRankFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* updateRank(action) {\n  try {\n    const { id, name } = action.payload;\n    if (!name) {\n      yield put(\n        updateRankFailure(['Cannot update the rank with an empty name'])\n      );\n      yield call(clearError);\n    } else {\n      const response = yield call(RanksService.updateRank, id, name);\n      if (response.ok) {\n        const updatedRank = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n        yield put(updateRankSuccess(updatedRank));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else if (response.status === 304) {\n        yield put(\n          updateRankFailure([\n            'Updating rank must not be the same name as before'\n          ])\n        );\n        yield call(clearError);\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(updateRankFailure(errors));\n        yield call(clearError);\n      }\n    }\n  } catch (error) {\n    yield put(updateRankFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* ranksWatcher() {\n  yield all([\n    takeEvery(ADD_RANK, addRank),\n    takeEvery(DELETE_RANK, deleteRank),\n    takeEvery(UPDATE_RANK, updateRank)\n  ]);\n}\n\nexport default ranksWatcher;\n","import { takeEvery, call, put, all, delay } from 'redux-saga/effects';\nimport { ADD_PLATOON, DELETE_PLATOON, UPDATE_PLATOON } from './constants';\nimport {\n  addPlatoonSuccess,\n  addPlatoonFailure,\n  deletePlatoonSuccess,\n  deletePlatoonFailure,\n  updatePlatoonSuccess,\n  updatePlatoonFailure,\n  clearErrors\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport PlatoonsService from '../../services/platoons';\n\nfunction* clearError() {\n  yield delay(4000);\n  yield put(clearErrors());\n}\n\nfunction* addPlatoon(action) {\n  try {\n    const name = action.payload;\n    if (!name) {\n      yield put(\n        addPlatoonFailure(['Cannot give an empty name for new platoon'])\n      );\n      yield call(clearError);\n    } else {\n      const response = yield call(PlatoonsService.createPlatoon, name);\n      if (response.ok) {\n        const newPlatoon = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n        yield put(addPlatoonSuccess(newPlatoon));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(addPlatoonFailure(errors));\n        yield call(clearError);\n      }\n    }\n  } catch (error) {\n    yield put(addPlatoonFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* deletePlatoon(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PlatoonsService.deletePlatoon, deleteId);\n    if (response.ok) {\n      yield put(deletePlatoonSuccess(deleteId));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePlatoonFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(\n      deletePlatoonFailure([error.message || 'Please try again later'])\n    );\n    yield call(clearError);\n  }\n}\n\nfunction* updatePlatoon(action) {\n  try {\n    const { id, name } = action.payload;\n    if (!name) {\n      yield put(updatePlatoonFailure([`Cannot give an empty name`]));\n      yield call(clearError);\n    } else {\n      const response = yield call(PlatoonsService.updatePlatoon, id, name);\n      if (response.ok) {\n        const updatedPlatoon = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n        yield put(updatePlatoonSuccess(updatedPlatoon));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else if (response.status === 304) {\n        yield put(\n          updatePlatoonFailure([\n            'Updating platoon must not be the same name as before'\n          ])\n        );\n        yield call(clearError);\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(updatePlatoonFailure(errors));\n        yield call(clearError);\n      }\n    }\n  } catch (error) {\n    yield put(\n      updatePlatoonFailure([error.message || 'Please try again later'])\n    );\n    yield call(clearError);\n  }\n}\n\nfunction* platoonsWatcher() {\n  yield all([\n    takeEvery(ADD_PLATOON, addPlatoon),\n    takeEvery(DELETE_PLATOON, deletePlatoon),\n    takeEvery(UPDATE_PLATOON, updatePlatoon)\n  ]);\n}\n\nexport default platoonsWatcher;\n","import { call, put, all, delay, takeEvery } from 'redux-saga/effects';\nimport { ADD_POINT, DELETE_POINT, UPDATE_POINT } from './constants';\nimport {\n  addPointSuccess,\n  addPointFailure,\n  deletePointSuccess,\n  deletePointFailure,\n  updatePointSuccess,\n  updatePointFailure,\n  clearErrors\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport PointsService from '../../services/points';\n\nfunction* clearError() {\n  yield delay(4000);\n  yield put(clearErrors());\n}\n\nfunction* addPoint(action) {\n  try {\n    const name = action.payload;\n    if (!name) {\n      yield put(\n        addPointFailure(['Cannot give an empty name for new point system'])\n      );\n      yield call(clearError);\n    } else {\n      const response = yield call(PointsService.createPoint, name);\n      if (response.ok) {\n        const newPoint = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n        yield put(addPointSuccess(newPoint));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(addPointFailure(errors));\n        yield call(clearError);\n      }\n    }\n  } catch (error) {\n    yield put(addPointFailure([error.message || 'Please try again later']));\n    yield call(clearError, addPointFailure);\n  }\n}\n\nfunction* deletePoint(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PointsService.deletePoint, deleteId);\n    if (response.ok) {\n      yield put(deletePointSuccess(deleteId));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePointFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deletePointFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* updatePoint(action) {\n  try {\n    const { id, name } = action.payload;\n    if (!name) {\n      yield put(\n        updatePointFailure(['Cannot update a point system with empty name'])\n      );\n      yield call(clearError);\n    } else {\n      const response = yield call(PointsService.updatePoint, id, name);\n      if (response.ok) {\n        const updatedPoint = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n\n        yield put(updatePointSuccess(updatedPoint));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else if (response.status === 304) {\n        yield put(\n          updatePointFailure(['Updating point must not be the same as before'])\n        );\n        yield call(clearError);\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(updatePointFailure(errors));\n        yield call(clearError);\n      }\n    }\n  } catch (error) {\n    yield put(updatePointFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* pointsWatcher() {\n  yield all([\n    takeEvery(ADD_POINT, addPoint),\n    takeEvery(DELETE_POINT, deletePoint),\n    takeEvery(UPDATE_POINT, updatePoint)\n  ]);\n}\n\nexport default pointsWatcher;\n","import { takeEvery, call, put, all, delay } from 'redux-saga/effects';\nimport { ADD_STATUS, DELETE_STATUS, UPDATE_STATUS } from './constants';\nimport {\n  addStatusSuccess,\n  addStatusFailure,\n  deleteStatusSuccess,\n  deleteStatusFailure,\n  updateStatusSuccess,\n  updateStatusFailure,\n  clearErrors\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport StatusesService from '../../services/statuses';\n\nfunction* clearError() {\n  yield delay(4000);\n  yield put(clearErrors());\n}\nfunction* addStatus(action) {\n  try {\n    const name = action.payload;\n    const response = yield call(StatusesService.createStatus, name);\n\n    if (response.ok) {\n      const newStatus = {\n        _id: response.data._id,\n        name: response.data.name\n      };\n      yield put(addStatusSuccess(newStatus));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(addStatusFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteStatus(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(StatusesService.deleteStatus, deleteId);\n    if (response.ok) {\n      yield put(deleteStatusSuccess(deleteId));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteStatusFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* updateStatus(action) {\n  try {\n    const { id, name } = action.payload;\n    const response = yield call(StatusesService.updateStatus, id, name);\n    if (response.ok) {\n      const updatedStatus = {\n        _id: response.data._id,\n        name: response.data.name\n      };\n      yield put(updateStatusSuccess(updatedStatus));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else if (response.status === 304) {\n      yield put(\n        updateStatusFailure(['Updating status must not be the same as before'])\n      );\n      yield call(clearError);\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(updateStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(updateStatusFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* statusesWatcher() {\n  yield all([\n    takeEvery(ADD_STATUS, addStatus),\n    takeEvery(DELETE_STATUS, deleteStatus),\n    takeEvery(UPDATE_STATUS, updateStatus)\n  ]);\n}\n\nexport default statusesWatcher;\n","import { call, takeEvery, put, delay } from 'redux-saga/effects';\nimport { DELETE_PERSONNEL } from './constants';\nimport {\n  deletePersonnelFailure,\n  deletePersonnelSuccess,\n  clearErrorMessage\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearError() {\n  yield delay(4000);\n  yield put(clearErrorMessage());\n}\n\nfunction* deletePersonnel(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PersonnelsService.deletePersonnel, deleteId);\n    if (response.ok) {\n      yield put(deletePersonnelSuccess(deleteId));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePersonnelFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deletePersonnelFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* allWatcher() {\n  yield takeEvery(DELETE_PERSONNEL, deletePersonnel);\n}\n\nexport default allWatcher;\n","import { takeLatest, put, call, delay } from 'redux-saga/effects';\nimport { ADD_PERSONNEL } from './constants';\nimport {\n  addPersonnelFailure,\n  addPersonnelSuccess,\n  clearPersonnelError\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearMessage() {\n  yield delay(4000);\n  yield put(clearPersonnelError([]));\n}\n\nfunction* addPersonnel(action) {\n  try {\n    const { name, rank, platoon } = action.payload;\n    const response = yield call(\n      PersonnelsService.createPersonnel,\n      name,\n      rank,\n      platoon\n    );\n    if (response.ok) {\n      const person = response.data;\n      yield put(addPersonnelSuccess(person));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addPersonnelFailure(errors));\n    }\n  } catch (error) {\n    yield put(addPersonnelFailure([error.message]));\n  }\n  yield call(clearMessage);\n}\n\nfunction* addWatcher() {\n  yield takeLatest(ADD_PERSONNEL, addPersonnel);\n}\n\nexport default addWatcher;\n","import { takeEvery, call, put, all, delay } from 'redux-saga/effects';\nimport moment from 'moment-timezone';\nimport {\n  ADD_STATUS,\n  DELETE_STATUS,\n  ADD_BLOCKOUT,\n  DELETE_BLOCKOUT,\n  EDIT_PERSONNEL_POINT\n} from './constants';\nimport {\n  addStatusSuccess,\n  addStatusFailure,\n  deleteStatusFailure,\n  deleteStatusSuccess,\n  addBlockoutSuccess,\n  addBlockoutFailure,\n  deleteBlockoutFailure,\n  deleteBlockoutSuccess,\n  editPersonnelPointFailure,\n  editPersonnelPointSuccess,\n  clearErrors\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(clearErrors());\n  } catch (error) {\n    yield put(clearErrors());\n  }\n}\nfunction* addStatus(action) {\n  try {\n    const { personnelId, statusId } = action.payload;\n    let { startDate, endDate } = action.payload;\n    startDate = moment(startDate, 'DDMMYY', true).format('DD-MM-YYYY');\n    endDate =\n      endDate.toLowerCase() === 'permanent'\n        ? endDate\n        : moment(endDate, 'DDMMYY', true).format('DD-MM-YYYY');\n\n    const response = yield call(\n      PersonnelsService.addPersonnelStatus,\n      personnelId,\n      statusId,\n      startDate,\n      endDate\n    );\n    if (response.ok) {\n      const status = response.data;\n\n      const newPersonnelStatus = {\n        _id: status._id,\n        expired: status.expired,\n        statusId: status.statusId,\n        startDate: status.startDate,\n        endDate: status.endDate\n      };\n\n      yield put(addStatusSuccess({ personnelId, status: newPersonnelStatus }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(addStatusFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteStatus(action) {\n  try {\n    const { personnelId, pStatusId } = action.payload;\n    const response = yield call(\n      PersonnelsService.deletePersonnelStatus,\n      personnelId,\n      pStatusId\n    );\n\n    if (response.ok) {\n      yield put(deleteStatusSuccess({ personnelId, statusId: pStatusId }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteStatusFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* addBlockout(action) {\n  try {\n    const { personnelId, date } = action.payload;\n\n    const startDate = moment(date.startDate, 'DDMMYY', true).format(\n      'DD-MM-YYYY'\n    );\n\n    const dateToSubmit = {\n      startDate\n    };\n\n    if (date.endDate) {\n      dateToSubmit.endDate = moment(date.endDate, 'DDMMYY', true).format(\n        'DD-MM-YYYY'\n      );\n    }\n\n    const response = yield call(\n      PersonnelsService.addPersonnelBlockout,\n      personnelId,\n      dateToSubmit\n    );\n\n    if (response.ok) {\n      const { blockOutDates, _id: id } = response.data;\n      yield put(addBlockoutSuccess(id, blockOutDates));\n    } else if (response.status === 304) {\n      yield put(addBlockoutFailure(['Blockout date already exist']));\n      yield call(clearError);\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addBlockoutFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(addBlockoutFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteBlockout(action) {\n  try {\n    const { personnelId, date } = action.payload;\n    let { startDate } = date;\n    if (moment(date.startDate, 'DDMMYY', true).isValid()) {\n      startDate = moment(date.startDate, 'DDMMYY', true).format('DD-MM-YYYY');\n    }\n\n    const dateToSubmit = {\n      startDate\n    };\n\n    if (date.endDate) {\n      dateToSubmit.endDate = moment(date.endDate, 'DDMMYY', true).format(\n        'DD-MM-YYYY'\n      );\n    }\n\n    const response = yield call(\n      PersonnelsService.deletePersonnelBlockout,\n      personnelId,\n      dateToSubmit\n    );\n    if (response.ok) {\n      const { blockOutDates, _id: id } = response.data;\n      yield put(deleteBlockoutSuccess(id, blockOutDates));\n    } else if (response.status === 304) {\n      yield put(\n        deleteBlockoutFailure(['Blockout date(s) does not exist already'])\n      );\n      yield call(clearError);\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n\n      yield put(deleteBlockoutFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteBlockoutFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* editPersonnelPoint(action) {\n  try {\n    const { personnelId, personnelPointId, point } = action.payload;\n\n    const response = yield call(\n      PersonnelsService.editPersonnelPoint,\n      personnelId,\n      personnelPointId,\n      point\n    );\n    if (response.ok) {\n      const { points, personId, _id } = response.data.personnelPoint;\n\n      yield put(editPersonnelPointSuccess(personId, _id, points));\n    } else if (response.status === 304) {\n      yield put(\n        editPersonnelPointFailure([\n          'Please provide a different point number, must not be the same'\n        ])\n      );\n      yield call(clearError);\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(editPersonnelPointFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(\n      editPersonnelPointFailure([error.message || 'Please try again later'])\n    );\n    yield call(clearError);\n  }\n}\n\nfunction* singleWatcher() {\n  yield all([\n    takeEvery(ADD_STATUS, addStatus),\n    takeEvery(DELETE_STATUS, deleteStatus),\n    takeEvery(ADD_BLOCKOUT, addBlockout),\n    takeEvery(DELETE_BLOCKOUT, deleteBlockout),\n    takeEvery(EDIT_PERSONNEL_POINT, editPersonnelPoint)\n  ]);\n}\n\nexport default singleWatcher;\n","import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { UPDATE_PERSON } from './constants';\nimport {\n  updatePersonFailure,\n  updatePersonSuccess,\n  updatePersonNoChange\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* updatePerson(action) {\n  try {\n    const { personnelId, name, rank, platoon } = action.payload;\n    const response = yield call(PersonnelsService.editPersonnel, personnelId, {\n      name,\n      rank,\n      platoon\n    });\n    if (response.ok) {\n      const person = response.data;\n      yield put(updatePersonSuccess(person));\n    } else if (response.status === 304) {\n      yield put(updatePersonNoChange());\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(updatePersonFailure(errors));\n    }\n  } catch (error) {\n    yield put(updatePersonFailure([error.message || 'Please try again later']));\n  }\n}\n\nfunction* editPersonnelWatcher() {\n  yield all([takeLatest(UPDATE_PERSON, updatePerson)]);\n}\n\nexport default editPersonnelWatcher;\n","import { all } from 'redux-saga/effects';\nimport allSaga from './all/saga';\nimport addSaga from './add/saga';\nimport singleSaga from './single/saga';\nimport editSaga from './edit/saga';\n\nfunction* personnelsSaga() {\n  yield all([allSaga(), addSaga(), singleSaga(), editSaga()]);\n}\n\nexport default personnelsSaga;\n","import { call, put, delay, takeEvery } from 'redux-saga/effects';\nimport { DELETE_EVENT } from './constants';\nimport { deleteEventFailure, deleteEventSuccess } from './actions';\nimport { logout } from '../../../actions/authActions';\nimport EventsService from '../../../services/events';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(deleteEventFailure([]));\n  } catch (error) {\n    yield put(deleteEventFailure([]));\n  }\n}\n\nfunction* deleteEvent(action) {\n  try {\n    const { revert, eventId } = action.payload;\n    const response = yield call(EventsService.deleteEvent, eventId, revert);\n    if (response.ok) {\n      const { event } = response.data;\n      yield put(deleteEventSuccess(event));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteEventFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteEventFailure([error.message || 'Please try again later']));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteWatcher() {\n  yield takeEvery(DELETE_EVENT, deleteEvent);\n}\n\nexport default deleteWatcher;\n","import { put, takeLatest, call } from 'redux-saga/effects';\nimport { CREATE_EVENT } from './constants';\nimport { createEventFailure, createEventSuccess } from './actions';\nimport EventsService from '../../../services/events';\nimport { logout } from '../../../actions/authActions';\n\nfunction* createEvent(action) {\n  try {\n    const response = yield call(EventsService.createEvent, action.payload);\n    if (response.ok) {\n      const event = response.data;\n\n      yield put(createEventSuccess(event));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(createEventFailure(errors));\n    }\n  } catch (error) {\n    yield put(createEventFailure([error.message || 'Please try again later']));\n  }\n}\n\nfunction* addWatcher() {\n  yield takeLatest(CREATE_EVENT, createEvent);\n}\n\nexport default addWatcher;\n","import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { UPDATE_EVENT } from './constants';\nimport {\n  updateEventFailure,\n  updateEventSuccess,\n  updateEventNoChange\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport EventsService from '../../../services/events';\n\nfunction* updateEvent(action) {\n  try {\n    const { eventId, personnels } = action.payload;\n    const response = yield call(EventsService.updateEvent, eventId, personnels);\n    if (response.ok) {\n      const event = response.data;\n      yield put(updateEventSuccess(event));\n    } else if (response.status === 304) {\n      yield put(updateEventNoChange());\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(updateEventFailure(errors));\n    }\n  } catch (error) {\n    yield put(updateEventFailure([error.message || 'Please try again later']));\n  }\n}\n\nfunction* editEventnelWatcher() {\n  yield all([takeLatest(UPDATE_EVENT, updateEvent)]);\n}\n\nexport default editEventnelWatcher;\n","import { all } from 'redux-saga/effects';\n\nimport deleteSaga from './delete/saga';\nimport addSaga from './add/saga';\nimport editSaga from './edit/saga';\n\nfunction* eventsWatcher() {\n  yield all([deleteSaga(), addSaga(), editSaga()]);\n}\n\nexport default eventsWatcher;\n","// PAGES SAGAS\nimport loginPageSaga from '../pages/login/saga';\nimport loadingPageSaga from '../pages/loading/saga';\nimport ranksPageSaga from '../pages/ranks/saga';\nimport platoonsPageSaga from '../pages/platoons/saga';\nimport pointsPageSaga from '../pages/points/saga';\nimport statusesPageSaga from '../pages/statuses/saga';\nimport personnelsPageSaga from '../pages/personnels/saga';\nimport eventsPageSaga from '../pages/events/saga';\n\nconst pageSagas = [\n  loginPageSaga(),\n  loadingPageSaga(),\n  ranksPageSaga(),\n  platoonsPageSaga(),\n  pointsPageSaga(),\n  statusesPageSaga(),\n  personnelsPageSaga(),\n  eventsPageSaga()\n];\n\nexport default pageSagas;\n","import { all } from 'redux-saga/effects';\n\n// GLOBAL SAGAS\nimport authSaga from './authSaga';\nimport personnelsSaga from './personnelsSaga';\nimport pageSagas from './pageSagas';\n\nconst globalSagas = [authSaga(), personnelsSaga()];\n\nfunction* rootSagas() {\n  yield all([...globalSagas, ...pageSagas]);\n}\n\nexport default rootSagas;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\n\nimport rootReducer from '../reducers/rootReducer';\nimport rootSagas from '../sagas/rootSaga';\n\nconst configureStore = (state = {}) => {\n  let composeEnhancers = compose;\n  if (process.env.NODE_ENV === 'development') {\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  }\n\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    state,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n  );\n  const persistor = persistStore(store);\n\n  sagaMiddleware.run(rootSagas);\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/styles.css';\nimport createStore from './stores/createStore';\n\nconst { store, persistor } = createStore();\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {\n  ADD_POINT,\n  ADD_POINT_FAILURE,\n  ADD_POINT_SUCCESS,\n  DELETE_POINT,\n  DELETE_POINT_FAILURE,\n  DELETE_POINT_SUCCESS,\n  UPDATE_POINT,\n  UPDATE_POINT_FAILURE,\n  UPDATE_POINT_SUCCESS,\n  CLEAR_ERROR\n} from './constants';\n\nexport const addPoint = name => ({\n  type: ADD_POINT,\n  payload: name\n});\n\nexport const addPointSuccess = newPoint => ({\n  type: ADD_POINT_SUCCESS,\n  payload: newPoint\n});\n\nexport const addPointFailure = errors => ({\n  type: ADD_POINT_FAILURE,\n  payload: errors\n});\n\nexport const deletePoint = id => ({\n  type: DELETE_POINT,\n  payload: id\n});\n\nexport const deletePointSuccess = id => ({\n  type: DELETE_POINT_SUCCESS,\n  payload: id\n});\n\nexport const deletePointFailure = errors => ({\n  type: DELETE_POINT_FAILURE,\n  payload: errors\n});\n\nexport const updatePoint = (id, name) => ({\n  type: UPDATE_POINT,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updatePointSuccess = updatedPoint => ({\n  type: UPDATE_POINT_SUCCESS,\n  payload: updatedPoint\n});\n\nexport const updatePointFailure = errors => ({\n  type: UPDATE_POINT_FAILURE,\n  payload: errors\n});\n\nexport const clearErrors = payload => ({\n  type: CLEAR_ERROR,\n  payload\n});\n","export const UPDATE_EVENT = 'EVENTS/EDIT/UPDATE_EVENT';\nexport const UPDATE_EVENT_SUCCESS = 'EVENTS/EDIT/UPDATE_EVENT_SUCCESS';\nexport const UPDATE_EVENT_FAILURE = 'EVENTS/EDIT/UPDATE_EVENT_FAILURE';\nexport const UPDATE_EVENT_NO_CHANGE = 'PERSONNELS/EDIT/UPDATE_EVENT_NO_CHANGE';\n","export const DELETE_PERSONNEL = 'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL';\nexport const DELETE_PERSONNEL_SUCCESS =\n  'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL_SUCCESS';\nexport const DELETE_PERSONNEL_FAILURE =\n  'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL_FAILURE';\nexport const CLEAR_ERROR_MESSAGE = 'PERSONNELS_PAGE/ALL/CLEAR_ERROR_MESSAGE';\n","export const ADD_PERSONNEL = 'PERSONNELS_PAGE/ADD/ADD_PERSONNEL';\nexport const ADD_PERSONNEL_SUCCESS =\n  'PERSONNELS_PAGE/ADD/ADD_PERSONNEL_SUCCESS';\nexport const ADD_PERSONNEL_FAILURE =\n  'PERSONNELS_PAGE/ADD/ADD_PERSONNEL_FAILURE';\nexport const CLEAR_ADD_PERSONNEL_ERROR =\n  'PERSONNELS_PAGE/ADD/CLEAR_ADD_PERSONNEL_ERROR';\n","export const UPDATE_PERSON = 'PERSONNELS/EDIT/UPDATE_PERSON';\nexport const UPDATE_PERSON_SUCCESS = 'PERSONNELS/EDIT/UPDATE_PERSON_SUCCESS';\nexport const UPDATE_PERSON_FAILURE = 'PERSONNELS/EDIT/UPDATE_PERSON_FAILURE';\nexport const UPDATE_PERSON_NO_CHANGE =\n  'PERSONNELS/EDIT/UPDATE_PERSON_NO_CHANGE';\n","import {\n  ADD_RANK,\n  ADD_RANK_FAILURE,\n  ADD_RANK_SUCCESS,\n  DELETE_RANK,\n  DELETE_RANK_FAILURE,\n  DELETE_RANK_SUCCESS,\n  UPDATE_RANK,\n  UPDATE_RANK_FAILURE,\n  UPDATE_RANK_SUCCESS,\n  CLEAR_ERROR\n} from './constants';\n\nexport const addRank = name => ({\n  type: ADD_RANK,\n  payload: name\n});\n\nexport const addRankSuccess = rank => ({\n  type: ADD_RANK_SUCCESS,\n  payload: rank\n});\n\nexport const addRankFailure = errors => ({\n  type: ADD_RANK_FAILURE,\n  payload: errors\n});\n\nexport const deleteRank = id => ({\n  type: DELETE_RANK,\n  payload: id\n});\n\nexport const deleteRankSuccess = id => ({\n  type: DELETE_RANK_SUCCESS,\n  payload: id\n});\n\nexport const deleteRankFailure = errors => ({\n  type: DELETE_RANK_FAILURE,\n  payload: errors\n});\n\nexport const updateRank = (id, name) => ({\n  type: UPDATE_RANK,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updateRankSuccess = ranks => ({\n  type: UPDATE_RANK_SUCCESS,\n  payload: ranks\n});\n\nexport const updateRankFailure = errors => ({\n  type: UPDATE_RANK_FAILURE,\n  payload: errors\n});\n\nexport const clearErrors = () => ({\n  type: CLEAR_ERROR\n});\n","import {\n  ADD_PLATOON,\n  ADD_PLATOON_FAILURE,\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON,\n  DELETE_PLATOON_FAILURE,\n  DELETE_PLATOON_SUCCESS,\n  UPDATE_PLATOON,\n  UPDATE_PLATOON_FAILURE,\n  UPDATE_PLATOON_SUCCESS,\n  CLEAR_ERROR\n} from './constants';\n\nexport const addPlatoon = name => ({\n  type: ADD_PLATOON,\n  payload: name\n});\n\nexport const addPlatoonSuccess = platoon => ({\n  type: ADD_PLATOON_SUCCESS,\n  payload: platoon\n});\n\nexport const addPlatoonFailure = errors => ({\n  type: ADD_PLATOON_FAILURE,\n  payload: errors\n});\n\nexport const deletePlatoon = id => ({\n  type: DELETE_PLATOON,\n  payload: id\n});\n\nexport const deletePlatoonSuccess = id => ({\n  type: DELETE_PLATOON_SUCCESS,\n  payload: id\n});\n\nexport const deletePlatoonFailure = errors => ({\n  type: DELETE_PLATOON_FAILURE,\n  payload: errors\n});\n\nexport const updatePlatoon = (id, name) => ({\n  type: UPDATE_PLATOON,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updatePlatoonSuccess = updatedPlatoon => ({\n  type: UPDATE_PLATOON_SUCCESS,\n  payload: updatedPlatoon\n});\n\nexport const updatePlatoonFailure = errors => ({\n  type: UPDATE_PLATOON_FAILURE,\n  payload: errors\n});\n\nexport const clearErrors = () => ({\n  type: CLEAR_ERROR\n});\n","export const DELETE_EVENT = 'EVENTS_PAGE/DELETE/DELETE_EVENT';\nexport const DELETE_EVENT_SUCCESS = 'EVENTS_PAGE/DELETE/DELETE_EVENT_SUCCESS';\nexport const DELETE_EVENT_FAILURE = 'EVENTS_PAGE/DELETE/DELETE_EVENT_FAILURE';\n","export const CREATE_EVENT = 'EVENTS_PAGE/ADD/CREATE_EVENT';\nexport const CREATE_EVENT_SUCCESS = 'EVENTS_PAGE/ADD/CREATE_EVENT_SUCCESS';\nexport const CREATE_EVENT_FAILURE = 'EVENTS_PAGE/ADD/CREATE_EVENT_FAILURE';\n","import {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  UPDATE_STATUS,\n  UPDATE_STATUS_FAILURE,\n  UPDATE_STATUS_SUCCESS,\n  CLEAR_ERROR\n} from './constants';\n\nexport const addStatus = name => ({\n  type: ADD_STATUS,\n  payload: name\n});\n\nexport const addStatusSuccess = newStatus => ({\n  type: ADD_STATUS_SUCCESS,\n  payload: newStatus\n});\n\nexport const addStatusFailure = errors => ({\n  type: ADD_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const deleteStatus = id => ({\n  type: DELETE_STATUS,\n  payload: id\n});\n\nexport const deleteStatusSuccess = id => ({\n  type: DELETE_STATUS_SUCCESS,\n  payload: id\n});\n\nexport const deleteStatusFailure = errors => ({\n  type: DELETE_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const updateStatus = (id, name) => ({\n  type: UPDATE_STATUS,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updateStatusSuccess = updatedStatus => ({\n  type: UPDATE_STATUS_SUCCESS,\n  payload: updatedStatus\n});\n\nexport const updateStatusFailure = errors => ({\n  type: UPDATE_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const clearErrors = () => ({\n  type: CLEAR_ERROR\n});\n","export const LOGIN = 'LOGIN_PAGE/LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_PAGE/LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_PAGE/LOGIN_FAIL';\n","export const LOAD_APP = 'LOADING_PAGE/LOAD_APP';\nexport const LOAD_APP_SUCCESS = 'LOADING_PAGE/LOAD_APP_SUCCESS';\nexport const LOAD_APP_FAILURE = 'LOADING_PAGE/LOAD_APP_FAILURE';\n","import api from '../utils/api';\n\nclass EventsService {\n  static getEvents() {\n    return api\n      .get('/events')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteEvent(eventId, revert = false) {\n    return api\n      .post(`/events/delete/${eventId}`, { revert })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createEvent(data) {\n    return api\n      .post('/events/create', data)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static generateName(data) {\n    return api\n      .post('/events/generate', data)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updateEvent(eventId, newPersonnels) {\n    return api\n      .post(`/events/${eventId}/changepersonnels`, {\n        personnels: newPersonnels\n      })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default EventsService;\n","import {\n  DELETE_EVENT,\n  DELETE_EVENT_FAILURE,\n  DELETE_EVENT_SUCCESS\n} from './constants';\n\nexport const deleteEvent = ({ eventId, revert = false }) => ({\n  type: DELETE_EVENT,\n  payload: {\n    eventId,\n    revert\n  }\n});\n\nexport const deleteEventSuccess = id => ({\n  type: DELETE_EVENT_SUCCESS,\n  payload: id\n});\n\nexport const deleteEventFailure = errors => ({\n  type: DELETE_EVENT_FAILURE,\n  payload: errors\n});\n","import { LOAD_APP, LOAD_APP_FAILURE, LOAD_APP_SUCCESS } from './constants';\n\nexport const loadApp = () => ({\n  type: LOAD_APP\n});\n\nexport const loadAppSuccess = () => ({\n  type: LOAD_APP_SUCCESS\n});\n\nexport const loadAppFailed = () => ({\n  type: LOAD_APP_FAILURE\n});\n","import { LOGIN, LOGIN_FAIL, LOGIN_SUCCESS } from './constants';\n\nexport const login = (username, password) => {\n  return {\n    type: LOGIN,\n    payload: {\n      username,\n      password\n    }\n  };\n};\n\nexport const loginSuccess = () => {\n  return {\n    type: LOGIN_SUCCESS\n  };\n};\n\nexport const loginFailure = errors => {\n  return {\n    type: LOGIN_FAIL,\n    payload: errors\n  };\n};\n","import {\n  DELETE_PERSONNEL,\n  DELETE_PERSONNEL_FAILURE,\n  DELETE_PERSONNEL_SUCCESS,\n  CLEAR_ERROR_MESSAGE\n} from './constants';\n\nexport const deletePersonnel = id => ({\n  type: DELETE_PERSONNEL,\n  payload: id\n});\n\nexport const deletePersonnelSuccess = id => ({\n  type: DELETE_PERSONNEL_SUCCESS,\n  payload: id\n});\n\nexport const deletePersonnelFailure = errors => ({\n  type: DELETE_PERSONNEL_FAILURE,\n  payload: errors\n});\nexport const clearErrorMessage = () => ({\n  type: CLEAR_ERROR_MESSAGE\n});\n","import {\n  ADD_PERSONNEL,\n  ADD_PERSONNEL_FAILURE,\n  ADD_PERSONNEL_SUCCESS,\n  CLEAR_ADD_PERSONNEL_ERROR\n} from './constants';\n\nexport const addPersonnel = (name, platoon, rank) => ({\n  type: ADD_PERSONNEL,\n  payload: {\n    name,\n    platoon,\n    rank\n  }\n});\n\nexport const addPersonnelSuccess = person => ({\n  type: ADD_PERSONNEL_SUCCESS,\n  payload: person\n});\n\nexport const addPersonnelFailure = errors => ({\n  type: ADD_PERSONNEL_FAILURE,\n  payload: errors\n});\n\nexport const clearPersonnelError = () => ({\n  type: CLEAR_ADD_PERSONNEL_ERROR\n});\n","import {\n  UPDATE_PERSON,\n  UPDATE_PERSON_FAILURE,\n  UPDATE_PERSON_SUCCESS,\n  UPDATE_PERSON_NO_CHANGE\n} from './constants';\n\nexport const updatePerson = payload => ({\n  type: UPDATE_PERSON,\n  payload\n});\n\nexport const updatePersonSuccess = payload => ({\n  type: UPDATE_PERSON_SUCCESS,\n  payload\n});\n\nexport const updatePersonFailure = errors => ({\n  type: UPDATE_PERSON_FAILURE,\n  payload: errors\n});\n\nexport const updatePersonNoChange = () => ({\n  type: UPDATE_PERSON_NO_CHANGE\n});\n","import {\n  UPDATE_EVENT,\n  UPDATE_EVENT_FAILURE,\n  UPDATE_EVENT_SUCCESS,\n  UPDATE_EVENT_NO_CHANGE\n} from './constants';\n\nexport const updateEvent = (eventId, personnels) => ({\n  type: UPDATE_EVENT,\n  payload: {\n    eventId,\n    personnels\n  }\n});\n\nexport const updateEventSuccess = payload => ({\n  type: UPDATE_EVENT_SUCCESS,\n  payload\n});\n\nexport const updateEventFailure = errors => ({\n  type: UPDATE_EVENT_FAILURE,\n  payload: errors\n});\n\nexport const updateEventNoChange = () => ({\n  type: UPDATE_EVENT_NO_CHANGE\n});\n","export const LOG_OUT = 'LOGOUT';\nexport const LOG_OUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOGOUT_FAILURE';\nexport const CHECK_AUTH = 'CHECK_AUTH';\nexport const CHECK_AUTH_FAILURE = 'CHECK_AUTH_FAILURE';\nexport const CHECK_AUTH_SUCCESS = 'CHECK_AUTH_SUCCESS';\n\nexport const LOAD_RANKS = 'LOAD_RANKS';\nexport const LOAD_RANKS_SUCCESS = 'LOAD_RANKS_SUCCESS';\nexport const LOAD_RANKS_FAILURE = 'LOAD_RANKS_FAILURE';\n\nexport const LOAD_PLATOONS = 'LOAD_PLATOONS';\nexport const LOAD_PLATOONS_SUCCESS = 'LOAD_PLATOONS_SUCCESS';\nexport const LOAD_PLATOONS_FAILURE = 'LOAD_PLATOONS_FAILURE';\n\nexport const LOAD_EVENTS = 'LOAD_EVENTS';\nexport const LOAD_EVENTS_SUCCESS = 'LOAD_EVENTS_SUCCESS';\nexport const LOAD_EVENTS_FAILURE = 'LOAD_EVENTS_FAILURE';\n\nexport const LOAD_PERSONNELS = 'LOAD_PERSONNELS';\nexport const LOAD_PERSONNELS_SUCCESS = 'LOAD_PERSONNELS_SUCCESS';\nexport const LOAD_PERSONNELS_FAILURE = 'LOAD_PERSONNELS_FAILURE';\n\nexport const PERSONNELS_UPDATE_POINTS_SYSTEM =\n  'PERSONNELS_UPDATE_POINTS_SYSTEM';\nexport const PERSONNELS_UPDATE_EVENT_POINTS = 'PERSONNELS_UPDATE_EVENT_POINTS';\nexport const PERSONNELS_UPDATE_RANK_NAME = 'PERSONNELS_UPDATE_RANK_NAME';\nexport const PERSONNELS_UPDATE_PLATOON_NAME = 'PERSONNELS_UPDATE_PLATOON_NAME';\nexport const PERSONNELS_UPDATE_STATUS_NAME = 'PERSONNELS_UPDATE_STATUS_NAME';\n\nexport const LOAD_POINTS = 'LOAD_POINTS';\nexport const LOAD_POINTS_SUCCESS = 'LOAD_POINTS_SUCCESS';\nexport const LOAD_POINTS_FAILURE = 'LOAD_POINTS_FAILURE';\n\nexport const LOAD_STATUSES = 'LOAD_STATUSES';\nexport const LOAD_STATUSES_SUCCESS = 'LOAD_STATUSES_SUCCESS';\nexport const LOAD_STATUSES_FAILURE = 'LOAD_STATUSES_FAILURE';\n","import {\n  CREATE_EVENT,\n  CREATE_EVENT_FAILURE,\n  CREATE_EVENT_SUCCESS\n} from './constants';\n\nexport const createEvent = payload => ({\n  type: CREATE_EVENT,\n  payload\n});\n\nexport const createEventSuccess = payload => ({\n  type: CREATE_EVENT_SUCCESS,\n  payload\n});\n\nexport const createEventFailure = errors => ({\n  type: CREATE_EVENT_FAILURE,\n  payload: errors\n});\n","import React, { useState } from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\n\nconst TopNavBar = ({ username }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Navbar color=\"dark\" dark expand=\"md\">\n      <NavbarBrand href=\"/\">Duty App</NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/dashboard\" activeClassName=\"active\" exact>\n              Dashboard\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/events\" activeClassName=\"active\" exact>\n              Events\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/personnels\" activeClassName=\"active\" exact>\n              Personnels\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/ranks\" activeClassName=\"active\" exact>\n              Ranks\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/platoons\" activeClassName=\"active\" exact>\n              Platoons\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/points\" activeClassName=\"active\" exact>\n              Points System\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/statuses\" activeClassName=\"active\" exact>\n              Statuses\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <Nav className=\"ml-auto\" navbar>\n          <UncontrolledDropdown nav inNavbar>\n            <DropdownToggle nav caret>\n              Hello, {username}\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem tag={Link} to=\"/logout\" exact>\n                Logout\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n\nTopNavBar.propTypes = {\n  username: PropTypes.string.isRequired\n};\n\nexport default TopNavBar;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport TopNavBar from '../../components/commons/TopNavBar';\n\nexport function AppLayout({ children }) {\n  const username = useSelector(state => state.auth.get('username'));\n\n  return (\n    <>\n      <TopNavBar username={username} />\n      {children}\n    </>\n  );\n}\n\nAppLayout.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nexport default memo(AppLayout);\n"],"sourceRoot":""}