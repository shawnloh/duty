{"version":3,"sources":["actions/authActions.js","utils/api.js","pages/personnels/single/constants.js","pages/ranks/constants.js","pages/platoons/constants.js","pages/points/constants.js","pages/statuses/constants.js","AuthRoute.js","components/commons/Loading.jsx","pages/NotFoundPage/NotFoundPage.jsx","App.js","stores/reactotronConfig.js","reducers/authReducer.js","reducers/ranksReducer.js","reducers/platoonsReducer.js","reducers/eventsReducer.js","reducers/personnelsReducer.js","reducers/pointsReducer.js","reducers/statusesReducer.js","pages/login/reducer.js","pages/loading/reducer.js","pages/ranks/reducer.js","pages/platoons/reducer.js","pages/points/reducer.js","pages/statuses/reducer.js","pages/personnels/all/reducer.js","pages/personnels/add/reducer.js","pages/personnels/single/reducer.js","pages/personnels/reducer.js","pages/events/delete/reducer.js","pages/events/add/reducer.js","pages/events/reducer.js","reducers/pagesReducer.js","reducers/rootReducer.js","services/accounts.js","sagas/authSaga.js","pages/login/saga.js","actions/ranksActions.js","actions/platoonsActions.js","actions/pointsActions.js","actions/eventsActions.js","actions/personnelsActions.js","actions/statusesActions.js","services/ranks.js","services/platoons.js","services/points.js","services/personnels.js","services/statuses.js","pages/loading/saga.js","pages/ranks/saga.js","pages/platoons/saga.js","pages/points/saga.js","pages/statuses/saga.js","pages/personnels/all/saga.js","pages/personnels/add/saga.js","pages/personnels/single/saga.js","pages/personnels/saga.js","pages/events/delete/saga.js","pages/events/add/saga.js","pages/events/saga.js","sagas/pageSagas.js","sagas/rootSaga.js","stores/createStore.js","index.js","pages/ranks/actions.js","pages/platoons/actions.js","pages/points/actions.js","pages/statuses/actions.js","pages/personnels/single/actions.js","pages/personnels/add/constants.js","pages/events/delete/constants.js","pages/events/add/constants.js","pages/personnels/all/constants.js","pages/login/constants.js","pages/loading/constants.js","services/events.js","pages/personnels/all/actions.js","pages/personnels/add/actions.js","pages/events/delete/actions.js","pages/events/add/actions.js","pages/loading/actions.js","actions/constants.js","pages/login/actions.js","components/commons/TopNavBar.jsx","pages/shared/AppLayout.jsx"],"names":["logout","type","LOG_OUT","logoutFailure","LOG_OUT_FAILURE","logoutSuccess","LOG_OUT_SUCCESS","checkAuth","CHECK_AUTH","checkAuthSuccess","payload","CHECK_AUTH_SUCCESS","checkAuthFailure","errors","CHECK_AUTH_FAILURE","api","create","baseURL","withCredentials","ADD_STATUS","ADD_STATUS_SUCCESS","ADD_STATUS_FAILURE","DELETE_STATUS","DELETE_STATUS_SUCCESS","DELETE_STATUS_FAILURE","ADD_BLOCKOUT","ADD_BLOCKOUT_SUCCESS","ADD_BLOCKOUT_FAILURE","DELETE_BLOCKOUT","DELETE_BLOCKOUT_SUCCESS","DELETE_BLOCKOUT_FAILURE","CLEAR_ERRORS","ADD_RANK","ADD_RANK_SUCCESS","ADD_RANK_FAILURE","UPDATE_RANK","UPDATE_RANK_SUCCESS","UPDATE_RANK_FAILURE","DELETE_RANK","DELETE_RANK_SUCCESS","DELETE_RANK_FAILURE","ADD_PLATOON","ADD_PLATOON_SUCCESS","ADD_PLATOON_FAILURE","UPDATE_PLATOON","UPDATE_PLATOON_SUCCESS","UPDATE_PLATOON_FAILURE","DELETE_PLATOON","DELETE_PLATOON_SUCCESS","DELETE_PLATOON_FAILURE","ADD_POINT","ADD_POINT_SUCCESS","ADD_POINT_FAILURE","UPDATE_POINT","UPDATE_POINT_SUCCESS","UPDATE_POINT_FAILURE","DELETE_POINT","DELETE_POINT_SUCCESS","DELETE_POINT_FAILURE","UPDATE_STATUS","UPDATE_STATUS_SUCCESS","UPDATE_STATUS_FAILURE","connect","state","isAuthenticated","auth","get","Component","component","rest","render","props","undefined","exact","to","Loading","this","AppLayout","Container","className","Row","Spinner","color","PureComponent","NotFoundPage","goBack","history","Col","Button","onClick","LoginPage","lazy","LoadingPage","DashboardPage","RanksPage","PlatoonsPage","PointsPage","StatusesPage","PersonnelsPage","EventsPage","App","checkAuthenticated","fallback","from","path","appLoaded","reloadApp","mapDispatchToProps","loadApp","pages","loading","reactotron","Reactotron","configure","name","use","reactotronRedux","sagaPlugin","initialState","Map","username","authReducer","LOGIN","merge","ids","ranks","platoons","events","personnels","points","statuses","isLoading","actionInProgress","success","personnelsPageReducers","combineReducers","all","DELETE_PERSONNEL","DELETE_PERSONNEL_SUCCESS","DELETE_PERSONNEL_FAILURE","add","ADD_PERSONNEL","ADD_PERSONNEL_SUCCESS","TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE","ADD_PERSONNEL_FAILURE","single","isDeleting","isAdding","delete","DELETE_EVENT","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAILURE","CREATE_EVENT","CREATE_EVENT_SUCCESS","CREATE_EVENT_FAILURE","login","LOGIN_FAIL","LOAD_APP","LOAD_APP_FAILURE","LOAD_APP_SUCCESS","eventsPageReducer","personnelsPageReducer","appReducer","LOAD_RANKS_SUCCESS","LOAD_RANKS_FAILURE","LOAD_PLATOONS_SUCCESS","LOAD_PLATOONS_FAILURE","LOAD_EVENTS_SUCCESS","LOAD_EVENTS_FAILURE","LOAD_PERSONNELS_SUCCESS","LOAD_PERSONNELS_FAILURE","LOAD_POINTS_SUCCESS","LOAD_POINTS_FAILURE","LOAD_STATUSES_SUCCESS","LOAD_STATUSES_FAILURE","pagesReducer","persistConfig","transforms","immutableTransform","key","storage","blacklist","persistedRootReducer","persistReducer","action","newState","AccountService","password","post","then","response","catch","error","authSagaWatcher","call","put","ok","isAuth","data","logoutAction","message","takeLatest","loginWatcher","delay","loginFailure","loginSuccess","loadRanksSuccess","loadRanksFailure","loadPlatoonsSuccess","loadPlatoonsFailure","loadPointsSuccess","loadPointsFailure","loadEventsSuccess","loadEventsFailure","loadPersonnelsSuccess","loadPersonnelsFailure","loadStatusesSuccess","loadStatusesFailure","RanksService","id","PlatoonService","PointsService","PersonnelsService","rank","platoon","updatedPersonnel","personnelId","statusId","startDate","endDate","pStatusId","date","Statuses","loadPoints","loadRanks","loadPlatoons","loadEvents","loadPersonnels","loadStatuses","loadEssentials","refresh","loadingWatcher","getPoints","forEach","point","_id","push","getRanks","PlatoonsService","getPlatoons","EventsService","getEvents","getPersonnels","StatusesService","getStatuses","loadAppSuccess","loadAppFailed","select","clearError","addRank","deleteRank","updateRank","ranksWatcher","funcToClear","createRank","newRank","addRankSuccess","status","concat","addRankFailure","deleteId","filter","deleteRankSuccess","deleteRankFailure","updateRankSuccess","updateRankFailure","addPlatoon","deletePlatoon","updatePlatoon","platoonsWatcher","createPlatoon","newPlatoon","addPlatoonSuccess","addPlatoonFailure","deletePlatoonSuccess","deletePlatoonFailure","updatePlatoonSuccess","updatePlatoonFailure","addPoint","deletePoint","updatePoint","pointsWatcher","createPoint","newPoint","addPointSuccess","addPointFailure","deletePointSuccess","deletePointFailure","updatePointSuccess","updatePointFailure","addStatus","deleteStatus","updateStatus","statusesWatcher","createStatus","newStatus","addStatusSuccess","addStatusFailure","deleteStatusSuccess","deleteStatusFailure","updateStatusSuccess","updateStatusFailure","deletePersonnel","allWatcher","deletePersonnelFailure","deletePersonnelSuccess","clearMessage","addPersonnel","addWatcher","addPersonnelFailure","toggleAddPersonnelSuccessMessage","createPersonnel","person","addPersonnelSuccess","addBlockout","deleteBlockout","singleWatcher","clearErrors","moment","format","toLowerCase","addPersonnelStatus","statusToPush","expired","deletePersonnelStatus","personnelStatus","pStatus","addPersonnelBlockout","blockOutDates","addBlockoutSuccess","addBlockoutFailure","deletePersonnelBlockout","deleteBlockoutSuccess","deleteBlockoutFailure","personnelsSaga","allSaga","addSaga","singleSaga","deleteEvent","deleteWatcher","deleteEventFailure","revert","eventId","event","deleteEventSuccess","createEvent","createEventFailure","createEventSuccess","eventsWatcher","deleteSaga","pageSagas","loginPageSaga","loadingPageSaga","ranksPageSaga","platoonsPageSaga","pointsPageSaga","statusesPageSaga","personnelsPageSaga","eventsPageSaga","rootSagas","globalSagas","authSaga","sagaMonitor","createSagaMonitor","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","ReactotronConfig","createEnhancer","persistor","persistStore","run","document","getElementById","LOGIN_SUCCESS","LOAD_RANKS","LOAD_PLATOONS","LOAD_EVENTS","LOAD_PERSONNELS","LOAD_POINTS","LOAD_STATUSES","TopNavBar","useState","isOpen","setIsOpen","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","Link","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","children","userLogout"],"mappings":"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","file":"static/js/main.f587b0f2.chunk.js","sourcesContent":["import {\n  LOG_OUT,\n  LOG_OUT_FAILURE,\n  LOG_OUT_SUCCESS,\n  CHECK_AUTH,\n  CHECK_AUTH_SUCCESS,\n  CHECK_AUTH_FAILURE\n} from './constants';\n\nexport const logout = () => {\n  return {\n    type: LOG_OUT\n  };\n};\n\nexport const logoutFailure = () => {\n  return {\n    type: LOG_OUT_FAILURE\n  };\n};\nexport const logoutSuccess = () => {\n  return {\n    type: LOG_OUT_SUCCESS\n  };\n};\n\nexport const checkAuth = () => ({\n  type: CHECK_AUTH\n});\n\nexport const checkAuthSuccess = payload => ({\n  type: CHECK_AUTH_SUCCESS,\n  payload\n});\n\nexport const checkAuthFailure = errors => ({\n  type: CHECK_AUTH_FAILURE,\n  payload: errors\n});\n","import { create } from 'apisauce';\n\nconst api = create({\n  baseURL: '/api',\n  withCredentials: true\n});\n\nexport default api;\n","export const ADD_STATUS = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS';\nexport const ADD_STATUS_SUCCESS = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS_SUCCESS';\nexport const ADD_STATUS_FAILURE = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS_FAILURE';\n\nexport const DELETE_STATUS = 'PERSONNELS_PAGE/SINGLE/DELETE_STATUS';\nexport const DELETE_STATUS_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/DELETE_STATUS_SUCCESS';\nexport const DELETE_STATUS_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/DELETE_STATUS_FAILURE';\n\nexport const ADD_BLOCKOUT = 'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT';\nexport const ADD_BLOCKOUT_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_SUCCESS';\nexport const ADD_BLOCKOUT_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_FAILURE';\n\nexport const DELETE_BLOCKOUT = 'PERSONNELS_PAGE/SINGLE/DELETE_BLOCKOUT';\nexport const DELETE_BLOCKOUT_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/DELETE_BLOCKOUT_SUCCESS';\nexport const DELETE_BLOCKOUT_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_FAILURE';\n\nexport const CLEAR_ERRORS = 'PERSONNELS_PAGE/SINGLE/CLEAR_ERRORS';\n","export const ADD_RANK = 'RANKS_PAGE/ADD_RANK';\nexport const ADD_RANK_SUCCESS = 'RANKS_PAGE/ADD_RANK_SUCCESS';\nexport const ADD_RANK_FAILURE = 'RANKS_PAGE/ADD_RANK_FAILURE';\n\nexport const UPDATE_RANK = 'RANKS_PAGE/UPDATE_RANK';\nexport const UPDATE_RANK_SUCCESS = 'RANKS_PAGE/UPDATE_RANK_SUCCESS';\nexport const UPDATE_RANK_FAILURE = 'RANKS_PAGE/UPDATE_RANK_FAILURE';\n\nexport const DELETE_RANK = 'RANKS_PAGE/DELETE_RANK';\nexport const DELETE_RANK_SUCCESS = 'RANKS_PAGE/DELETE_RANK_SUCCESS';\nexport const DELETE_RANK_FAILURE = 'RANKS_PAGE/DELETE_RANK_FAILURE';\n","export const ADD_PLATOON = 'PLATOONS_PAGE/ADD_PLATOON';\nexport const ADD_PLATOON_SUCCESS = 'PLATOONS_PAGE/ADD_PLATOON_SUCCESS';\nexport const ADD_PLATOON_FAILURE = 'PLATOONS_PAGE/ADD_PLATOON_FAILURE';\n\nexport const UPDATE_PLATOON = 'PLATOONS_PAGE/UPDATE_PLATOON';\nexport const UPDATE_PLATOON_SUCCESS = 'PLATOONS_PAGE/UPDATE_PLATOON_SUCCESS';\nexport const UPDATE_PLATOON_FAILURE = 'PLATOONS_PAGE/UPDATE_PLATOON_FAILURE';\n\nexport const DELETE_PLATOON = 'PLATOONS_PAGE/DELETE_PLATOON';\nexport const DELETE_PLATOON_SUCCESS = 'PLATOONS_PAGE/DELETE_PLATOON_SUCCESS';\nexport const DELETE_PLATOON_FAILURE = 'PLATOONS_PAGE/DELETE_PLATOON_FAILURE';\n","export const ADD_POINT = 'POINTS_PAGE/ADD_POINT';\nexport const ADD_POINT_SUCCESS = 'POINTS_PAGE/ADD_POINT_SUCCESS';\nexport const ADD_POINT_FAILURE = 'POINTS_PAGE/ADD_POINT_FAILURE';\n\nexport const UPDATE_POINT = 'POINTS_PAGE/UPDATE_POINT';\nexport const UPDATE_POINT_SUCCESS = 'POINTS_PAGE/UPDATE_POINT_SUCCESS';\nexport const UPDATE_POINT_FAILURE = 'POINTS_PAGE/UPDATE_POINT_FAILURE';\n\nexport const DELETE_POINT = 'POINTS_PAGE/DELETE_POINT';\nexport const DELETE_POINT_SUCCESS = 'POINTS_PAGE/DELETE_POINT_SUCCESS';\nexport const DELETE_POINT_FAILURE = 'POINTS_PAGE/DELETE_POINT_FAILURE';\n","export const ADD_STATUS = 'STATUSES_PAGE/ADD_STATUS';\nexport const ADD_STATUS_SUCCESS = 'STATUSES_PAGE/ADD_STATUS_SUCCESS';\nexport const ADD_STATUS_FAILURE = 'STATUSES_PAGE/ADD_STATUS_FAILURE';\n\nexport const UPDATE_STATUS = 'STATUSES_PAGE/UPDATE_STATUS';\nexport const UPDATE_STATUS_SUCCESS = 'STATUSES_PAGE/UPDATE_STATUS_SUCCESS';\nexport const UPDATE_STATUS_FAILURE = 'STATUSES_PAGE/UPDATE_STATUS_FAILURE';\n\nexport const DELETE_STATUS = 'STATUSES_PAGE/DELETE_STATUS';\nexport const DELETE_STATUS_SUCCESS = 'STATUSES_PAGE/DELETE_STATUS_SUCCESS';\nexport const DELETE_STATUS_FAILURE = 'STATUSES_PAGE/DELETE_STATUS_FAILURE';\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction AuthRoute({ component: Component, isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (isAuthenticated === undefined) {\n          return null;\n        }\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        }\n\n        return <Redirect exact to=\"/\" />;\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.get('isAuthenticated')\n});\n\nexport default connect(mapStateToProps)(AuthRoute);\n\n// export default AuthRoute;\n","import React, { PureComponent } from 'react';\nimport { Spinner, Row, Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../../pages/shared/AppLayout';\n\nclass Loading extends PureComponent {\n  render() {\n    const { isAuthenticated } = this.props;\n    if (isAuthenticated) {\n      return (\n        <AppLayout>\n          <Container className=\"d-flex h-100 justify-content-center align-items-center flex-column\">\n            <Row>\n              <Spinner type=\"grow\" color=\"primary\" />\n              <Spinner type=\"grow\" color=\"secondary\" />\n              <Spinner type=\"grow\" color=\"success\" />\n              <Spinner type=\"grow\" color=\"danger\" />\n              <Spinner type=\"grow\" color=\"warning\" />\n              <Spinner type=\"grow\" color=\"info\" />\n              <Spinner type=\"grow\" color=\"dark\" />\n            </Row>\n            <Row>Loading Page...</Row>\n          </Container>\n        </AppLayout>\n      );\n    }\n    return (\n      <Container className=\"d-flex h-100 justify-content-center align-items-center flex-column\">\n        <Row>\n          <Spinner type=\"grow\" color=\"primary\" />\n          <Spinner type=\"grow\" color=\"secondary\" />\n          <Spinner type=\"grow\" color=\"success\" />\n          <Spinner type=\"grow\" color=\"danger\" />\n          <Spinner type=\"grow\" color=\"warning\" />\n          <Spinner type=\"grow\" color=\"info\" />\n          <Spinner type=\"grow\" color=\"dark\" />\n        </Row>\n        <Row>Loading Page...</Row>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.get('isAuthenticated')\n});\n\nexport default connect(mapStateToProps)(Loading);\n","import React, { PureComponent } from 'react';\nimport { Container, Button, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass NotFoundPage extends PureComponent {\n  goBack = () => {\n    const {\n      history: { goBack }\n    } = this.props;\n    goBack();\n  };\n\n  render() {\n    return (\n      <Container className=\"h-100\">\n        <Row className=\"h-100 justify-content-center align-items-center\">\n          <Col className=\"d-flex justify-content-center align-items-center flex-column\">\n            <h1>404</h1>\n            <p>The page that you are looking is not available</p>\n            <Button color=\"primary\" onClick={this.goBack}>\n              Click Here To Go back\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nNotFoundPage.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default NotFoundPage;\n","import React, { PureComponent, Suspense, lazy } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { checkAuth } from './actions/authActions';\nimport { loadApp } from './pages/loading/actions';\n\nimport AuthRoute from './AuthRoute';\n\nimport Loading from './components/commons/Loading';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\n\nconst LoginPage = lazy(() => import('./pages/login'));\nconst LoadingPage = lazy(() => import('./pages/loading'));\nconst DashboardPage = lazy(() => import('./pages/dashboard'));\nconst RanksPage = lazy(() => import('./pages/ranks'));\nconst PlatoonsPage = lazy(() => import('./pages/platoons'));\nconst PointsPage = lazy(() => import('./pages/points'));\nconst StatusesPage = lazy(() => import('./pages/statuses'));\nconst PersonnelsPage = lazy(() => import('./pages/personnels'));\nconst EventsPage = lazy(() => import('./pages/events'));\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { checkAuthenticated } = this.props;\n    checkAuthenticated();\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.isAuthenticated && !props.appLoaded) {\n      props.reloadApp();\n    }\n\n    return {};\n  }\n\n  render() {\n    return (\n      <Router>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Redirect from=\"/\" to=\"/login\" exact />\n            <Route path=\"/login\" component={LoginPage} />\n            <AuthRoute path=\"/app\" component={LoadingPage} />\n            <AuthRoute path=\"/dashboard\" component={DashboardPage} />\n            <AuthRoute path=\"/events\" component={EventsPage} />\n            <AuthRoute path=\"/ranks\" component={RanksPage} />\n            <AuthRoute path=\"/platoons\" component={PlatoonsPage} />\n            <AuthRoute path=\"/points\" component={PointsPage} />\n            <AuthRoute path=\"/statuses\" component={StatusesPage} />\n            <AuthRoute path=\"/personnels\" component={PersonnelsPage} />\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n        </Suspense>\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  checkAuthenticated: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  appLoaded: PropTypes.bool.isRequired,\n  reloadApp: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.get('isAuthenticated'),\n    appLoaded: state.pages.loading.get('appLoaded')\n  };\n};\nconst mapDispatchToProps = {\n  checkAuthenticated: checkAuth,\n  reloadApp: loadApp\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// if (process.env.NODE_ENV === 'development') {\nimport Reactotron from 'reactotron-react-js';\nimport { reactotronRedux } from 'reactotron-redux';\nimport sagaPlugin from 'reactotron-redux-saga';\n\nconst reactotron = Reactotron.configure({ name: 'Duty App' })\n  .use(reactotronRedux()) //  <- here i am!\n  .use(sagaPlugin())\n  .connect(); // Don't forget about me!\n\nexport default reactotron;\n// }\n","import { Map } from 'immutable';\nimport { LOGIN } from '../pages/login/constants';\nimport { CHECK_AUTH_SUCCESS, CHECK_AUTH_FAILURE } from '../actions/constants';\n\nconst initialState = Map({\n  username: '',\n  isAuthenticated: false\n});\n\nconst authReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN:\n      return state.merge({\n        username: payload.username\n      });\n    case CHECK_AUTH_SUCCESS:\n      return state.merge({\n        isAuthenticated: payload\n      });\n    case CHECK_AUTH_FAILURE:\n      return state.merge({\n        isAuthenticated: false\n      });\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { Map } from 'immutable';\nimport { LOAD_RANKS_FAILURE, LOAD_RANKS_SUCCESS } from '../actions/constants';\nimport {\n  ADD_RANK_SUCCESS,\n  DELETE_RANK_SUCCESS,\n  UPDATE_RANK_SUCCESS\n} from '../pages/ranks/constants';\n\nconst initialState = Map({\n  ids: [],\n  ranks: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_RANK_SUCCESS:\n    case LOAD_RANKS_SUCCESS:\n    case DELETE_RANK_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        ranks: payload.ranks,\n        errors: []\n      });\n    case UPDATE_RANK_SUCCESS:\n      return state.merge({\n        ranks: payload\n      });\n    case LOAD_RANKS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  LOAD_PLATOONS_FAILURE,\n  LOAD_PLATOONS_SUCCESS\n} from '../actions/constants';\nimport {\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON_SUCCESS,\n  UPDATE_PLATOON_SUCCESS\n} from '../pages/platoons/constants';\n\nconst initialState = Map({\n  ids: [],\n  platoons: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PLATOON_SUCCESS:\n    case DELETE_PLATOON_SUCCESS:\n    case LOAD_PLATOONS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        platoons: payload.platoons,\n        errors: []\n      });\n    case UPDATE_PLATOON_SUCCESS:\n      return state.merge({\n        platoons: payload\n      });\n    case LOAD_PLATOONS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOAD_EVENTS_FAILURE, LOAD_EVENTS_SUCCESS } from '../actions/constants';\nimport {\n  DELETE_EVENT_SUCCESS,\n  CREATE_EVENT_SUCCESS\n} from '../pages/events/constants';\n\nconst initialState = Map({\n  ids: [],\n  events: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_EVENTS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        events: payload.events\n      });\n\n    case LOAD_EVENTS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    case CREATE_EVENT_SUCCESS:\n    case DELETE_EVENT_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        events: payload.events\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  LOAD_PERSONNELS_FAILURE,\n  LOAD_PERSONNELS_SUCCESS\n} from '../actions/constants';\nimport {\n  DELETE_PERSONNEL_SUCCESS,\n  ADD_PERSONNEL_SUCCESS,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT_SUCCESS\n} from '../pages/personnels/constants';\n\nconst initialState = Map({\n  ids: [],\n  personnels: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_PERSONNELS_SUCCESS:\n    case DELETE_PERSONNEL_SUCCESS:\n    case ADD_PERSONNEL_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        personnels: payload.personnels\n      });\n    case DELETE_STATUS_SUCCESS:\n    case ADD_STATUS_SUCCESS:\n    case ADD_BLOCKOUT_SUCCESS:\n    case DELETE_BLOCKOUT_SUCCESS:\n      return state.merge({\n        personnels: payload\n      });\n    case LOAD_PERSONNELS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOAD_POINTS_FAILURE, LOAD_POINTS_SUCCESS } from '../actions/constants';\nimport {\n  ADD_POINT_SUCCESS,\n  DELETE_POINT_SUCCESS,\n  UPDATE_POINT_SUCCESS\n} from '../pages/points/constants';\n\nconst initialState = Map({\n  ids: [],\n  points: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_POINT_SUCCESS:\n    case DELETE_POINT_SUCCESS:\n    case LOAD_POINTS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        points: payload.points,\n        errors: []\n      });\n    case UPDATE_POINT_SUCCESS:\n      return state.merge({\n        points: payload\n      });\n    case LOAD_POINTS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  LOAD_STATUSES_FAILURE,\n  LOAD_STATUSES_SUCCESS\n} from '../actions/constants';\nimport {\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS_SUCCESS,\n  UPDATE_STATUS_SUCCESS\n} from '../pages/statuses/constants';\n\nconst initialState = Map({\n  ids: [],\n  statuses: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS_SUCCESS:\n    case LOAD_STATUSES_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        statuses: payload.statuses,\n        errors: []\n      });\n    case UPDATE_STATUS_SUCCESS:\n      return state.merge({\n        statuses: payload\n      });\n    case LOAD_STATUSES_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOGIN, LOGIN_FAIL } from './constants';\nimport {\n  CHECK_AUTH_SUCCESS,\n  CHECK_AUTH_FAILURE\n} from '../../actions/constants';\n\nconst initialState = Map({\n  isLoading: false,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN:\n      return state.merge({\n        isLoading: true,\n        errors: []\n      });\n    case CHECK_AUTH_SUCCESS:\n    case CHECK_AUTH_FAILURE:\n      return state.merge({\n        isLoading: false\n      });\n    case LOGIN_FAIL:\n      return state.merge({\n        isLoading: false,\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOAD_APP, LOAD_APP_FAILURE, LOAD_APP_SUCCESS } from './constants';\n\nconst initialState = Map({\n  isLoading: false,\n  appLoaded: false\n});\n\nexport default (state = initialState, { type }) => {\n  switch (type) {\n    case LOAD_APP:\n      return state.merge({\n        isLoading: true\n      });\n    case LOAD_APP_FAILURE:\n    case LOAD_APP_SUCCESS:\n      return state.merge({\n        isLoading: false,\n        appLoaded: true\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_RANK_FAILURE,\n  ADD_RANK,\n  ADD_RANK_SUCCESS,\n  DELETE_RANK,\n  DELETE_RANK_SUCCESS,\n  DELETE_RANK_FAILURE,\n  UPDATE_RANK,\n  UPDATE_RANK_FAILURE,\n  UPDATE_RANK_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_RANK:\n    case DELETE_RANK:\n    case UPDATE_RANK:\n      return state.merge({\n        errors: [],\n        actionInProgress: true\n      });\n    case ADD_RANK_SUCCESS:\n    case DELETE_RANK_SUCCESS:\n    case UPDATE_RANK_SUCCESS:\n      return state.merge({\n        errors: [],\n        actionInProgress: false\n      });\n    case ADD_RANK_FAILURE:\n    case DELETE_RANK_FAILURE:\n    case UPDATE_RANK_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_PLATOON_FAILURE,\n  ADD_PLATOON,\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON,\n  DELETE_PLATOON_SUCCESS,\n  DELETE_PLATOON_FAILURE,\n  UPDATE_PLATOON,\n  UPDATE_PLATOON_FAILURE,\n  UPDATE_PLATOON_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PLATOON:\n    case DELETE_PLATOON:\n    case UPDATE_PLATOON:\n      return state.merge({\n        actionInProgress: true,\n        errors: []\n      });\n    case ADD_PLATOON_SUCCESS:\n    case DELETE_PLATOON_SUCCESS:\n    case UPDATE_PLATOON_SUCCESS:\n      return state.merge({\n        actionInProgress: false,\n        errors: []\n      });\n    case ADD_PLATOON_FAILURE:\n    case DELETE_PLATOON_FAILURE:\n    case UPDATE_PLATOON_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_POINT_FAILURE,\n  ADD_POINT,\n  ADD_POINT_SUCCESS,\n  DELETE_POINT,\n  DELETE_POINT_SUCCESS,\n  DELETE_POINT_FAILURE,\n  UPDATE_POINT,\n  UPDATE_POINT_FAILURE,\n  UPDATE_POINT_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_POINT:\n    case DELETE_POINT:\n    case UPDATE_POINT:\n      return state.merge({\n        errors: [],\n        actionInProgress: true\n      });\n    case ADD_POINT_SUCCESS:\n    case DELETE_POINT_SUCCESS:\n    case UPDATE_POINT_SUCCESS:\n      return state.merge({\n        errors: [],\n        actionInProgress: false\n      });\n    case ADD_POINT_FAILURE:\n    case DELETE_POINT_FAILURE:\n    case UPDATE_POINT_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_STATUS_FAILURE,\n  ADD_STATUS,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_SUCCESS,\n  DELETE_STATUS_FAILURE,\n  UPDATE_STATUS,\n  UPDATE_STATUS_FAILURE,\n  UPDATE_STATUS_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS:\n    case DELETE_STATUS:\n    case UPDATE_STATUS:\n      return state.merge({\n        actionInProgress: true,\n        errors: []\n      });\n    case ADD_STATUS_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n    case UPDATE_STATUS_SUCCESS:\n      return state.merge({\n        actionInProgress: false,\n        errors: []\n      });\n    case ADD_STATUS_FAILURE:\n    case DELETE_STATUS_FAILURE:\n    case UPDATE_STATUS_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  DELETE_PERSONNEL,\n  DELETE_PERSONNEL_FAILURE,\n  DELETE_PERSONNEL_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DELETE_PERSONNEL:\n      return state.merge({ actionInProgress: true });\n    case DELETE_PERSONNEL_SUCCESS:\n      return state.merge({ actionInProgress: false });\n    case DELETE_PERSONNEL_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_PERSONNEL,\n  ADD_PERSONNEL_FAILURE,\n  ADD_PERSONNEL_SUCCESS,\n  TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE\n} from './constants';\n\nconst initialState = Map({\n  actionInProgress: false,\n  errors: [],\n  success: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PERSONNEL:\n    case ADD_PERSONNEL_SUCCESS:\n      return state.merge({\n        actionInProgress: false,\n        errors: [],\n        success: true\n      });\n    case TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE:\n      return state.merge({\n        success: !state.get('success')\n      });\n    case ADD_PERSONNEL_FAILURE:\n      return state.merge({\n        actionInProgress: false,\n        errors: payload\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT,\n  ADD_BLOCKOUT_FAILURE,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT,\n  DELETE_BLOCKOUT_FAILURE,\n  DELETE_BLOCKOUT_SUCCESS,\n  CLEAR_ERRORS\n} from './constants';\n\nconst initialState = Map({\n  actionInProgress: false,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS:\n    case DELETE_STATUS:\n    case ADD_BLOCKOUT:\n    case DELETE_BLOCKOUT:\n      return state.merge({\n        actionInProgress: true,\n        errors: []\n      });\n    case ADD_STATUS_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n    case ADD_BLOCKOUT_SUCCESS:\n    case DELETE_BLOCKOUT_SUCCESS:\n    case CLEAR_ERRORS:\n      return state.merge({\n        actionInProgress: false,\n        errors: []\n      });\n\n    case ADD_STATUS_FAILURE:\n    case DELETE_STATUS_FAILURE:\n    case ADD_BLOCKOUT_FAILURE:\n    case DELETE_BLOCKOUT_FAILURE:\n      return state.merge({\n        actionInProgress: false,\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport allReducer from './all/reducer';\nimport addReducer from './add/reducer';\nimport singleReducer from './single/reducer';\n\nconst personnelsPageReducers = combineReducers({\n  all: allReducer,\n  add: addReducer,\n  single: singleReducer\n});\n\nexport default personnelsPageReducers;\n","import { Map } from 'immutable';\nimport {\n  DELETE_EVENT,\n  DELETE_EVENT_FAILURE,\n  DELETE_EVENT_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  isDeleting: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DELETE_EVENT:\n      return state.merge({\n        errors: [],\n        isDeleting: true\n      });\n\n    case DELETE_EVENT_SUCCESS:\n      return state.merge({\n        isDeleting: false\n      });\n\n    case DELETE_EVENT_FAILURE:\n      return state.merge({\n        isDeleting: false,\n        errors: payload\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  CREATE_EVENT,\n  CREATE_EVENT_FAILURE,\n  CREATE_EVENT_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  isAdding: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CREATE_EVENT:\n      return state.merge({\n        isAdding: true,\n        errors: []\n      });\n    case CREATE_EVENT_SUCCESS:\n      return state.merge({\n        isAdding: false,\n        errors: []\n      });\n    case CREATE_EVENT_FAILURE:\n      return state.merge({\n        isAdding: false,\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport deleteReducer from './delete/reducer';\nimport addReducer from './add/reducer';\n\nexport default combineReducers({\n  delete: deleteReducer,\n  add: addReducer\n});\n","import { combineReducers } from 'redux';\nimport loginPageReducer from '../pages/login/reducer';\nimport loadingPageReducer from '../pages/loading/reducer';\nimport ranksPageReducer from '../pages/ranks/reducer';\nimport platoonsPageReducer from '../pages/platoons/reducer';\nimport pointsPageReducer from '../pages/points/reducer';\nimport statusesPageReducer from '../pages/statuses/reducer';\nimport personnelsPageReducer from '../pages/personnels/reducer';\nimport eventsPageReducer from '../pages/events/reducer';\n\nconst pages = combineReducers({\n  login: loginPageReducer,\n  loading: loadingPageReducer,\n  events: eventsPageReducer,\n  ranks: ranksPageReducer,\n  platoons: platoonsPageReducer,\n  points: pointsPageReducer,\n  statuses: statusesPageReducer,\n  personnels: personnelsPageReducer\n});\n\nexport default pages;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport immutableTransform from 'redux-persist-transform-immutable';\nimport { LOG_OUT_SUCCESS } from '../actions/constants';\n\n// GLOBAL REDUCERS\nimport authReducer from './authReducer';\nimport ranksReducer from './ranksReducer';\nimport platoonsReducer from './platoonsReducer';\nimport eventsReducer from './eventsReducer';\nimport personnelsReducer from './personnelsReducer';\nimport pointsReducer from './pointsReducer';\nimport statusesReducer from './statusesReducer';\nimport pagesReducer from './pagesReducer';\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n  ranks: ranksReducer,\n  platoons: platoonsReducer,\n  events: eventsReducer,\n  personnels: personnelsReducer,\n  points: pointsReducer,\n  statuses: statusesReducer,\n  pages: pagesReducer\n});\n\nconst rootReducer = (state, action) => {\n  let newState = state;\n  if (action.type === LOG_OUT_SUCCESS) {\n    newState = undefined;\n  }\n  return appReducer(newState, action);\n};\n\nconst persistConfig = {\n  transforms: [immutableTransform()],\n  key: 'root',\n  storage,\n  blacklist: ['pages']\n};\n\nconst persistedRootReducer = persistReducer(persistConfig, rootReducer);\n\nexport default persistedRootReducer;\n","import api from '../utils/api';\n\nclass AccountService {\n  static login(username, password) {\n    return api\n      .post('/accounts/login', { username, password })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static checkAuthenticated() {\n    return api\n      .get('/accounts/isauthenticated')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static logout() {\n    return api\n      .post('/accounts/logout')\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default AccountService;\n","import { put, call, takeLatest, all } from 'redux-saga/effects';\nimport { LOG_OUT, CHECK_AUTH } from '../actions/constants';\nimport {\n  logoutSuccess,\n  logoutFailure,\n  checkAuthFailure,\n  checkAuthSuccess,\n  logout as logoutAction\n} from '../actions/authActions';\nimport AccountService from '../services/accounts';\n\nfunction* logout() {\n  try {\n    yield call(AccountService.logout);\n    yield put(logoutSuccess());\n  } catch (error) {\n    yield put(logoutFailure());\n  }\n}\n\nfunction* checkAuth() {\n  try {\n    const response = yield call(AccountService.checkAuthenticated);\n    if (!response.ok) {\n      yield put(checkAuthFailure());\n    } else {\n      const isAuth = response.data.isAuthenticated;\n      yield put(checkAuthSuccess(isAuth));\n      if (!isAuth) {\n        yield put(logoutAction());\n      }\n    }\n  } catch (error) {\n    yield put(checkAuthFailure(error.message || ['Unable to login']));\n  }\n}\n\nfunction* authSagaWatcher() {\n  yield all([takeLatest(CHECK_AUTH, checkAuth), takeLatest(LOG_OUT, logout)]);\n}\n\nexport default authSagaWatcher;\n","import { takeLatest, put, call, delay } from 'redux-saga/effects';\nimport { LOGIN } from './constants';\nimport { loginFailure, loginSuccess } from './actions';\nimport { checkAuth } from '../../actions/authActions';\nimport AccountService from '../../services/accounts';\n\nfunction* login(action) {\n  try {\n    const { username, password } = action.payload;\n    const response = yield call(AccountService.login, username, password);\n    yield delay(500);\n    if (!response.ok) {\n      yield put(loginFailure([response.data]));\n    } else {\n      yield put(loginSuccess());\n      yield put(checkAuth());\n    }\n  } catch (error) {\n    yield put(loginFailure([error.message]));\n  }\n}\n\nfunction* loginWatcher() {\n  yield takeLatest(LOGIN, login);\n}\n\nexport default loginWatcher;\n","import {\n  LOAD_RANKS,\n  LOAD_RANKS_FAILURE,\n  LOAD_RANKS_SUCCESS\n} from './constants';\n\nexport const loadRanks = () => ({\n  type: LOAD_RANKS\n});\n\nexport const loadRanksSuccess = payload => ({\n  type: LOAD_RANKS_SUCCESS,\n  payload\n});\n\nexport const loadRanksFailure = payload => ({\n  type: LOAD_RANKS_FAILURE,\n  payload\n});\n","import {\n  LOAD_PLATOONS,\n  LOAD_PLATOONS_FAILURE,\n  LOAD_PLATOONS_SUCCESS\n} from './constants';\n\nexport const loadPlatoons = () => ({\n  type: LOAD_PLATOONS\n});\n\nexport const loadPlatoonsSuccess = payload => ({\n  type: LOAD_PLATOONS_SUCCESS,\n  payload\n});\n\nexport const loadPlatoonsFailure = payload => ({\n  type: LOAD_PLATOONS_FAILURE,\n  payload\n});\n","import {\n  LOAD_POINTS,\n  LOAD_POINTS_FAILURE,\n  LOAD_POINTS_SUCCESS\n} from './constants';\n\nexport const loadPoints = () => ({\n  type: LOAD_POINTS\n});\n\nexport const loadPointsSuccess = payload => ({\n  type: LOAD_POINTS_SUCCESS,\n  payload\n});\n\nexport const loadPointsFailure = payload => ({\n  type: LOAD_POINTS_FAILURE,\n  payload\n});\n","import {\n  LOAD_EVENTS,\n  LOAD_EVENTS_FAILURE,\n  LOAD_EVENTS_SUCCESS\n} from './constants';\n\nexport const loadEvents = () => ({\n  type: LOAD_EVENTS\n});\n\nexport const loadEventsSuccess = payload => ({\n  type: LOAD_EVENTS_SUCCESS,\n  payload\n});\n\nexport const loadEventsFailure = payload => ({\n  type: LOAD_EVENTS_FAILURE,\n  payload\n});\n","import {\n  LOAD_PERSONNELS,\n  LOAD_PERSONNELS_FAILURE,\n  LOAD_PERSONNELS_SUCCESS\n} from './constants';\n\nexport const loadPersonnels = () => ({\n  type: LOAD_PERSONNELS\n});\n\nexport const loadPersonnelsSuccess = payload => ({\n  type: LOAD_PERSONNELS_SUCCESS,\n  payload\n});\n\nexport const loadPersonnelsFailure = payload => ({\n  type: LOAD_PERSONNELS_FAILURE,\n  payload\n});\n","import {\n  LOAD_STATUSES,\n  LOAD_STATUSES_FAILURE,\n  LOAD_STATUSES_SUCCESS\n} from './constants';\n\nexport const loadStatuses = () => ({\n  type: LOAD_STATUSES\n});\n\nexport const loadStatusesSuccess = payload => ({\n  type: LOAD_STATUSES_SUCCESS,\n  payload\n});\n\nexport const loadStatusesFailure = errors => ({\n  type: LOAD_STATUSES_FAILURE,\n  payload: errors\n});\n","import api from '../utils/api';\n\nclass RanksService {\n  static getRanks() {\n    return api\n      .get('/ranks')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createRank(name) {\n    return api\n      .post('/ranks', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteRank(id) {\n    return api\n      .delete(`/ranks/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updateRank(id, name) {\n    return api\n      .put(`/ranks/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default RanksService;\n","import api from '../utils/api';\n\nclass PlatoonService {\n  static getPlatoons() {\n    return api\n      .get('/platoons')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPlatoon(name) {\n    return api\n      .post('/platoons', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePlatoon(id) {\n    return api\n      .delete(`/platoons/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updatePlatoon(id, name) {\n    return api\n      .put(`/platoons/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PlatoonService;\n","import api from '../utils/api';\n\nclass PointsService {\n  static getPoints() {\n    return api\n      .get('/points')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPoint(name) {\n    return api\n      .post('/points', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePoint(id) {\n    return api\n      .delete(`/points/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updatePoint(id, name) {\n    return api\n      .put(`/points/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PointsService;\n","import api from '../utils/api';\n\nclass PersonnelsService {\n  static getPersonnels() {\n    return api\n      .get('/person')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPersonnel(name, rank, platoon) {\n    return api\n      .post('/person/new', { name, rank, platoon })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static editPersonnel(id, updatedPersonnel) {\n    return api\n      .put(`/person/${id}`, updatedPersonnel)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnel(id) {\n    return api\n      .delete(`/person/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static addPersonnelStatus(personnelId, statusId, startDate, endDate) {\n    return api\n      .post(`/person/status/${personnelId}/add`, {\n        statusId,\n        startDate,\n        endDate\n      })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnelStatus(personnelId, pStatusId) {\n    return api\n      .delete(`/person/status/${personnelId}/${pStatusId}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static addPersonnelBlockout(personnelId, date) {\n    return api\n      .post(`/person/${personnelId}/blockout`, { startDate: date })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnelBlockout(personnelId, date) {\n    return api\n      .post(`/person/${personnelId}/blockout/delete`, { date })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PersonnelsService;\n","import api from '../utils/api';\n\nclass Statuses {\n  static getStatuses() {\n    return api\n      .get('/status')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createStatus(name) {\n    return api\n      .post('/status', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteStatus(id) {\n    return api\n      .delete(`/status/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updateStatus(id, name) {\n    return api\n      .put(`/status/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default Statuses;\n","import { takeLatest, call, all, put, delay, select } from 'redux-saga/effects';\nimport { LOAD_APP } from './constants';\nimport { loadRanksSuccess, loadRanksFailure } from '../../actions/ranksActions';\nimport {\n  loadPlatoonsFailure,\n  loadPlatoonsSuccess\n} from '../../actions/platoonsActions';\nimport {\n  loadPointsFailure,\n  loadPointsSuccess\n} from '../../actions/pointsActions';\nimport {\n  loadEventsSuccess,\n  loadEventsFailure\n} from '../../actions/eventsActions';\nimport {\n  loadPersonnelsFailure,\n  loadPersonnelsSuccess\n} from '../../actions/personnelsActions';\nimport {\n  loadStatusesFailure,\n  loadStatusesSuccess\n} from '../../actions/statusesActions';\n\nimport { loadAppSuccess, loadAppFailed } from './actions';\nimport RanksService from '../../services/ranks';\nimport PlatoonsService from '../../services/platoons';\nimport PointsService from '../../services/points';\nimport EventsService from '../../services/events';\nimport PersonnelsService from '../../services/personnels';\nimport StatusesService from '../../services/statuses';\n\nfunction* loadPoints() {\n  try {\n    const response = yield call(PointsService.getPoints);\n    if (response.ok) {\n      const points = {};\n      const ids = [];\n\n      response.data.forEach(point => {\n        const { _id: id } = point;\n        points[id] = point;\n        ids.push(id);\n      });\n      yield put(loadPointsSuccess({ ids, points }));\n    } else {\n      yield put(\n        loadPointsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPointsFailure([error.message]));\n  }\n}\n\nfunction* loadRanks() {\n  try {\n    const response = yield call(RanksService.getRanks);\n    if (response.ok) {\n      const ranks = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        ranks[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadRanksSuccess({ ids, ranks }));\n    } else {\n      yield put(\n        loadRanksFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadRanksFailure([error.message]));\n  }\n}\n\nfunction* loadPlatoons() {\n  try {\n    const response = yield call(PlatoonsService.getPlatoons);\n    if (response.ok) {\n      const platoons = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        platoons[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadPlatoonsSuccess({ ids, platoons }));\n    } else {\n      yield put(\n        loadPlatoonsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPlatoonsFailure([error.message]));\n  }\n}\n\nfunction* loadEvents() {\n  try {\n    const response = yield call(EventsService.getEvents);\n    if (response.ok) {\n      const events = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        events[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadEventsSuccess({ ids, events }));\n    } else {\n      yield put(\n        loadEventsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadEventsFailure([error.message]));\n  }\n}\n\nfunction* loadPersonnels() {\n  try {\n    const response = yield call(PersonnelsService.getPersonnels);\n    if (response.ok) {\n      const personnels = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        personnels[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadPersonnelsSuccess({ ids, personnels }));\n    } else {\n      yield put(\n        loadPersonnelsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPersonnelsFailure([error.message]));\n  }\n}\n\nfunction* loadStatuses() {\n  try {\n    const response = yield call(StatusesService.getStatuses);\n    if (response.ok) {\n      const statuses = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        statuses[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadStatusesSuccess({ ids, statuses }));\n    } else {\n      yield put(\n        loadStatusesFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadStatusesFailure([error.message]));\n  }\n}\n\nfunction* loadEssentials() {\n  try {\n    yield all([\n      call(loadRanks),\n      call(loadPlatoons),\n      call(loadPoints),\n      call(loadEvents),\n      call(loadPersonnels),\n      call(loadStatuses)\n    ]);\n    yield put(loadAppSuccess());\n  } catch (error) {\n    yield put(loadAppFailed());\n  }\n}\n\nfunction* refresh() {\n  while (true) {\n    const threeMinute = 1000 * 60 * 3;\n    yield delay(threeMinute);\n    const isAuth = yield select(state => state.auth.get('isAuthenticated'));\n    if (isAuth) {\n      yield call(loadEssentials);\n    }\n  }\n}\n\nfunction* loadingWatcher() {\n  yield all([takeLatest(LOAD_APP, loadEssentials), refresh()]);\n}\n\nexport default loadingWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_RANK, DELETE_RANK, UPDATE_RANK } from './constants';\nimport {\n  addRankSuccess,\n  addRankFailure,\n  deleteRankSuccess,\n  deleteRankFailure,\n  updateRankSuccess,\n  updateRankFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport RanksService from '../../services/ranks';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\n\nfunction* addRank(action) {\n  try {\n    const name = action.payload;\n    const ids = yield select(state => state.ranks.get('ids'));\n    const ranks = yield select(state => state.ranks.get('ranks'));\n    const response = yield call(RanksService.createRank, name);\n\n    if (response.ok) {\n      const newRank = response.data;\n      ids.push(newRank._id);\n      ranks[newRank._id] = {\n        _id: newRank._id,\n        name: newRank.name\n      };\n      yield put(addRankSuccess({ ids, ranks }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addRankFailure(errors));\n      yield call(clearError, addRankFailure);\n    }\n  } catch (error) {\n    yield put(addRankFailure([error.message]));\n    yield call(clearError, addRankFailure);\n  }\n}\n\nfunction* deleteRank(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(RanksService.deleteRank, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.ranks.get('ids'));\n      const { ...ranks } = yield select(state => state.ranks.get('ranks'));\n      ids = ids.filter(id => id !== deleteId);\n      delete ranks[deleteId];\n      yield put(deleteRankSuccess({ ids, ranks }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteRankFailure(errors));\n      yield call(clearError, deleteRankFailure);\n    }\n  } catch (error) {\n    yield put(deleteRankFailure([error.message]));\n    yield call(clearError, deleteRankFailure);\n  }\n}\n\nfunction* updateRank(action) {\n  try {\n    const { id, name } = action.payload;\n    const response = yield call(RanksService.updateRank, id, name);\n    if (response.ok) {\n      const { ...ranks } = yield select(state => state.ranks.get('ranks'));\n      ranks[id] = {\n        _id: response.data._id,\n        name: response.data.name\n      };\n\n      yield put(updateRankSuccess(ranks));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else if (response.status === 304) {\n      yield put(\n        updateRankFailure(['Updating rank must not be the same name as before'])\n      );\n      yield call(clearError, updateRankFailure);\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(updateRankFailure(errors));\n      yield call(clearError, updateRankFailure);\n    }\n  } catch (error) {\n    yield put(updateRankFailure([error.message]));\n    yield call(clearError, updateRankFailure);\n  }\n}\n\nfunction* ranksWatcher() {\n  yield all([\n    takeLatest(ADD_RANK, addRank),\n    takeLatest(DELETE_RANK, deleteRank),\n    takeLatest(UPDATE_RANK, updateRank)\n  ]);\n}\n\nexport default ranksWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_PLATOON, DELETE_PLATOON, UPDATE_PLATOON } from './constants';\nimport {\n  addPlatoonSuccess,\n  addPlatoonFailure,\n  deletePlatoonSuccess,\n  deletePlatoonFailure,\n  updatePlatoonSuccess,\n  updatePlatoonFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport PlatoonsService from '../../services/platoons';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\n\nfunction* addPlatoon(action) {\n  try {\n    const name = action.payload;\n    const ids = yield select(state => state.platoons.get('ids'));\n    const platoons = yield select(state => state.platoons.get('platoons'));\n    const response = yield call(PlatoonsService.createPlatoon, name);\n\n    if (response.ok) {\n      const newPlatoon = response.data;\n      ids.push(newPlatoon._id);\n      platoons[newPlatoon._id] = {\n        _id: newPlatoon._id,\n        name: newPlatoon.name\n      };\n      yield put(addPlatoonSuccess({ ids, platoons }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addPlatoonFailure(errors));\n      yield call(clearError, addPlatoonFailure);\n    }\n  } catch (error) {\n    yield put(addPlatoonFailure([error.message]));\n    yield call(clearError, addPlatoonFailure);\n  }\n}\n\nfunction* deletePlatoon(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PlatoonsService.deletePlatoon, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.platoons.get('ids'));\n      const { ...platoons } = yield select(state =>\n        state.platoons.get('platoons')\n      );\n      ids = ids.filter(id => id !== deleteId);\n      delete platoons[deleteId];\n      yield put(deletePlatoonSuccess({ ids, platoons }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePlatoonFailure(errors));\n      yield call(clearError, deletePlatoonFailure);\n    }\n  } catch (error) {\n    yield put(deletePlatoonFailure([error.message]));\n    yield call(clearError, deletePlatoonFailure);\n  }\n}\n\nfunction* updatePlatoon(action) {\n  try {\n    const { id, name } = action.payload;\n    const response = yield call(PlatoonsService.updatePlatoon, id, name);\n    if (response.ok) {\n      const { ...platoons } = yield select(state =>\n        state.platoons.get('platoons')\n      );\n      platoons[id] = {\n        _id: response.data._id,\n        name: response.data.name\n      };\n\n      yield put(updatePlatoonSuccess(platoons));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else if (response.status === 304) {\n      yield put(\n        updatePlatoonFailure([\n          'Updating platoon must not be the same name as before'\n        ])\n      );\n      yield call(clearError, updatePlatoonFailure);\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(updatePlatoonFailure(errors));\n      yield call(clearError, updatePlatoonFailure);\n    }\n  } catch (error) {\n    yield put(updatePlatoonFailure([error.message]));\n    yield call(clearError, updatePlatoonFailure);\n  }\n}\n\nfunction* platoonsWatcher() {\n  yield all([\n    takeLatest(ADD_PLATOON, addPlatoon),\n    takeLatest(DELETE_PLATOON, deletePlatoon),\n    takeLatest(UPDATE_PLATOON, updatePlatoon)\n  ]);\n}\n\nexport default platoonsWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_POINT, DELETE_POINT, UPDATE_POINT } from './constants';\nimport {\n  addPointSuccess,\n  addPointFailure,\n  deletePointSuccess,\n  deletePointFailure,\n  updatePointSuccess,\n  updatePointFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport PointsService from '../../services/points';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\n\nfunction* addPoint(action) {\n  try {\n    const name = action.payload;\n    const ids = yield select(state => state.points.get('ids'));\n    const points = yield select(state => state.points.get('points'));\n    const response = yield call(PointsService.createPoint, name);\n\n    if (response.ok) {\n      const newPoint = response.data;\n      ids.push(newPoint._id);\n      points[newPoint._id] = {\n        _id: newPoint._id,\n        name: newPoint.name\n      };\n      yield put(addPointSuccess({ ids, points }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addPointFailure(errors));\n      yield call(clearError, addPointFailure);\n    }\n  } catch (error) {\n    yield put(addPointFailure([error.message]));\n    yield call(clearError, addPointFailure);\n  }\n}\n\nfunction* deletePoint(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PointsService.deletePoint, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.points.get('ids'));\n      const { ...points } = yield select(state => state.points.get('points'));\n      ids = ids.filter(id => id !== deleteId);\n      delete points[deleteId];\n      yield put(deletePointSuccess({ ids, points }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePointFailure(errors));\n      yield call(clearError, deletePointFailure);\n    }\n  } catch (error) {\n    yield put(deletePointFailure([error.message]));\n    yield call(clearError, deletePointFailure);\n  }\n}\n\nfunction* updatePoint(action) {\n  try {\n    const { id, name } = action.payload;\n    const response = yield call(PointsService.updatePoint, id, name);\n    if (response.ok) {\n      const { ...points } = yield select(state => state.points.get('points'));\n      points[id] = {\n        _id: response.data._id,\n        name: response.data.name\n      };\n\n      yield put(updatePointSuccess(points));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else if (response.status === 304) {\n      yield put(\n        updatePointFailure(['Updating point must not be the same as before'])\n      );\n      yield call(clearError, updatePointFailure);\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(updatePointFailure(errors));\n      yield call(clearError, updatePointFailure);\n    }\n  } catch (error) {\n    yield put(updatePointFailure([error.message]));\n    yield call(clearError, updatePointFailure);\n  }\n}\n\nfunction* pointsWatcher() {\n  yield all([\n    takeLatest(ADD_POINT, addPoint),\n    takeLatest(DELETE_POINT, deletePoint),\n    takeLatest(UPDATE_POINT, updatePoint)\n  ]);\n}\n\nexport default pointsWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_STATUS, DELETE_STATUS, UPDATE_STATUS } from './constants';\nimport {\n  addStatusSuccess,\n  addStatusFailure,\n  deleteStatusSuccess,\n  deleteStatusFailure,\n  updateStatusSuccess,\n  updateStatusFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport StatusesService from '../../services/statuses';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\nfunction* addStatus(action) {\n  try {\n    const name = action.payload;\n    const ids = yield select(state => state.statuses.get('ids'));\n    const statuses = yield select(state => state.statuses.get('statuses'));\n    const response = yield call(StatusesService.createStatus, name);\n\n    if (response.ok) {\n      const newStatus = response.data;\n      ids.push(newStatus._id);\n      statuses[newStatus._id] = {\n        _id: newStatus._id,\n        name: newStatus.name\n      };\n      yield put(addStatusSuccess({ ids, statuses }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addStatusFailure(errors));\n      yield call(clearError, addStatusFailure);\n    }\n  } catch (error) {\n    yield put(addStatusFailure([error.message]));\n    yield call(clearError, addStatusFailure);\n  }\n}\n\nfunction* deleteStatus(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(StatusesService.deleteStatus, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.statuses.get('ids'));\n      const { ...statuses } = yield select(state =>\n        state.statuses.get('statuses')\n      );\n      ids = ids.filter(id => id !== deleteId);\n      delete statuses[deleteId];\n      yield put(deleteStatusSuccess({ ids, statuses }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteStatusFailure(errors));\n      yield call(clearError, deleteStatusFailure);\n    }\n  } catch (error) {\n    yield put(deleteStatusFailure([error.message]));\n    yield call(clearError, deleteStatusFailure);\n  }\n}\n\nfunction* updateStatus(action) {\n  try {\n    const { id, name } = action.payload;\n    const response = yield call(StatusesService.updateStatus, id, name);\n    if (response.ok) {\n      const { ...statuses } = yield select(state =>\n        state.statuses.get('statuses')\n      );\n      statuses[id] = {\n        _id: response.data._id,\n        name: response.data.name\n      };\n\n      yield put(updateStatusSuccess(statuses));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else if (response.status === 304) {\n      yield put(\n        updateStatusFailure(['Updating status must not be the same as before'])\n      );\n      yield call(clearError, updateStatusFailure);\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(updateStatusFailure(errors));\n      yield call(clearError, updateStatusFailure);\n    }\n  } catch (error) {\n    yield put(updateStatusFailure([error.message]));\n    yield call(clearError, updateStatusFailure);\n  }\n}\n\nfunction* statusesWatcher() {\n  yield all([\n    takeLatest(ADD_STATUS, addStatus),\n    takeLatest(DELETE_STATUS, deleteStatus),\n    takeLatest(UPDATE_STATUS, updateStatus)\n  ]);\n}\n\nexport default statusesWatcher;\n","import { call, takeLatest, select, put, delay } from 'redux-saga/effects';\nimport { DELETE_PERSONNEL } from './constants';\nimport { deletePersonnelFailure, deletePersonnelSuccess } from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(deletePersonnelFailure([]));\n  } catch (error) {\n    yield put(deletePersonnelFailure([]));\n  }\n}\n\nfunction* deletePersonnel(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PersonnelsService.deletePersonnel, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.personnels.get('ids'));\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n\n      ids = ids.filter(id => id !== deleteId);\n      delete personnels[deleteId];\n      yield put(deletePersonnelSuccess({ ids, personnels }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePersonnelFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deletePersonnelFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* allWatcher() {\n  yield takeLatest(DELETE_PERSONNEL, deletePersonnel);\n}\n\nexport default allWatcher;\n","import { takeLatest, put, call, select, delay, all } from 'redux-saga/effects';\nimport { ADD_PERSONNEL } from './constants';\nimport {\n  addPersonnelFailure,\n  addPersonnelSuccess,\n  toggleAddPersonnelSuccessMessage\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearMessage() {\n  yield delay(4000);\n  yield all([\n    put(addPersonnelFailure([])),\n    put(toggleAddPersonnelSuccessMessage())\n  ]);\n}\n\nfunction* addPersonnel(action) {\n  try {\n    const { name, rank, platoon } = action.payload;\n    const response = yield call(\n      PersonnelsService.createPersonnel,\n      name,\n      rank,\n      platoon\n    );\n    if (response.ok) {\n      const [...ids] = yield select(state => state.personnels.get('ids'));\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const person = response.data;\n      ids.push(person._id);\n      personnels[person._id] = person;\n      yield put(addPersonnelSuccess({ ids, personnels }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addPersonnelFailure(errors));\n    }\n  } catch (error) {\n    yield put(addPersonnelFailure([error.message]));\n  }\n  yield call(clearMessage);\n}\n\nfunction* addWatcher() {\n  yield takeLatest(ADD_PERSONNEL, addPersonnel);\n}\n\nexport default addWatcher;\n","import { takeLatest, call, put, select, all, delay } from 'redux-saga/effects';\nimport moment from 'moment-timezone';\nimport {\n  ADD_STATUS,\n  DELETE_STATUS,\n  ADD_BLOCKOUT,\n  DELETE_BLOCKOUT\n} from './constants';\nimport {\n  addStatusSuccess,\n  addStatusFailure,\n  deleteStatusFailure,\n  deleteStatusSuccess,\n  addBlockoutSuccess,\n  addBlockoutFailure,\n  deleteBlockoutFailure,\n  deleteBlockoutSuccess,\n  clearErrors\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(clearErrors());\n  } catch (error) {\n    yield put(clearErrors());\n  }\n}\nfunction* addStatus(action) {\n  try {\n    const { personnelId, statusId } = action.payload;\n    let { startDate, endDate } = action.payload;\n    startDate = moment(startDate, 'DDMMYY', true).format('DD-MM-YYYY');\n    endDate =\n      endDate.toLowerCase() === 'permanent'\n        ? endDate\n        : moment(endDate, 'DDMMYY', true).format('DD-MM-YYYY');\n\n    const response = yield call(\n      PersonnelsService.addPersonnelStatus,\n      personnelId,\n      statusId,\n      startDate,\n      endDate\n    );\n    if (response.ok) {\n      const status = response.data;\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const statusToPush = {\n        _id: status._id,\n        expired: status.expired,\n        statusId: status.statusId,\n        startDate: status.startDate,\n        endDate: status.endDate\n      };\n      personnels[personnelId].statuses.push(statusToPush);\n      yield put(addStatusSuccess(personnels));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(addStatusFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteStatus(action) {\n  try {\n    const { personnelId, pStatusId } = action.payload;\n    const response = yield call(\n      PersonnelsService.deletePersonnelStatus,\n      personnelId,\n      pStatusId\n    );\n    if (response.ok) {\n      const status = response.data.personnelStatus;\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      personnels[personnelId].statuses = personnels[\n        personnelId\n      ].statuses.filter(pStatus => pStatus._id !== status._id);\n      yield put(deleteStatusSuccess(personnels));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteStatusFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* addBlockout(action) {\n  try {\n    const { personnelId, date } = action.payload;\n    const startDate = moment(date, 'DDMMYY', true).format('DD-MM-YYYY');\n    const response = yield call(\n      PersonnelsService.addPersonnelBlockout,\n      personnelId,\n      startDate\n    );\n\n    if (response.ok) {\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const { blockOutDates, _id: id } = response.data;\n      personnels[id].blockOutDates = blockOutDates;\n      yield put(addBlockoutSuccess(personnels));\n    } else if (response.status === 304) {\n      yield put(addBlockoutFailure(['Blockout date already exist']));\n      yield call(clearError, addBlockoutFailure);\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addBlockoutFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(addBlockoutFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteBlockout(action) {\n  try {\n    const { personnelId, date } = action.payload;\n    const response = yield call(\n      PersonnelsService.deletePersonnelBlockout,\n      personnelId,\n      date\n    );\n    if (response.ok) {\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const { blockOutDates, _id: id } = response.data;\n      personnels[id].blockOutDates = blockOutDates;\n      yield put(deleteBlockoutSuccess(personnels));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteBlockoutFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteBlockoutFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* singleWatcher() {\n  yield all([\n    takeLatest(ADD_STATUS, addStatus),\n    takeLatest(DELETE_STATUS, deleteStatus),\n    takeLatest(ADD_BLOCKOUT, addBlockout),\n    takeLatest(DELETE_BLOCKOUT, deleteBlockout)\n  ]);\n}\n\nexport default singleWatcher;\n","import { all } from 'redux-saga/effects';\nimport allSaga from './all/saga';\nimport addSaga from './add/saga';\nimport singleSaga from './single/saga';\n\nfunction* personnelsSaga() {\n  yield all([allSaga(), addSaga(), singleSaga()]);\n}\n\nexport default personnelsSaga;\n","import { takeLatest, call, put, select, delay } from 'redux-saga/effects';\nimport { DELETE_EVENT } from './constants';\nimport { deleteEventFailure, deleteEventSuccess } from './actions';\nimport { logout } from '../../../actions/authActions';\nimport EventsService from '../../../services/events';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(deleteEventFailure([]));\n  } catch (error) {\n    yield put(deleteEventFailure([]));\n  }\n}\n\nfunction* deleteEvent(action) {\n  try {\n    const { revert, eventId } = action.payload;\n    const response = yield call(EventsService.deleteEvent, eventId, revert);\n    if (response.ok) {\n      const { event } = response.data;\n\n      let ids = yield select(state => state.events.get('ids'));\n      const { ...events } = yield select(state => state.events.get('events'));\n      ids = ids.filter(id => id !== event._id);\n      delete events[event._id];\n      yield put(deleteEventSuccess({ ids, events }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteEventFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteEventFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteWatcher() {\n  yield takeLatest(DELETE_EVENT, deleteEvent);\n}\n\nexport default deleteWatcher;\n","import { put, takeLatest, call, delay, select } from 'redux-saga/effects';\nimport { CREATE_EVENT } from './constants';\nimport { createEventFailure, createEventSuccess } from './actions';\nimport EventsService from '../../../services/events';\nimport { logout } from '../../../actions/authActions';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(createEventFailure([]));\n  } catch (error) {\n    yield put(createEventFailure([]));\n  }\n}\n\nfunction* createEvent(action) {\n  try {\n    const response = yield call(EventsService.createEvent, action.payload);\n    if (response.ok) {\n      const event = response.data;\n      const ids = yield select(state => state.events.get('ids'));\n      const { ...events } = yield select(state => state.events.get('events'));\n\n      ids.push(event._id);\n      events[event._id] = event;\n\n      yield put(createEventSuccess({ ids, events }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(createEventFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(createEventFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* addWatcher() {\n  yield takeLatest(CREATE_EVENT, createEvent);\n}\n\nexport default addWatcher;\n","import { all } from 'redux-saga/effects';\n\nimport deleteSaga from './delete/saga';\nimport addSaga from './add/saga';\n\nfunction* eventsWatcher() {\n  yield all([deleteSaga(), addSaga()]);\n}\n\nexport default eventsWatcher;\n","// PAGES SAGAS\nimport loginPageSaga from '../pages/login/saga';\nimport loadingPageSaga from '../pages/loading/saga';\nimport ranksPageSaga from '../pages/ranks/saga';\nimport platoonsPageSaga from '../pages/platoons/saga';\nimport pointsPageSaga from '../pages/points/saga';\nimport statusesPageSaga from '../pages/statuses/saga';\nimport personnelsPageSaga from '../pages/personnels/saga';\nimport eventsPageSaga from '../pages/events/saga';\n\nconst pageSagas = [\n  loginPageSaga(),\n  loadingPageSaga(),\n  ranksPageSaga(),\n  platoonsPageSaga(),\n  pointsPageSaga(),\n  statusesPageSaga(),\n  personnelsPageSaga(),\n  eventsPageSaga()\n];\n\nexport default pageSagas;\n","import { all } from 'redux-saga/effects';\n\n// GLOBAL SAGAS\nimport authSaga from './authSaga';\nimport pageSagas from './pageSagas';\n\nconst globalSagas = [authSaga()];\n\nfunction* rootSagas() {\n  yield all([...globalSagas, ...pageSagas]);\n}\n\nexport default rootSagas;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\n\nimport Reactotron from 'reactotron-react-js';\nimport ReactotronConfig from './reactotronConfig';\n\nimport rootReducer from '../reducers/rootReducer';\nimport rootSagas from '../sagas/rootSaga';\n\nconst configureStore = (state = {}) => {\n  // let sagaMiddleware = createSagaMiddleware();\n  // let store = createStore(rootReducer, state, applyMiddleware(sagaMiddleware));\n  // let persistor = persistStore(store);\n\n  // if (process.env.NODE_ENV === 'development') {\n  const sagaMonitor = Reactotron.createSagaMonitor();\n  const sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n  const store = createStore(\n    rootReducer,\n    state,\n    compose(applyMiddleware(sagaMiddleware), ReactotronConfig.createEnhancer())\n  );\n  const persistor = persistStore(store);\n  // }\n\n  sagaMiddleware.run(rootSagas);\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/styles.css';\nimport createStore from './stores/createStore';\n\nconst { store, persistor } = createStore();\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {\n  ADD_RANK,\n  ADD_RANK_FAILURE,\n  ADD_RANK_SUCCESS,\n  DELETE_RANK,\n  DELETE_RANK_FAILURE,\n  DELETE_RANK_SUCCESS,\n  UPDATE_RANK,\n  UPDATE_RANK_FAILURE,\n  UPDATE_RANK_SUCCESS\n} from './constants';\n\nexport const addRank = name => ({\n  type: ADD_RANK,\n  payload: name\n});\n\nexport const addRankSuccess = ({ ids, ranks }) => ({\n  type: ADD_RANK_SUCCESS,\n  payload: {\n    ids,\n    ranks\n  }\n});\n\nexport const addRankFailure = errors => ({\n  type: ADD_RANK_FAILURE,\n  payload: errors\n});\n\nexport const deleteRank = id => ({\n  type: DELETE_RANK,\n  payload: id\n});\n\nexport const deleteRankSuccess = id => ({\n  type: DELETE_RANK_SUCCESS,\n  payload: id\n});\n\nexport const deleteRankFailure = errors => ({\n  type: DELETE_RANK_FAILURE,\n  payload: errors\n});\n\nexport const updateRank = (id, name) => ({\n  type: UPDATE_RANK,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updateRankSuccess = ranks => ({\n  type: UPDATE_RANK_SUCCESS,\n  payload: ranks\n});\n\nexport const updateRankFailure = errors => ({\n  type: UPDATE_RANK_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_PLATOON,\n  ADD_PLATOON_FAILURE,\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON,\n  DELETE_PLATOON_FAILURE,\n  DELETE_PLATOON_SUCCESS,\n  UPDATE_PLATOON,\n  UPDATE_PLATOON_FAILURE,\n  UPDATE_PLATOON_SUCCESS\n} from './constants';\n\nexport const addPlatoon = name => ({\n  type: ADD_PLATOON,\n  payload: name\n});\n\nexport const addPlatoonSuccess = ({ ids, platoons }) => ({\n  type: ADD_PLATOON_SUCCESS,\n  payload: {\n    ids,\n    platoons\n  }\n});\n\nexport const addPlatoonFailure = errors => ({\n  type: ADD_PLATOON_FAILURE,\n  payload: errors\n});\n\nexport const deletePlatoon = id => ({\n  type: DELETE_PLATOON,\n  payload: id\n});\n\nexport const deletePlatoonSuccess = id => ({\n  type: DELETE_PLATOON_SUCCESS,\n  payload: id\n});\n\nexport const deletePlatoonFailure = errors => ({\n  type: DELETE_PLATOON_FAILURE,\n  payload: errors\n});\n\nexport const updatePlatoon = (id, name) => ({\n  type: UPDATE_PLATOON,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updatePlatoonSuccess = platoons => ({\n  type: UPDATE_PLATOON_SUCCESS,\n  payload: platoons\n});\n\nexport const updatePlatoonFailure = errors => ({\n  type: UPDATE_PLATOON_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_POINT,\n  ADD_POINT_FAILURE,\n  ADD_POINT_SUCCESS,\n  DELETE_POINT,\n  DELETE_POINT_FAILURE,\n  DELETE_POINT_SUCCESS,\n  UPDATE_POINT,\n  UPDATE_POINT_FAILURE,\n  UPDATE_POINT_SUCCESS\n} from './constants';\n\nexport const addPoint = name => ({\n  type: ADD_POINT,\n  payload: name\n});\n\nexport const addPointSuccess = ({ ids, points }) => ({\n  type: ADD_POINT_SUCCESS,\n  payload: {\n    ids,\n    points\n  }\n});\n\nexport const addPointFailure = errors => ({\n  type: ADD_POINT_FAILURE,\n  payload: errors\n});\n\nexport const deletePoint = id => ({\n  type: DELETE_POINT,\n  payload: id\n});\n\nexport const deletePointSuccess = id => ({\n  type: DELETE_POINT_SUCCESS,\n  payload: id\n});\n\nexport const deletePointFailure = errors => ({\n  type: DELETE_POINT_FAILURE,\n  payload: errors\n});\n\nexport const updatePoint = (id, name) => ({\n  type: UPDATE_POINT,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updatePointSuccess = points => ({\n  type: UPDATE_POINT_SUCCESS,\n  payload: points\n});\n\nexport const updatePointFailure = errors => ({\n  type: UPDATE_POINT_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  UPDATE_STATUS,\n  UPDATE_STATUS_FAILURE,\n  UPDATE_STATUS_SUCCESS\n} from './constants';\n\nexport const addStatus = name => ({\n  type: ADD_STATUS,\n  payload: name\n});\n\nexport const addStatusSuccess = ({ ids, statuses }) => ({\n  type: ADD_STATUS_SUCCESS,\n  payload: {\n    ids,\n    statuses\n  }\n});\n\nexport const addStatusFailure = errors => ({\n  type: ADD_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const deleteStatus = id => ({\n  type: DELETE_STATUS,\n  payload: id\n});\n\nexport const deleteStatusSuccess = id => ({\n  type: DELETE_STATUS_SUCCESS,\n  payload: id\n});\n\nexport const deleteStatusFailure = errors => ({\n  type: DELETE_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const updateStatus = (id, name) => ({\n  type: UPDATE_STATUS,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updateStatusSuccess = statuses => ({\n  type: UPDATE_STATUS_SUCCESS,\n  payload: statuses\n});\n\nexport const updateStatusFailure = errors => ({\n  type: UPDATE_STATUS_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT,\n  ADD_BLOCKOUT_FAILURE,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT,\n  DELETE_BLOCKOUT_FAILURE,\n  DELETE_BLOCKOUT_SUCCESS,\n  CLEAR_ERRORS\n} from './constants';\n\nexport const addStatus = (personnelId, statusId, startDate, endDate) => ({\n  type: ADD_STATUS,\n  payload: {\n    personnelId,\n    statusId,\n    startDate,\n    endDate\n  }\n});\n\nexport const addStatusSuccess = payload => ({\n  type: ADD_STATUS_SUCCESS,\n  payload\n});\n\nexport const addStatusFailure = errors => ({\n  type: ADD_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const deleteStatus = (personnelId, pStatusId) => ({\n  type: DELETE_STATUS,\n  payload: {\n    personnelId,\n    pStatusId\n  }\n});\n\nexport const deleteStatusSuccess = payload => ({\n  type: DELETE_STATUS_SUCCESS,\n  payload\n});\n\nexport const deleteStatusFailure = errors => ({\n  type: DELETE_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const addBlockout = (personnelId, date) => ({\n  type: ADD_BLOCKOUT,\n  payload: {\n    personnelId,\n    date\n  }\n});\n\nexport const addBlockoutSuccess = payload => ({\n  type: ADD_BLOCKOUT_SUCCESS,\n  payload\n});\n\nexport const addBlockoutFailure = errors => ({\n  type: ADD_BLOCKOUT_FAILURE,\n  payload: errors\n});\n\nexport const deleteBlockout = (personnelId, date) => ({\n  type: DELETE_BLOCKOUT,\n  payload: {\n    personnelId,\n    date\n  }\n});\n\nexport const deleteBlockoutSuccess = payload => ({\n  type: DELETE_BLOCKOUT_SUCCESS,\n  payload\n});\n\nexport const deleteBlockoutFailure = errors => ({\n  type: DELETE_BLOCKOUT_FAILURE,\n  payload: errors\n});\n\nexport const clearErrors = () => ({\n  type: CLEAR_ERRORS\n});\n","export const ADD_PERSONNEL = 'PERSONNELS_PAGE/ADD/ADD_PERSONNEL';\nexport const ADD_PERSONNEL_SUCCESS =\n  'PERSONNELS_PAGE/ADD/ADD_PERSONNEL_SUCCESS';\nexport const ADD_PERSONNEL_FAILURE =\n  'PERSONNELS_PAGE/ADD/ADD_PERSONNEL_FAILURE';\nexport const TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE =\n  'PERSONNELS_PAGE/ADD/TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE';\n","export const DELETE_EVENT = 'EVENTS_PAGE/DELETE/DELETE_EVENT';\nexport const DELETE_EVENT_SUCCESS = 'EVENTS_PAGE/DELETE/DELETE_EVENT_SUCCESS';\nexport const DELETE_EVENT_FAILURE = 'EVENTS_PAGE/DELETE/DELETE_EVENT_FAILURE';\n","export const CREATE_EVENT = 'EVENTS_PAGE/ADD/CREATE_EVENT';\nexport const CREATE_EVENT_SUCCESS = 'EVENTS_PAGE/ADD/CREATE_EVENT_SUCCESS';\nexport const CREATE_EVENT_FAILURE = 'EVENTS_PAGE/ADD/CREATE_EVENT_FAILURE';\n","export const DELETE_PERSONNEL = 'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL';\nexport const DELETE_PERSONNEL_SUCCESS =\n  'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL_SUCCESS';\nexport const DELETE_PERSONNEL_FAILURE =\n  'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL_FAILURE';\n","export const LOGIN = 'LOGIN_PAGE/LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_PAGE/LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_PAGE/LOGIN_FAIL';\n","export const LOAD_APP = 'LOADING_PAGE/LOAD_APP';\nexport const LOAD_APP_SUCCESS = 'LOADING_PAGE/LOAD_APP_SUCCESS';\nexport const LOAD_APP_FAILURE = 'LOADING_PAGE/LOAD_APP_FAILURE';\n","import api from '../utils/api';\n\nclass EventsService {\n  static getEvents() {\n    return api\n      .get('/events')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteEvent(eventId, revert = false) {\n    return api\n      .post(`/events/delete/${eventId}`, { revert })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createEvent(data) {\n    return api\n      .post('/events/create', data)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static generateName(data) {\n    return api\n      .post('/events/generate', data)\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default EventsService;\n","import {\n  DELETE_PERSONNEL,\n  DELETE_PERSONNEL_FAILURE,\n  DELETE_PERSONNEL_SUCCESS\n} from './constants';\n\nexport const deletePersonnel = id => ({\n  type: DELETE_PERSONNEL,\n  payload: id\n});\n\nexport const deletePersonnelSuccess = ({ ids, personnels }) => ({\n  type: DELETE_PERSONNEL_SUCCESS,\n  payload: {\n    ids,\n    personnels\n  }\n});\n\nexport const deletePersonnelFailure = errors => ({\n  type: DELETE_PERSONNEL_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_PERSONNEL,\n  ADD_PERSONNEL_FAILURE,\n  ADD_PERSONNEL_SUCCESS,\n  TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE\n} from './constants';\n\nexport const addPersonnel = (name, platoon, rank) => ({\n  type: ADD_PERSONNEL,\n  payload: {\n    name,\n    platoon,\n    rank\n  }\n});\n\nexport const addPersonnelSuccess = ({ ids, personnels }) => ({\n  type: ADD_PERSONNEL_SUCCESS,\n  payload: {\n    ids,\n    personnels\n  }\n});\n\nexport const addPersonnelFailure = errors => ({\n  type: ADD_PERSONNEL_FAILURE,\n  payload: errors\n});\n\nexport const toggleAddPersonnelSuccessMessage = () => {\n  return {\n    type: TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE\n  };\n};\n","import {\n  DELETE_EVENT,\n  DELETE_EVENT_FAILURE,\n  DELETE_EVENT_SUCCESS\n} from './constants';\n\nexport const deleteEvent = ({ eventId, revert = false }) => ({\n  type: DELETE_EVENT,\n  payload: {\n    eventId,\n    revert\n  }\n});\n\nexport const deleteEventSuccess = ({ ids, events }) => ({\n  type: DELETE_EVENT_SUCCESS,\n  payload: {\n    ids,\n    events\n  }\n});\n\nexport const deleteEventFailure = errors => ({\n  type: DELETE_EVENT_FAILURE,\n  payload: errors\n});\n","import {\n  CREATE_EVENT,\n  CREATE_EVENT_FAILURE,\n  CREATE_EVENT_SUCCESS\n} from './constants';\n\nexport const createEvent = payload => ({\n  type: CREATE_EVENT,\n  payload\n});\n\nexport const createEventSuccess = ({ ids, events }) => ({\n  type: CREATE_EVENT_SUCCESS,\n  payload: { ids, events }\n});\n\nexport const createEventFailure = errors => ({\n  type: CREATE_EVENT_FAILURE,\n  payload: errors\n});\n","import { LOAD_APP, LOAD_APP_FAILURE, LOAD_APP_SUCCESS } from './constants';\n\nexport const loadApp = () => ({\n  type: LOAD_APP\n});\n\nexport const loadAppSuccess = () => ({\n  type: LOAD_APP_SUCCESS\n});\n\nexport const loadAppFailed = () => ({\n  type: LOAD_APP_FAILURE\n});\n","export const LOG_OUT = 'LOGOUT';\nexport const LOG_OUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOGOUT_FAILURE';\nexport const CHECK_AUTH = 'CHECK_AUTH';\nexport const CHECK_AUTH_FAILURE = 'CHECK_AUTH_FAILURE';\nexport const CHECK_AUTH_SUCCESS = 'CHECK_AUTH_SUCCESS';\n\nexport const LOAD_RANKS = 'LOAD_RANKS';\nexport const LOAD_RANKS_SUCCESS = 'LOAD_RANKS_SUCCESS';\nexport const LOAD_RANKS_FAILURE = 'LOAD_RANKS_FAILURE';\n\nexport const LOAD_PLATOONS = 'LOAD_PLATOONS';\nexport const LOAD_PLATOONS_SUCCESS = 'LOAD_PLATOONS_SUCCESS';\nexport const LOAD_PLATOONS_FAILURE = 'LOAD_PLATOONS_FAILURE';\n\nexport const LOAD_EVENTS = 'LOAD_EVENTS';\nexport const LOAD_EVENTS_SUCCESS = 'LOAD_EVENTS_SUCCESS';\nexport const LOAD_EVENTS_FAILURE = 'LOAD_EVENTS_FAILURE';\n\nexport const LOAD_PERSONNELS = 'LOAD_PERSONNELS';\nexport const LOAD_PERSONNELS_SUCCESS = 'LOAD_PERSONNELS_SUCCESS';\nexport const LOAD_PERSONNELS_FAILURE = 'LOAD_PERSONNELS_FAILURE';\n\nexport const LOAD_POINTS = 'LOAD_POINTS';\nexport const LOAD_POINTS_SUCCESS = 'LOAD_POINTS_SUCCESS';\nexport const LOAD_POINTS_FAILURE = 'LOAD_POINTS_FAILURE';\n\nexport const LOAD_STATUSES = 'LOAD_STATUSES';\nexport const LOAD_STATUSES_SUCCESS = 'LOAD_STATUSES_SUCCESS';\nexport const LOAD_STATUSES_FAILURE = 'LOAD_STATUSES_FAILURE';\n","import { LOGIN, LOGIN_FAIL, LOGIN_SUCCESS } from './constants';\n\nexport const login = (username, password) => {\n  return {\n    type: LOGIN,\n    payload: {\n      username,\n      password\n    }\n  };\n};\n\nexport const loginSuccess = () => {\n  return {\n    type: LOGIN_SUCCESS\n  };\n};\n\nexport const loginFailure = errors => {\n  return {\n    type: LOGIN_FAIL,\n    payload: errors\n  };\n};\n","import React, { useState } from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\n\nconst TopNavBar = ({ username, logout }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Navbar color=\"dark\" dark expand=\"md\">\n      <NavbarBrand href=\"/\">Duty App</NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/dashboard\" activeClassName=\"active\" exact>\n              Dashboard\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/events\" activeClassName=\"active\" exact>\n              Events\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/personnels\" activeClassName=\"active\" exact>\n              Personnels\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/ranks\" activeClassName=\"active\" exact>\n              Ranks\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/platoons\" activeClassName=\"active\" exact>\n              Platoons\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/points\" activeClassName=\"active\" exact>\n              Points System\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/statuses\" activeClassName=\"active\" exact>\n              Statuses\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <Nav className=\"ml-auto\" navbar>\n          <UncontrolledDropdown nav inNavbar>\n            <DropdownToggle nav caret>\n              Hello, {username}\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem onClick={logout}>Logout</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n\nTopNavBar.propTypes = {\n  username: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nexport default TopNavBar;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport TopNavBar from '../../components/commons/TopNavBar';\nimport { logout } from '../../actions/authActions';\n\nclass AppLayout extends PureComponent {\n  render() {\n    const { children, username, userLogout } = this.props;\n    return (\n      <>\n        <TopNavBar username={username} logout={userLogout} />\n        {children}\n      </>\n    );\n  }\n}\n\nAppLayout.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  username: PropTypes.string.isRequired,\n  userLogout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  username: state.auth.get('username')\n});\n\nconst mapDispatchToProps = {\n  userLogout: logout\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppLayout);\n"],"sourceRoot":""}