{"version":3,"sources":["actions/authActions.js","pages/personnels/single/constants.js","utils/api.js","pages/points/constants.js","pages/ranks/constants.js","pages/platoons/constants.js","pages/statuses/constants.js","pages/ranks/actions.js","pages/platoons/actions.js","AuthRoute.js","components/commons/Loading.jsx","pages/NotFoundPage/NotFoundPage.jsx","App.js","stores/reactotronConfig.js","reducers/authReducer.js","reducers/ranksReducer.js","reducers/platoonsReducer.js","reducers/eventsReducer.js","reducers/personnelsReducer.js","reducers/pointsReducer.js","reducers/statusesReducer.js","pages/login/reducer.js","pages/loading/reducer.js","pages/ranks/reducer.js","pages/platoons/reducer.js","pages/points/reducer.js","pages/statuses/reducer.js","pages/personnels/all/reducer.js","pages/personnels/add/reducer.js","pages/personnels/single/reducer.js","pages/personnels/edit/reducer.js","pages/personnels/reducer.js","pages/events/delete/reducer.js","pages/events/add/reducer.js","pages/events/reducer.js","reducers/pagesReducer.js","reducers/rootReducer.js","services/accounts.js","sagas/authSaga.js","actions/personnelsActions.js","services/personnels.js","sagas/personnelsSaga.js","pages/login/saga.js","actions/ranksActions.js","actions/platoonsActions.js","actions/pointsActions.js","actions/eventsActions.js","actions/statusesActions.js","services/ranks.js","services/platoons.js","services/points.js","services/statuses.js","pages/loading/saga.js","pages/ranks/saga.js","pages/platoons/saga.js","pages/points/saga.js","pages/statuses/saga.js","pages/personnels/all/saga.js","pages/personnels/add/saga.js","pages/personnels/single/saga.js","pages/personnels/edit/saga.js","pages/personnels/saga.js","pages/events/delete/saga.js","pages/events/add/saga.js","pages/events/saga.js","sagas/pageSagas.js","sagas/rootSaga.js","stores/createStore.js","index.js","pages/points/actions.js","pages/personnels/single/actions.js","pages/statuses/actions.js","pages/personnels/add/constants.js","pages/events/delete/constants.js","pages/events/add/constants.js","pages/personnels/all/constants.js","pages/personnels/edit/constants.js","pages/login/constants.js","pages/loading/constants.js","services/events.js","pages/personnels/all/actions.js","pages/personnels/add/actions.js","pages/events/delete/actions.js","pages/events/add/actions.js","pages/loading/actions.js","pages/login/actions.js","actions/constants.js","pages/personnels/edit/actions.js","components/commons/TopNavBar.jsx","pages/shared/AppLayout.jsx"],"names":["logout","type","LOG_OUT","logoutFailure","LOG_OUT_FAILURE","logoutSuccess","LOG_OUT_SUCCESS","checkAuth","CHECK_AUTH","checkAuthSuccess","payload","CHECK_AUTH_SUCCESS","checkAuthFailure","errors","CHECK_AUTH_FAILURE","ADD_STATUS","ADD_STATUS_SUCCESS","ADD_STATUS_FAILURE","DELETE_STATUS","DELETE_STATUS_SUCCESS","DELETE_STATUS_FAILURE","ADD_BLOCKOUT","ADD_BLOCKOUT_SUCCESS","ADD_BLOCKOUT_FAILURE","DELETE_BLOCKOUT","DELETE_BLOCKOUT_SUCCESS","DELETE_BLOCKOUT_FAILURE","EDIT_PERSONNEL_POINT","EDIT_PERSONNEL_POINT_SUCCESS","EDIT_PERSONNEL_POINT_FAILURE","CLEAR_ERRORS","api","create","baseURL","withCredentials","ADD_POINT","ADD_POINT_SUCCESS","ADD_POINT_FAILURE","UPDATE_POINT","UPDATE_POINT_SUCCESS","UPDATE_POINT_FAILURE","DELETE_POINT","DELETE_POINT_SUCCESS","DELETE_POINT_FAILURE","ADD_RANK","ADD_RANK_SUCCESS","ADD_RANK_FAILURE","UPDATE_RANK","UPDATE_RANK_SUCCESS","UPDATE_RANK_FAILURE","DELETE_RANK","DELETE_RANK_SUCCESS","DELETE_RANK_FAILURE","ADD_PLATOON","ADD_PLATOON_SUCCESS","ADD_PLATOON_FAILURE","UPDATE_PLATOON","UPDATE_PLATOON_SUCCESS","UPDATE_PLATOON_FAILURE","DELETE_PLATOON","DELETE_PLATOON_SUCCESS","DELETE_PLATOON_FAILURE","UPDATE_STATUS","UPDATE_STATUS_SUCCESS","UPDATE_STATUS_FAILURE","addRank","name","addRankSuccess","ids","ranks","addRankFailure","deleteRank","id","deleteRankSuccess","deleteRankFailure","updateRank","updateRankSuccess","updateRankFailure","addPlatoon","addPlatoonSuccess","platoons","addPlatoonFailure","deletePlatoon","deletePlatoonSuccess","deletePlatoonFailure","updatePlatoon","updatePlatoonSuccess","updatePlatoonFailure","connect","state","isAuthenticated","auth","get","Component","component","rest","render","props","undefined","exact","to","Loading","this","AppLayout","Container","className","Row","Spinner","color","PureComponent","NotFoundPage","goBack","history","Col","Button","onClick","LoginPage","lazy","LoadingPage","DashboardPage","RanksPage","PlatoonsPage","PointsPage","StatusesPage","PersonnelsPage","EventsPage","App","checkAuthenticated","fallback","from","path","appLoaded","reloadApp","mapDispatchToProps","loadApp","pages","loading","reactotron","Reactotron","configure","use","reactotronRedux","sagaPlugin","initialState","Map","username","authReducer","LOGIN","merge","events","personnels","points","statuses","isLoading","actionInProgress","success","isUpdating","personnelsPageReducers","combineReducers","all","DELETE_PERSONNEL","DELETE_PERSONNEL_SUCCESS","DELETE_PERSONNEL_FAILURE","add","ADD_PERSONNEL","ADD_PERSONNEL_SUCCESS","TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE","ADD_PERSONNEL_FAILURE","single","edit","UPDATE_PERSON","UPDATE_PERSON_SUCCESS","UPDATE_PERSON_FAILURE","isDeleting","isAdding","delete","DELETE_EVENT","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAILURE","CREATE_EVENT","CREATE_EVENT_SUCCESS","CREATE_EVENT_FAILURE","login","LOGIN_FAIL","LOAD_APP","LOAD_APP_FAILURE","LOAD_APP_SUCCESS","eventsPageReducer","personnelsPageReducer","appReducer","LOAD_RANKS_SUCCESS","LOAD_RANKS_FAILURE","LOAD_PLATOONS_SUCCESS","LOAD_PLATOONS_FAILURE","LOAD_EVENTS_SUCCESS","LOAD_EVENTS_FAILURE","LOAD_PERSONNELS_SUCCESS","PERSONNELS_UPDATE_EVENT_POINTS","PERSONNELS_UPDATE_PLATOON_NAME","PERSONNELS_UPDATE_RANK_NAME","PERSONNELS_UPDATE_POINTS_SYSTEM","PERSONNELS_UPDATE_STATUS_NAME","LOAD_PERSONNELS_FAILURE","LOAD_POINTS_SUCCESS","LOAD_POINTS_FAILURE","LOAD_STATUSES_SUCCESS","LOAD_STATUSES_FAILURE","pagesReducer","persistConfig","transforms","immutableTransform","key","storage","blacklist","persistedRootReducer","persistReducer","action","newState","AccountService","password","post","then","response","catch","error","authSagaWatcher","call","put","ok","isAuth","data","logoutAction","message","takeLatest","loadPersonnelsSuccess","loadPersonnelsFailure","personnelsUpdateEventPoints","personnelsUpdatePointsSystem","personnelsUpdatePlatoon","personnelsUpdateRank","personnelsUpdateStatus","PersonnelsService","rank","platoon","updatedPersonnel","personnelId","statusId","startDate","endDate","pStatusId","date","personnelPointId","refreshPersonnelsFromServer","updatePersonnelsPointSystemName","deletePersonnelsPointsSystem","deleteEventUpdatePoints","updatePersonnelsPlatoonName","updatePersonnelsRankName","updateStatusesName","personnelsSagaWatcher","getPersonnels","forEach","_id","push","select","personnelsState","person","map","point","currPoint","pointSystem","eventIdToDelete","race","take","failure","filter","revert","eventId","allEvents","event","pointsAllocation","personId","String","toUpperCase","status","currStatus","takeEvery","loginWatcher","delay","loginFailure","loginSuccess","loadRanksSuccess","loadRanksFailure","loadPlatoonsSuccess","loadPlatoonsFailure","loadPointsSuccess","loadPointsFailure","loadEventsSuccess","loadEventsFailure","loadStatusesSuccess","loadStatusesFailure","RanksService","PlatoonService","PointsService","Statuses","loadPoints","loadRanks","loadPlatoons","loadEvents","loadPersonnels","loadStatuses","loadEssentials","refresh","loadingWatcher","getPoints","getRanks","PlatoonsService","getPlatoons","EventsService","getEvents","StatusesService","getStatuses","loadAppSuccess","loadAppFailed","clearError","ranksWatcher","funcToClear","createRank","newRank","concat","deleteId","platoonsWatcher","createPlatoon","newPlatoon","addPoint","deletePoint","updatePoint","pointsWatcher","addPointFailure","createPoint","newPoint","addPointSuccess","deletePointSuccess","deletePointFailure","updatePointFailure","updatePointSuccess","addStatus","deleteStatus","updateStatus","statusesWatcher","createStatus","newStatus","addStatusSuccess","addStatusFailure","deleteStatusSuccess","deleteStatusFailure","updateStatusSuccess","updateStatusFailure","deletePersonnel","allWatcher","deletePersonnelFailure","deletePersonnelSuccess","clearMessage","addPersonnel","addWatcher","addPersonnelFailure","toggleAddPersonnelSuccessMessage","createPersonnel","addPersonnelSuccess","addBlockout","deleteBlockout","editPersonnelPoint","singleWatcher","clearErrors","moment","format","toLowerCase","addPersonnelStatus","statusToPush","expired","deletePersonnelStatus","personnelStatus","pStatus","dateToSubmit","addPersonnelBlockout","blockOutDates","addBlockoutSuccess","addBlockoutFailure","deletePersonnelBlockout","deleteBlockoutSuccess","deleteBlockoutFailure","personnelPoint","pPoint","personPoint","editPersonnelPointSuccess","editPersonnelPointFailure","updatePerson","editPersonnelWatcher","editPersonnel","updatePersonSuccess","updatePersonFailure","personnelsSaga","allSaga","addSaga","singleSaga","editSaga","deleteEvent","deleteWatcher","deleteEventFailure","deleteEventSuccess","createEvent","createEventFailure","createEventSuccess","eventsWatcher","deleteSaga","pageSagas","loginPageSaga","loadingPageSaga","ranksPageSaga","platoonsPageSaga","pointsPageSaga","statusesPageSaga","personnelsPageSaga","eventsPageSaga","rootSagas","globalSagas","authSaga","sagaMonitor","createSagaMonitor","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","ReactotronConfig","createEnhancer","persistor","persistStore","run","document","getElementById","LOGIN_SUCCESS","LOAD_RANKS","LOAD_PLATOONS","LOAD_EVENTS","LOAD_PERSONNELS","LOAD_POINTS","LOAD_STATUSES","TopNavBar","useState","isOpen","setIsOpen","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","Link","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","children","userLogout"],"mappings":"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","file":"static/js/main.fb46a508.chunk.js","sourcesContent":["import {\n  LOG_OUT,\n  LOG_OUT_FAILURE,\n  LOG_OUT_SUCCESS,\n  CHECK_AUTH,\n  CHECK_AUTH_SUCCESS,\n  CHECK_AUTH_FAILURE\n} from './constants';\n\nexport const logout = () => {\n  return {\n    type: LOG_OUT\n  };\n};\n\nexport const logoutFailure = () => {\n  return {\n    type: LOG_OUT_FAILURE\n  };\n};\nexport const logoutSuccess = () => {\n  return {\n    type: LOG_OUT_SUCCESS\n  };\n};\n\nexport const checkAuth = () => ({\n  type: CHECK_AUTH\n});\n\nexport const checkAuthSuccess = payload => ({\n  type: CHECK_AUTH_SUCCESS,\n  payload\n});\n\nexport const checkAuthFailure = errors => ({\n  type: CHECK_AUTH_FAILURE,\n  payload: errors\n});\n","export const ADD_STATUS = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS';\nexport const ADD_STATUS_SUCCESS = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS_SUCCESS';\nexport const ADD_STATUS_FAILURE = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS_FAILURE';\n\nexport const DELETE_STATUS = 'PERSONNELS_PAGE/SINGLE/DELETE_STATUS';\nexport const DELETE_STATUS_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/DELETE_STATUS_SUCCESS';\nexport const DELETE_STATUS_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/DELETE_STATUS_FAILURE';\n\nexport const ADD_BLOCKOUT = 'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT';\nexport const ADD_BLOCKOUT_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_SUCCESS';\nexport const ADD_BLOCKOUT_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_FAILURE';\n\nexport const DELETE_BLOCKOUT = 'PERSONNELS_PAGE/SINGLE/DELETE_BLOCKOUT';\nexport const DELETE_BLOCKOUT_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/DELETE_BLOCKOUT_SUCCESS';\nexport const DELETE_BLOCKOUT_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_FAILURE';\n\nexport const EDIT_PERSONNEL_POINT =\n  'PERSONNELS_PAGE/SINGLE/EDIT_PERSONNEL_POINT';\nexport const EDIT_PERSONNEL_POINT_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/EDIT_PERSONNEL_POINT_SUCCESS';\nexport const EDIT_PERSONNEL_POINT_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/EDIT_PERSONNEL_POINT_FAILURE';\n\nexport const CLEAR_ERRORS = 'PERSONNELS_PAGE/SINGLE/CLEAR_ERRORS';\n","import { create } from 'apisauce';\n\nconst api = create({\n  baseURL: '/api',\n  withCredentials: true\n});\n\nexport default api;\n","export const ADD_POINT = 'POINTS_PAGE/ADD_POINT';\nexport const ADD_POINT_SUCCESS = 'POINTS_PAGE/ADD_POINT_SUCCESS';\nexport const ADD_POINT_FAILURE = 'POINTS_PAGE/ADD_POINT_FAILURE';\n\nexport const UPDATE_POINT = 'POINTS_PAGE/UPDATE_POINT';\nexport const UPDATE_POINT_SUCCESS = 'POINTS_PAGE/UPDATE_POINT_SUCCESS';\nexport const UPDATE_POINT_FAILURE = 'POINTS_PAGE/UPDATE_POINT_FAILURE';\n\nexport const DELETE_POINT = 'POINTS_PAGE/DELETE_POINT';\nexport const DELETE_POINT_SUCCESS = 'POINTS_PAGE/DELETE_POINT_SUCCESS';\nexport const DELETE_POINT_FAILURE = 'POINTS_PAGE/DELETE_POINT_FAILURE';\n","export const ADD_RANK = 'RANKS_PAGE/ADD_RANK';\nexport const ADD_RANK_SUCCESS = 'RANKS_PAGE/ADD_RANK_SUCCESS';\nexport const ADD_RANK_FAILURE = 'RANKS_PAGE/ADD_RANK_FAILURE';\n\nexport const UPDATE_RANK = 'RANKS_PAGE/UPDATE_RANK';\nexport const UPDATE_RANK_SUCCESS = 'RANKS_PAGE/UPDATE_RANK_SUCCESS';\nexport const UPDATE_RANK_FAILURE = 'RANKS_PAGE/UPDATE_RANK_FAILURE';\n\nexport const DELETE_RANK = 'RANKS_PAGE/DELETE_RANK';\nexport const DELETE_RANK_SUCCESS = 'RANKS_PAGE/DELETE_RANK_SUCCESS';\nexport const DELETE_RANK_FAILURE = 'RANKS_PAGE/DELETE_RANK_FAILURE';\n","export const ADD_PLATOON = 'PLATOONS_PAGE/ADD_PLATOON';\nexport const ADD_PLATOON_SUCCESS = 'PLATOONS_PAGE/ADD_PLATOON_SUCCESS';\nexport const ADD_PLATOON_FAILURE = 'PLATOONS_PAGE/ADD_PLATOON_FAILURE';\n\nexport const UPDATE_PLATOON = 'PLATOONS_PAGE/UPDATE_PLATOON';\nexport const UPDATE_PLATOON_SUCCESS = 'PLATOONS_PAGE/UPDATE_PLATOON_SUCCESS';\nexport const UPDATE_PLATOON_FAILURE = 'PLATOONS_PAGE/UPDATE_PLATOON_FAILURE';\n\nexport const DELETE_PLATOON = 'PLATOONS_PAGE/DELETE_PLATOON';\nexport const DELETE_PLATOON_SUCCESS = 'PLATOONS_PAGE/DELETE_PLATOON_SUCCESS';\nexport const DELETE_PLATOON_FAILURE = 'PLATOONS_PAGE/DELETE_PLATOON_FAILURE';\n","export const ADD_STATUS = 'STATUSES_PAGE/ADD_STATUS';\nexport const ADD_STATUS_SUCCESS = 'STATUSES_PAGE/ADD_STATUS_SUCCESS';\nexport const ADD_STATUS_FAILURE = 'STATUSES_PAGE/ADD_STATUS_FAILURE';\n\nexport const UPDATE_STATUS = 'STATUSES_PAGE/UPDATE_STATUS';\nexport const UPDATE_STATUS_SUCCESS = 'STATUSES_PAGE/UPDATE_STATUS_SUCCESS';\nexport const UPDATE_STATUS_FAILURE = 'STATUSES_PAGE/UPDATE_STATUS_FAILURE';\n\nexport const DELETE_STATUS = 'STATUSES_PAGE/DELETE_STATUS';\nexport const DELETE_STATUS_SUCCESS = 'STATUSES_PAGE/DELETE_STATUS_SUCCESS';\nexport const DELETE_STATUS_FAILURE = 'STATUSES_PAGE/DELETE_STATUS_FAILURE';\n","import {\n  ADD_RANK,\n  ADD_RANK_FAILURE,\n  ADD_RANK_SUCCESS,\n  DELETE_RANK,\n  DELETE_RANK_FAILURE,\n  DELETE_RANK_SUCCESS,\n  UPDATE_RANK,\n  UPDATE_RANK_FAILURE,\n  UPDATE_RANK_SUCCESS\n} from './constants';\n\nexport const addRank = name => ({\n  type: ADD_RANK,\n  payload: name\n});\n\nexport const addRankSuccess = ({ ids, ranks }) => ({\n  type: ADD_RANK_SUCCESS,\n  payload: {\n    ids,\n    ranks\n  }\n});\n\nexport const addRankFailure = errors => ({\n  type: ADD_RANK_FAILURE,\n  payload: errors\n});\n\nexport const deleteRank = id => ({\n  type: DELETE_RANK,\n  payload: id\n});\n\nexport const deleteRankSuccess = id => ({\n  type: DELETE_RANK_SUCCESS,\n  payload: id\n});\n\nexport const deleteRankFailure = errors => ({\n  type: DELETE_RANK_FAILURE,\n  payload: errors\n});\n\nexport const updateRank = (id, name) => ({\n  type: UPDATE_RANK,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updateRankSuccess = ranks => ({\n  type: UPDATE_RANK_SUCCESS,\n  payload: ranks\n});\n\nexport const updateRankFailure = errors => ({\n  type: UPDATE_RANK_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_PLATOON,\n  ADD_PLATOON_FAILURE,\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON,\n  DELETE_PLATOON_FAILURE,\n  DELETE_PLATOON_SUCCESS,\n  UPDATE_PLATOON,\n  UPDATE_PLATOON_FAILURE,\n  UPDATE_PLATOON_SUCCESS\n} from './constants';\n\nexport const addPlatoon = name => ({\n  type: ADD_PLATOON,\n  payload: name\n});\n\nexport const addPlatoonSuccess = ({ ids, platoons }) => ({\n  type: ADD_PLATOON_SUCCESS,\n  payload: {\n    ids,\n    platoons\n  }\n});\n\nexport const addPlatoonFailure = errors => ({\n  type: ADD_PLATOON_FAILURE,\n  payload: errors\n});\n\nexport const deletePlatoon = id => ({\n  type: DELETE_PLATOON,\n  payload: id\n});\n\nexport const deletePlatoonSuccess = id => ({\n  type: DELETE_PLATOON_SUCCESS,\n  payload: id\n});\n\nexport const deletePlatoonFailure = errors => ({\n  type: DELETE_PLATOON_FAILURE,\n  payload: errors\n});\n\nexport const updatePlatoon = (id, name) => ({\n  type: UPDATE_PLATOON,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updatePlatoonSuccess = platoons => ({\n  type: UPDATE_PLATOON_SUCCESS,\n  payload: platoons\n});\n\nexport const updatePlatoonFailure = errors => ({\n  type: UPDATE_PLATOON_FAILURE,\n  payload: errors\n});\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction AuthRoute({ component: Component, isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (isAuthenticated === undefined) {\n          return null;\n        }\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        }\n\n        return <Redirect exact to=\"/\" />;\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.get('isAuthenticated')\n});\n\nexport default connect(mapStateToProps)(AuthRoute);\n\n// export default AuthRoute;\n","import React, { PureComponent } from 'react';\nimport { Spinner, Row, Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../../pages/shared/AppLayout';\n\nclass Loading extends PureComponent {\n  render() {\n    const { isAuthenticated } = this.props;\n    if (isAuthenticated) {\n      return (\n        <AppLayout>\n          <Container className=\"d-flex h-100 justify-content-center align-items-center flex-column\">\n            <Row>\n              <Spinner type=\"grow\" color=\"primary\" />\n              <Spinner type=\"grow\" color=\"secondary\" />\n              <Spinner type=\"grow\" color=\"success\" />\n              <Spinner type=\"grow\" color=\"danger\" />\n              <Spinner type=\"grow\" color=\"warning\" />\n              <Spinner type=\"grow\" color=\"info\" />\n              <Spinner type=\"grow\" color=\"dark\" />\n            </Row>\n            <Row>Loading Page...</Row>\n          </Container>\n        </AppLayout>\n      );\n    }\n    return (\n      <Container className=\"d-flex h-100 justify-content-center align-items-center flex-column\">\n        <Row>\n          <Spinner type=\"grow\" color=\"primary\" />\n          <Spinner type=\"grow\" color=\"secondary\" />\n          <Spinner type=\"grow\" color=\"success\" />\n          <Spinner type=\"grow\" color=\"danger\" />\n          <Spinner type=\"grow\" color=\"warning\" />\n          <Spinner type=\"grow\" color=\"info\" />\n          <Spinner type=\"grow\" color=\"dark\" />\n        </Row>\n        <Row>Loading Page...</Row>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.get('isAuthenticated')\n});\n\nexport default connect(mapStateToProps)(Loading);\n","import React, { PureComponent } from 'react';\nimport { Container, Button, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass NotFoundPage extends PureComponent {\n  goBack = () => {\n    const {\n      history: { goBack }\n    } = this.props;\n    goBack();\n  };\n\n  render() {\n    return (\n      <Container className=\"h-100\">\n        <Row className=\"h-100 justify-content-center align-items-center\">\n          <Col className=\"d-flex justify-content-center align-items-center flex-column\">\n            <h1>404</h1>\n            <p>The page that you are looking is not available</p>\n            <Button color=\"primary\" onClick={this.goBack}>\n              Click Here To Go back\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nNotFoundPage.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default NotFoundPage;\n","import React, { PureComponent, Suspense, lazy } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { checkAuth } from './actions/authActions';\nimport { loadApp } from './pages/loading/actions';\n\nimport AuthRoute from './AuthRoute';\n\nimport Loading from './components/commons/Loading';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\n\nconst LoginPage = lazy(() => import('./pages/login'));\nconst LoadingPage = lazy(() => import('./pages/loading'));\nconst DashboardPage = lazy(() => import('./pages/dashboard'));\nconst RanksPage = lazy(() => import('./pages/ranks'));\nconst PlatoonsPage = lazy(() => import('./pages/platoons'));\nconst PointsPage = lazy(() => import('./pages/points'));\nconst StatusesPage = lazy(() => import('./pages/statuses'));\nconst PersonnelsPage = lazy(() => import('./pages/personnels'));\nconst EventsPage = lazy(() => import('./pages/events'));\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { checkAuthenticated } = this.props;\n    checkAuthenticated();\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.isAuthenticated && !props.appLoaded) {\n      props.reloadApp();\n    }\n\n    return {};\n  }\n\n  render() {\n    return (\n      <Router>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Redirect from=\"/\" to=\"/login\" exact />\n            <Route path=\"/login\" component={LoginPage} />\n            <AuthRoute path=\"/app\" component={LoadingPage} />\n            <AuthRoute path=\"/dashboard\" component={DashboardPage} />\n            <AuthRoute path=\"/events\" component={EventsPage} />\n            <AuthRoute path=\"/ranks\" component={RanksPage} />\n            <AuthRoute path=\"/platoons\" component={PlatoonsPage} />\n            <AuthRoute path=\"/points\" component={PointsPage} />\n            <AuthRoute path=\"/statuses\" component={StatusesPage} />\n            <AuthRoute path=\"/personnels\" component={PersonnelsPage} />\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n        </Suspense>\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  checkAuthenticated: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  appLoaded: PropTypes.bool.isRequired,\n  reloadApp: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.get('isAuthenticated'),\n    appLoaded: state.pages.loading.get('appLoaded')\n  };\n};\nconst mapDispatchToProps = {\n  checkAuthenticated: checkAuth,\n  reloadApp: loadApp\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// if (process.env.NODE_ENV === 'development') {\nimport Reactotron from 'reactotron-react-js';\nimport { reactotronRedux } from 'reactotron-redux';\nimport sagaPlugin from 'reactotron-redux-saga';\n\nconst reactotron = Reactotron.configure({ name: 'Duty App' })\n  .use(reactotronRedux()) //  <- here i am!\n  .use(sagaPlugin())\n  .connect(); // Don't forget about me!\n\nexport default reactotron;\n// }\n","import { Map } from 'immutable';\nimport { LOGIN } from '../pages/login/constants';\nimport { CHECK_AUTH_SUCCESS, CHECK_AUTH_FAILURE } from '../actions/constants';\n\nconst initialState = Map({\n  username: '',\n  isAuthenticated: false\n});\n\nconst authReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN:\n      return state.merge({\n        username: payload.username\n      });\n    case CHECK_AUTH_SUCCESS:\n      return state.merge({\n        isAuthenticated: payload\n      });\n    case CHECK_AUTH_FAILURE:\n      return state.merge({\n        isAuthenticated: false\n      });\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { Map } from 'immutable';\nimport { LOAD_RANKS_FAILURE, LOAD_RANKS_SUCCESS } from '../actions/constants';\nimport {\n  ADD_RANK_SUCCESS,\n  DELETE_RANK_SUCCESS,\n  UPDATE_RANK_SUCCESS\n} from '../pages/ranks/constants';\n\nconst initialState = Map({\n  ids: [],\n  ranks: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_RANK_SUCCESS:\n    case LOAD_RANKS_SUCCESS:\n    case DELETE_RANK_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        ranks: payload.ranks,\n        errors: []\n      });\n    case UPDATE_RANK_SUCCESS:\n      return state.merge({\n        ranks: payload\n      });\n    case LOAD_RANKS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  LOAD_PLATOONS_FAILURE,\n  LOAD_PLATOONS_SUCCESS\n} from '../actions/constants';\nimport {\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON_SUCCESS,\n  UPDATE_PLATOON_SUCCESS\n} from '../pages/platoons/constants';\n\nconst initialState = Map({\n  ids: [],\n  platoons: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PLATOON_SUCCESS:\n    case DELETE_PLATOON_SUCCESS:\n    case LOAD_PLATOONS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        platoons: payload.platoons,\n        errors: []\n      });\n    case UPDATE_PLATOON_SUCCESS:\n      return state.merge({\n        platoons: payload\n      });\n    case LOAD_PLATOONS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOAD_EVENTS_FAILURE, LOAD_EVENTS_SUCCESS } from '../actions/constants';\nimport {\n  DELETE_EVENT_SUCCESS,\n  CREATE_EVENT_SUCCESS\n} from '../pages/events/constants';\n\nconst initialState = Map({\n  ids: [],\n  events: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_EVENTS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        events: payload.events\n      });\n\n    case LOAD_EVENTS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    case CREATE_EVENT_SUCCESS:\n    case DELETE_EVENT_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        events: payload.events\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  LOAD_PERSONNELS_FAILURE,\n  LOAD_PERSONNELS_SUCCESS,\n  PERSONNELS_UPDATE_EVENT_POINTS,\n  PERSONNELS_UPDATE_PLATOON_NAME,\n  PERSONNELS_UPDATE_POINTS_SYSTEM,\n  PERSONNELS_UPDATE_RANK_NAME,\n  PERSONNELS_UPDATE_STATUS_NAME\n} from '../actions/constants';\nimport {\n  DELETE_PERSONNEL_SUCCESS,\n  ADD_PERSONNEL_SUCCESS,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT_SUCCESS,\n  EDIT_PERSONNEL_POINT_SUCCESS,\n  UPDATE_PERSON_SUCCESS\n} from '../pages/personnels/constants';\n\nconst initialState = Map({\n  ids: [],\n  personnels: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_PERSONNELS_SUCCESS:\n    case DELETE_PERSONNEL_SUCCESS:\n    case ADD_PERSONNEL_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        personnels: payload.personnels\n      });\n    case DELETE_STATUS_SUCCESS:\n    case ADD_STATUS_SUCCESS:\n    case ADD_BLOCKOUT_SUCCESS:\n    case DELETE_BLOCKOUT_SUCCESS:\n    case EDIT_PERSONNEL_POINT_SUCCESS:\n    case UPDATE_PERSON_SUCCESS:\n    case PERSONNELS_UPDATE_EVENT_POINTS:\n    case PERSONNELS_UPDATE_PLATOON_NAME:\n    case PERSONNELS_UPDATE_RANK_NAME:\n    case PERSONNELS_UPDATE_POINTS_SYSTEM:\n    case PERSONNELS_UPDATE_STATUS_NAME:\n      return state.merge({\n        personnels: payload\n      });\n    case LOAD_PERSONNELS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOAD_POINTS_FAILURE, LOAD_POINTS_SUCCESS } from '../actions/constants';\nimport {\n  ADD_POINT_SUCCESS,\n  DELETE_POINT_SUCCESS,\n  UPDATE_POINT_SUCCESS\n} from '../pages/points/constants';\n\nconst initialState = Map({\n  ids: [],\n  points: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_POINT_SUCCESS:\n    case DELETE_POINT_SUCCESS:\n    case LOAD_POINTS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        points: payload.points,\n        errors: []\n      });\n    case UPDATE_POINT_SUCCESS:\n      return state.merge({\n        points: payload\n      });\n    case LOAD_POINTS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  LOAD_STATUSES_FAILURE,\n  LOAD_STATUSES_SUCCESS\n} from '../actions/constants';\nimport {\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS_SUCCESS,\n  UPDATE_STATUS_SUCCESS\n} from '../pages/statuses/constants';\n\nconst initialState = Map({\n  ids: [],\n  statuses: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS_SUCCESS:\n    case LOAD_STATUSES_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        statuses: payload.statuses,\n        errors: []\n      });\n    case UPDATE_STATUS_SUCCESS:\n      return state.merge({\n        statuses: payload\n      });\n    case LOAD_STATUSES_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOGIN, LOGIN_FAIL } from './constants';\nimport {\n  CHECK_AUTH_SUCCESS,\n  CHECK_AUTH_FAILURE\n} from '../../actions/constants';\n\nconst initialState = Map({\n  isLoading: false,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN:\n      return state.merge({\n        isLoading: true,\n        errors: []\n      });\n    case CHECK_AUTH_SUCCESS:\n    case CHECK_AUTH_FAILURE:\n      return state.merge({\n        isLoading: false\n      });\n    case LOGIN_FAIL:\n      return state.merge({\n        isLoading: false,\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOAD_APP, LOAD_APP_FAILURE, LOAD_APP_SUCCESS } from './constants';\n\nconst initialState = Map({\n  isLoading: false,\n  appLoaded: false\n});\n\nexport default (state = initialState, { type }) => {\n  switch (type) {\n    case LOAD_APP:\n      return state.merge({\n        isLoading: true\n      });\n    case LOAD_APP_FAILURE:\n    case LOAD_APP_SUCCESS:\n      return state.merge({\n        isLoading: false,\n        appLoaded: true\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_RANK_FAILURE,\n  ADD_RANK,\n  ADD_RANK_SUCCESS,\n  DELETE_RANK,\n  DELETE_RANK_SUCCESS,\n  DELETE_RANK_FAILURE,\n  UPDATE_RANK,\n  UPDATE_RANK_FAILURE,\n  UPDATE_RANK_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_RANK:\n    case DELETE_RANK:\n    case UPDATE_RANK:\n      return state.merge({\n        errors: [],\n        actionInProgress: true\n      });\n    case ADD_RANK_SUCCESS:\n    case DELETE_RANK_SUCCESS:\n    case UPDATE_RANK_SUCCESS:\n      return state.merge({\n        errors: [],\n        actionInProgress: false\n      });\n    case ADD_RANK_FAILURE:\n    case DELETE_RANK_FAILURE:\n    case UPDATE_RANK_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_PLATOON_FAILURE,\n  ADD_PLATOON,\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON,\n  DELETE_PLATOON_SUCCESS,\n  DELETE_PLATOON_FAILURE,\n  UPDATE_PLATOON,\n  UPDATE_PLATOON_FAILURE,\n  UPDATE_PLATOON_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PLATOON:\n    case DELETE_PLATOON:\n    case UPDATE_PLATOON:\n      return state.merge({\n        actionInProgress: true,\n        errors: []\n      });\n    case ADD_PLATOON_SUCCESS:\n    case DELETE_PLATOON_SUCCESS:\n    case UPDATE_PLATOON_SUCCESS:\n      return state.merge({\n        actionInProgress: false,\n        errors: []\n      });\n    case ADD_PLATOON_FAILURE:\n    case DELETE_PLATOON_FAILURE:\n    case UPDATE_PLATOON_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_POINT_FAILURE,\n  ADD_POINT,\n  ADD_POINT_SUCCESS,\n  DELETE_POINT,\n  DELETE_POINT_SUCCESS,\n  DELETE_POINT_FAILURE,\n  UPDATE_POINT,\n  UPDATE_POINT_FAILURE,\n  UPDATE_POINT_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_POINT:\n    case DELETE_POINT:\n    case UPDATE_POINT:\n      return state.merge({\n        errors: [],\n        actionInProgress: true\n      });\n    case ADD_POINT_SUCCESS:\n    case DELETE_POINT_SUCCESS:\n    case UPDATE_POINT_SUCCESS:\n      return state.merge({\n        errors: [],\n        actionInProgress: false\n      });\n    case ADD_POINT_FAILURE:\n    case DELETE_POINT_FAILURE:\n    case UPDATE_POINT_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_STATUS_FAILURE,\n  ADD_STATUS,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_SUCCESS,\n  DELETE_STATUS_FAILURE,\n  UPDATE_STATUS,\n  UPDATE_STATUS_FAILURE,\n  UPDATE_STATUS_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS:\n    case DELETE_STATUS:\n    case UPDATE_STATUS:\n      return state.merge({\n        actionInProgress: true,\n        errors: []\n      });\n    case ADD_STATUS_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n    case UPDATE_STATUS_SUCCESS:\n      return state.merge({\n        actionInProgress: false,\n        errors: []\n      });\n    case ADD_STATUS_FAILURE:\n    case DELETE_STATUS_FAILURE:\n    case UPDATE_STATUS_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  DELETE_PERSONNEL,\n  DELETE_PERSONNEL_FAILURE,\n  DELETE_PERSONNEL_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DELETE_PERSONNEL:\n      return state.merge({ actionInProgress: true });\n    case DELETE_PERSONNEL_SUCCESS:\n      return state.merge({ actionInProgress: false });\n    case DELETE_PERSONNEL_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_PERSONNEL,\n  ADD_PERSONNEL_FAILURE,\n  ADD_PERSONNEL_SUCCESS,\n  TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE\n} from './constants';\n\nconst initialState = Map({\n  actionInProgress: false,\n  errors: [],\n  success: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PERSONNEL:\n      return state.merge({\n        errors: [],\n        actionInProgress: true,\n        success: false\n      });\n    case ADD_PERSONNEL_SUCCESS:\n      return state.merge({\n        actionInProgress: false,\n        errors: [],\n        success: true\n      });\n    case TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE:\n      return state.merge({\n        success: !state.get('success')\n      });\n    case ADD_PERSONNEL_FAILURE:\n      return state.merge({\n        actionInProgress: false,\n        errors: payload\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT,\n  ADD_BLOCKOUT_FAILURE,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT,\n  DELETE_BLOCKOUT_FAILURE,\n  DELETE_BLOCKOUT_SUCCESS,\n  CLEAR_ERRORS,\n  EDIT_PERSONNEL_POINT,\n  EDIT_PERSONNEL_POINT_FAILURE,\n  EDIT_PERSONNEL_POINT_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  actionInProgress: false,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS:\n    case DELETE_STATUS:\n    case ADD_BLOCKOUT:\n    case DELETE_BLOCKOUT:\n    case EDIT_PERSONNEL_POINT:\n      return state.merge({\n        actionInProgress: true,\n        errors: []\n      });\n    case ADD_STATUS_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n    case ADD_BLOCKOUT_SUCCESS:\n    case DELETE_BLOCKOUT_SUCCESS:\n    case EDIT_PERSONNEL_POINT_SUCCESS:\n    case CLEAR_ERRORS:\n      return state.merge({\n        actionInProgress: false,\n        errors: []\n      });\n\n    case ADD_STATUS_FAILURE:\n    case DELETE_STATUS_FAILURE:\n    case ADD_BLOCKOUT_FAILURE:\n    case DELETE_BLOCKOUT_FAILURE:\n    case EDIT_PERSONNEL_POINT_FAILURE:\n      return state.merge({\n        actionInProgress: false,\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  UPDATE_PERSON,\n  UPDATE_PERSON_FAILURE,\n  UPDATE_PERSON_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  isUpdating: false,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case UPDATE_PERSON:\n      return state.merge({\n        isUpdating: true,\n        errors: []\n      });\n\n    case UPDATE_PERSON_SUCCESS:\n      return state.merge({\n        isUpdating: false,\n        errors: []\n      });\n    case UPDATE_PERSON_FAILURE:\n      return state.merge({\n        isUpdating: false,\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport allReducer from './all/reducer';\nimport addReducer from './add/reducer';\nimport singleReducer from './single/reducer';\nimport editReducer from './edit/reducer';\n\nconst personnelsPageReducers = combineReducers({\n  all: allReducer,\n  add: addReducer,\n  single: singleReducer,\n  edit: editReducer\n});\n\nexport default personnelsPageReducers;\n","import { Map } from 'immutable';\nimport {\n  DELETE_EVENT,\n  DELETE_EVENT_FAILURE,\n  DELETE_EVENT_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  isDeleting: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DELETE_EVENT:\n      return state.merge({\n        errors: [],\n        isDeleting: true\n      });\n\n    case DELETE_EVENT_SUCCESS:\n      return state.merge({\n        isDeleting: false\n      });\n\n    case DELETE_EVENT_FAILURE:\n      return state.merge({\n        isDeleting: false,\n        errors: payload\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  CREATE_EVENT,\n  CREATE_EVENT_FAILURE,\n  CREATE_EVENT_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  isAdding: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CREATE_EVENT:\n      return state.merge({\n        isAdding: true,\n        errors: []\n      });\n    case CREATE_EVENT_SUCCESS:\n      return state.merge({\n        isAdding: false,\n        errors: []\n      });\n    case CREATE_EVENT_FAILURE:\n      return state.merge({\n        isAdding: false,\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport deleteReducer from './delete/reducer';\nimport addReducer from './add/reducer';\n\nexport default combineReducers({\n  delete: deleteReducer,\n  add: addReducer\n});\n","import { combineReducers } from 'redux';\nimport loginPageReducer from '../pages/login/reducer';\nimport loadingPageReducer from '../pages/loading/reducer';\nimport ranksPageReducer from '../pages/ranks/reducer';\nimport platoonsPageReducer from '../pages/platoons/reducer';\nimport pointsPageReducer from '../pages/points/reducer';\nimport statusesPageReducer from '../pages/statuses/reducer';\nimport personnelsPageReducer from '../pages/personnels/reducer';\nimport eventsPageReducer from '../pages/events/reducer';\n\nconst pages = combineReducers({\n  login: loginPageReducer,\n  loading: loadingPageReducer,\n  events: eventsPageReducer,\n  ranks: ranksPageReducer,\n  platoons: platoonsPageReducer,\n  points: pointsPageReducer,\n  statuses: statusesPageReducer,\n  personnels: personnelsPageReducer\n});\n\nexport default pages;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport immutableTransform from 'redux-persist-transform-immutable';\nimport { LOG_OUT_SUCCESS } from '../actions/constants';\n\n// GLOBAL REDUCERS\nimport authReducer from './authReducer';\nimport ranksReducer from './ranksReducer';\nimport platoonsReducer from './platoonsReducer';\nimport eventsReducer from './eventsReducer';\nimport personnelsReducer from './personnelsReducer';\nimport pointsReducer from './pointsReducer';\nimport statusesReducer from './statusesReducer';\nimport pagesReducer from './pagesReducer';\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n  ranks: ranksReducer,\n  platoons: platoonsReducer,\n  events: eventsReducer,\n  personnels: personnelsReducer,\n  points: pointsReducer,\n  statuses: statusesReducer,\n  pages: pagesReducer\n});\n\nconst rootReducer = (state, action) => {\n  let newState = state;\n  if (action.type === LOG_OUT_SUCCESS) {\n    newState = undefined;\n  }\n  return appReducer(newState, action);\n};\n\nconst persistConfig = {\n  transforms: [immutableTransform()],\n  key: 'root',\n  storage,\n  blacklist: ['pages']\n};\n\nconst persistedRootReducer = persistReducer(persistConfig, rootReducer);\n\nexport default persistedRootReducer;\n","import api from '../utils/api';\n\nclass AccountService {\n  static login(username, password) {\n    return api\n      .post('/accounts/login', { username, password })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static checkAuthenticated() {\n    return api\n      .get('/accounts/isauthenticated')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static logout() {\n    return api\n      .post('/accounts/logout')\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default AccountService;\n","import { put, call, takeLatest, all } from 'redux-saga/effects';\nimport { LOG_OUT, CHECK_AUTH } from '../actions/constants';\nimport {\n  logoutSuccess,\n  logoutFailure,\n  checkAuthFailure,\n  checkAuthSuccess,\n  logout as logoutAction\n} from '../actions/authActions';\nimport AccountService from '../services/accounts';\n\nfunction* logout() {\n  try {\n    yield call(AccountService.logout);\n    yield put(logoutSuccess());\n  } catch (error) {\n    yield put(logoutFailure());\n  }\n}\n\nfunction* checkAuth() {\n  try {\n    const response = yield call(AccountService.checkAuthenticated);\n    if (!response.ok) {\n      yield put(checkAuthFailure());\n    } else {\n      const isAuth = response.data.isAuthenticated;\n      yield put(checkAuthSuccess(isAuth));\n      if (!isAuth) {\n        yield put(logoutAction());\n      }\n    }\n  } catch (error) {\n    yield put(checkAuthFailure(error.message || ['Unable to login']));\n  }\n}\n\nfunction* authSagaWatcher() {\n  yield all([takeLatest(CHECK_AUTH, checkAuth), takeLatest(LOG_OUT, logout)]);\n}\n\nexport default authSagaWatcher;\n","import {\n  LOAD_PERSONNELS,\n  LOAD_PERSONNELS_FAILURE,\n  LOAD_PERSONNELS_SUCCESS,\n  PERSONNELS_UPDATE_EVENT_POINTS,\n  PERSONNELS_UPDATE_PLATOON_NAME,\n  PERSONNELS_UPDATE_POINTS_SYSTEM,\n  PERSONNELS_UPDATE_RANK_NAME,\n  PERSONNELS_UPDATE_STATUS_NAME\n} from './constants';\n\nexport const loadPersonnels = () => ({\n  type: LOAD_PERSONNELS\n});\n\nexport const loadPersonnelsSuccess = payload => ({\n  type: LOAD_PERSONNELS_SUCCESS,\n  payload\n});\n\nexport const loadPersonnelsFailure = payload => ({\n  type: LOAD_PERSONNELS_FAILURE,\n  payload\n});\n\nexport const personnelsUpdateEventPoints = payload => ({\n  type: PERSONNELS_UPDATE_EVENT_POINTS,\n  payload\n});\nexport const personnelsUpdatePointsSystem = payload => ({\n  type: PERSONNELS_UPDATE_POINTS_SYSTEM,\n  payload\n});\n\nexport const personnelsUpdatePlatoon = payload => ({\n  type: PERSONNELS_UPDATE_PLATOON_NAME,\n  payload\n});\n\nexport const personnelsUpdateRank = payload => ({\n  type: PERSONNELS_UPDATE_RANK_NAME,\n  payload\n});\nexport const personnelsUpdateStatus = payload => ({\n  type: PERSONNELS_UPDATE_STATUS_NAME,\n  payload\n});\n","import api from '../utils/api';\n\nclass PersonnelsService {\n  static getPersonnels() {\n    return api\n      .get('/person')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPersonnel(name, rank, platoon) {\n    return api\n      .post('/person/new', { name, rank, platoon })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static editPersonnel(id, updatedPersonnel) {\n    return api\n      .put(`/person/${id}`, updatedPersonnel)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnel(id) {\n    return api\n      .delete(`/person/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static addPersonnelStatus(personnelId, statusId, startDate, endDate) {\n    return api\n      .post(`/person/status/${personnelId}/add`, {\n        statusId,\n        startDate,\n        endDate\n      })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnelStatus(personnelId, pStatusId) {\n    return api\n      .delete(`/person/status/${personnelId}/${pStatusId}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static addPersonnelBlockout(personnelId, date) {\n    return api\n      .post(`/person/${personnelId}/blockout`, date)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnelBlockout(personnelId, date) {\n    return api\n      .post(`/person/${personnelId}/blockout/delete`, { date })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static editPersonnelPoint(personnelId, personnelPointId, points) {\n    return api\n      .put(`person/point/${personnelId}/${personnelPointId}`, { points })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PersonnelsService;\n","import {\n  all,\n  takeLatest,\n  select,\n  take,\n  race,\n  put,\n  takeEvery,\n  call\n} from 'redux-saga/effects';\n\nimport {\n  loadPersonnelsFailure,\n  loadPersonnelsSuccess,\n  personnelsUpdateEventPoints,\n  personnelsUpdatePlatoon,\n  personnelsUpdatePointsSystem,\n  personnelsUpdateRank,\n  personnelsUpdateStatus\n} from '../actions/personnelsActions';\n\nimport {\n  UPDATE_RANK,\n  UPDATE_RANK_SUCCESS,\n  UPDATE_RANK_FAILURE\n} from '../pages/ranks/constants';\nimport {\n  UPDATE_PLATOON,\n  UPDATE_PLATOON_FAILURE,\n  UPDATE_PLATOON_SUCCESS\n} from '../pages/platoons/constants';\n\nimport {\n  CREATE_EVENT_SUCCESS,\n  DELETE_EVENT,\n  DELETE_EVENT_FAILURE,\n  DELETE_EVENT_SUCCESS\n} from '../pages/events/constants';\n\nimport {\n  ADD_POINT_SUCCESS,\n  DELETE_POINT,\n  DELETE_POINT_SUCCESS,\n  DELETE_POINT_FAILURE,\n  UPDATE_POINT_SUCCESS\n} from '../pages/points/constants';\n\nimport {\n  UPDATE_STATUS,\n  UPDATE_STATUS_FAILURE,\n  UPDATE_STATUS_SUCCESS\n} from '../pages/statuses/constants';\n\nimport PersonnelsService from '../services/personnels';\n\nfunction* refreshPersonnelsFromServer() {\n  try {\n    const response = yield call(PersonnelsService.getPersonnels);\n    if (response.ok) {\n      const personnels = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        personnels[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadPersonnelsSuccess({ ids, personnels }));\n    } else {\n      yield put(\n        loadPersonnelsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPersonnelsFailure([error.message]));\n  }\n}\nfunction* updatePersonnelsPointSystemName() {\n  const personnelsState = yield select(state => state.personnels);\n  const { ...points } = yield select(state => state.points.get('points'));\n\n  const ids = personnelsState.get('ids');\n  const { ...personnels } = personnelsState.get('personnels');\n\n  ids.forEach(id => {\n    const person = personnels[id];\n    person.points = person.points.map(point => {\n      const currPoint = point;\n      currPoint.pointSystem = points[currPoint.pointSystem._id];\n      return currPoint;\n    });\n  });\n  yield put(personnelsUpdatePointsSystem(personnels));\n}\n\nfunction* deletePersonnelsPointsSystem(action) {\n  const eventIdToDelete = action.payload;\n  const { success } = yield race({\n    success: take(DELETE_POINT_SUCCESS),\n    failure: take(DELETE_POINT_FAILURE)\n  });\n  if (success) {\n    const personnelsState = yield select(state => state.personnels);\n    const ids = personnelsState.get('ids');\n    const { ...personnels } = personnelsState.get('personnels');\n    ids.forEach(id => {\n      const person = personnels[id];\n      person.points = person.points.filter(point => {\n        return point.pointSystem._id !== eventIdToDelete;\n      });\n    });\n\n    yield put(personnelsUpdatePointsSystem(personnels));\n  }\n}\n\nfunction* deleteEventUpdatePoints(action) {\n  const { revert, eventId } = action.payload;\n  const allEvents = yield select(state => state.events.get('events'));\n  const event = allEvents[eventId];\n  if (revert) {\n    const { success } = yield race({\n      success: take(DELETE_EVENT_SUCCESS),\n      failure: take(DELETE_EVENT_FAILURE)\n    });\n    if (success) {\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const personnelIds = event.personnels.map(person => person._id);\n\n      personnelIds.forEach(id => {\n        const person = personnels[id];\n        person.points = person.points.map(point => {\n          if (point.pointSystem._id === event.pointSystem._id) {\n            const currPoint = point;\n            currPoint.points -= event.pointsAllocation;\n            return currPoint;\n          }\n          return point;\n        });\n      });\n      yield put(personnelsUpdateEventPoints(personnels));\n    }\n  }\n}\n\nfunction* updatePersonnelsPlatoonName(action) {\n  const { id, name } = action.payload;\n  const { success } = yield race({\n    success: take(UPDATE_PLATOON_SUCCESS),\n    failure: take(UPDATE_PLATOON_FAILURE)\n  });\n  if (success) {\n    const personnelsState = yield select(state => state.personnels);\n    const ids = personnelsState.get('ids');\n    const { ...personnels } = personnelsState.get('personnels');\n    ids.forEach(personId => {\n      const person = personnels[personId];\n      if (person.platoon._id === id) {\n        person.platoon.name = String(name).toUpperCase();\n      }\n    });\n    yield put(personnelsUpdatePlatoon(personnels));\n  }\n}\n\nfunction* updatePersonnelsRankName(action) {\n  const { id, name } = action.payload;\n  const { success } = yield race({\n    success: take(UPDATE_RANK_SUCCESS),\n    failure: take(UPDATE_RANK_FAILURE)\n  });\n\n  if (success) {\n    const personnelsState = yield select(state => state.personnels);\n    const ids = personnelsState.get('ids');\n    const { ...personnels } = personnelsState.get('personnels');\n    ids.forEach(personId => {\n      const person = personnels[personId];\n      if (person.rank._id === id) {\n        person.rank.name = String(name).toUpperCase();\n      }\n    });\n    yield put(personnelsUpdateRank(personnels));\n  }\n}\n\nfunction* updateStatusesName(action) {\n  const { id, name } = action.payload;\n  const { success } = yield race({\n    success: take(UPDATE_STATUS_SUCCESS),\n    failure: take(UPDATE_STATUS_FAILURE)\n  });\n\n  if (success) {\n    const personnelsState = yield select(state => state.personnels);\n    const ids = personnelsState.get('ids');\n    const { ...personnels } = personnelsState.get('personnels');\n    ids.forEach(personId => {\n      const person = personnels[personId];\n      person.statuses = person.statuses.map(status => {\n        const currStatus = status;\n        if (currStatus.statusId._id === id) {\n          currStatus.statusId.name = String(name).toUpperCase();\n        }\n        return currStatus;\n      });\n    });\n    yield put(personnelsUpdateStatus(personnels));\n  }\n}\n\nfunction* personnelsSagaWatcher() {\n  yield all([\n    takeLatest(UPDATE_POINT_SUCCESS, updatePersonnelsPointSystemName),\n    takeEvery(UPDATE_PLATOON, updatePersonnelsPlatoonName),\n    takeEvery(UPDATE_RANK, updatePersonnelsRankName),\n    takeEvery(UPDATE_STATUS, updateStatusesName),\n    takeEvery(DELETE_POINT, deletePersonnelsPointsSystem),\n    takeEvery(DELETE_EVENT, deleteEventUpdatePoints),\n    takeLatest(ADD_POINT_SUCCESS, refreshPersonnelsFromServer),\n    takeLatest(CREATE_EVENT_SUCCESS, refreshPersonnelsFromServer)\n  ]);\n}\n\nexport default personnelsSagaWatcher;\n","import { takeLatest, put, call, delay } from 'redux-saga/effects';\nimport { LOGIN } from './constants';\nimport { loginFailure, loginSuccess } from './actions';\nimport { checkAuth } from '../../actions/authActions';\nimport AccountService from '../../services/accounts';\n\nfunction* login(action) {\n  try {\n    const { username, password } = action.payload;\n    const response = yield call(AccountService.login, username, password);\n    yield delay(500);\n    if (!response.ok) {\n      if (response.status === 420) {\n        yield put(\n          loginFailure(['Too many login request, please login in 30mins time'])\n        );\n      }\n      yield put(loginFailure([response.data]));\n    } else {\n      yield put(loginSuccess());\n      yield put(checkAuth());\n    }\n  } catch (error) {\n    yield put(loginFailure([error.message || 'Unable to login']));\n  }\n}\n\nfunction* loginWatcher() {\n  yield takeLatest(LOGIN, login);\n}\n\nexport default loginWatcher;\n","import {\n  LOAD_RANKS,\n  LOAD_RANKS_FAILURE,\n  LOAD_RANKS_SUCCESS\n} from './constants';\n\nexport const loadRanks = () => ({\n  type: LOAD_RANKS\n});\n\nexport const loadRanksSuccess = payload => ({\n  type: LOAD_RANKS_SUCCESS,\n  payload\n});\n\nexport const loadRanksFailure = payload => ({\n  type: LOAD_RANKS_FAILURE,\n  payload\n});\n","import {\n  LOAD_PLATOONS,\n  LOAD_PLATOONS_FAILURE,\n  LOAD_PLATOONS_SUCCESS\n} from './constants';\n\nexport const loadPlatoons = () => ({\n  type: LOAD_PLATOONS\n});\n\nexport const loadPlatoonsSuccess = payload => ({\n  type: LOAD_PLATOONS_SUCCESS,\n  payload\n});\n\nexport const loadPlatoonsFailure = payload => ({\n  type: LOAD_PLATOONS_FAILURE,\n  payload\n});\n","import {\n  LOAD_POINTS,\n  LOAD_POINTS_FAILURE,\n  LOAD_POINTS_SUCCESS\n} from './constants';\n\nexport const loadPoints = () => ({\n  type: LOAD_POINTS\n});\n\nexport const loadPointsSuccess = payload => ({\n  type: LOAD_POINTS_SUCCESS,\n  payload\n});\n\nexport const loadPointsFailure = payload => ({\n  type: LOAD_POINTS_FAILURE,\n  payload\n});\n","import {\n  LOAD_EVENTS,\n  LOAD_EVENTS_FAILURE,\n  LOAD_EVENTS_SUCCESS\n} from './constants';\n\nexport const loadEvents = () => ({\n  type: LOAD_EVENTS\n});\n\nexport const loadEventsSuccess = payload => ({\n  type: LOAD_EVENTS_SUCCESS,\n  payload\n});\n\nexport const loadEventsFailure = payload => ({\n  type: LOAD_EVENTS_FAILURE,\n  payload\n});\n","import {\n  LOAD_STATUSES,\n  LOAD_STATUSES_FAILURE,\n  LOAD_STATUSES_SUCCESS\n} from './constants';\n\nexport const loadStatuses = () => ({\n  type: LOAD_STATUSES\n});\n\nexport const loadStatusesSuccess = payload => ({\n  type: LOAD_STATUSES_SUCCESS,\n  payload\n});\n\nexport const loadStatusesFailure = errors => ({\n  type: LOAD_STATUSES_FAILURE,\n  payload: errors\n});\n","import api from '../utils/api';\n\nclass RanksService {\n  static getRanks() {\n    return api\n      .get('/ranks')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createRank(name) {\n    return api\n      .post('/ranks', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteRank(id) {\n    return api\n      .delete(`/ranks/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updateRank(id, name) {\n    return api\n      .put(`/ranks/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default RanksService;\n","import api from '../utils/api';\n\nclass PlatoonService {\n  static getPlatoons() {\n    return api\n      .get('/platoons')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPlatoon(name) {\n    return api\n      .post('/platoons', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePlatoon(id) {\n    return api\n      .delete(`/platoons/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updatePlatoon(id, name) {\n    return api\n      .put(`/platoons/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PlatoonService;\n","import api from '../utils/api';\n\nclass PointsService {\n  static getPoints() {\n    return api\n      .get('/points')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPoint(name) {\n    return api\n      .post('/points', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePoint(id) {\n    return api\n      .delete(`/points/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updatePoint(id, name) {\n    return api\n      .put(`/points/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PointsService;\n","import api from '../utils/api';\n\nclass Statuses {\n  static getStatuses() {\n    return api\n      .get('/status')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createStatus(name) {\n    return api\n      .post('/status', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteStatus(id) {\n    return api\n      .delete(`/status/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updateStatus(id, name) {\n    return api\n      .put(`/status/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default Statuses;\n","import { takeLatest, call, all, put, delay, select } from 'redux-saga/effects';\nimport { LOAD_APP } from './constants';\nimport { loadRanksSuccess, loadRanksFailure } from '../../actions/ranksActions';\nimport {\n  loadPlatoonsFailure,\n  loadPlatoonsSuccess\n} from '../../actions/platoonsActions';\nimport {\n  loadPointsFailure,\n  loadPointsSuccess\n} from '../../actions/pointsActions';\nimport {\n  loadEventsSuccess,\n  loadEventsFailure\n} from '../../actions/eventsActions';\nimport {\n  loadPersonnelsFailure,\n  loadPersonnelsSuccess\n} from '../../actions/personnelsActions';\nimport {\n  loadStatusesFailure,\n  loadStatusesSuccess\n} from '../../actions/statusesActions';\n\nimport { loadAppSuccess, loadAppFailed } from './actions';\nimport RanksService from '../../services/ranks';\nimport PlatoonsService from '../../services/platoons';\nimport PointsService from '../../services/points';\nimport EventsService from '../../services/events';\nimport PersonnelsService from '../../services/personnels';\nimport StatusesService from '../../services/statuses';\n\nfunction* loadPoints() {\n  try {\n    const response = yield call(PointsService.getPoints);\n    if (response.ok) {\n      const points = {};\n      const ids = [];\n\n      response.data.forEach(point => {\n        const { _id: id } = point;\n        points[id] = point;\n        ids.push(id);\n      });\n      yield put(loadPointsSuccess({ ids, points }));\n    } else {\n      yield put(\n        loadPointsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPointsFailure([error.message]));\n  }\n}\n\nfunction* loadRanks() {\n  try {\n    const response = yield call(RanksService.getRanks);\n    if (response.ok) {\n      const ranks = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        ranks[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadRanksSuccess({ ids, ranks }));\n    } else {\n      yield put(\n        loadRanksFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadRanksFailure([error.message]));\n  }\n}\n\nfunction* loadPlatoons() {\n  try {\n    const response = yield call(PlatoonsService.getPlatoons);\n    if (response.ok) {\n      const platoons = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        platoons[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadPlatoonsSuccess({ ids, platoons }));\n    } else {\n      yield put(\n        loadPlatoonsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPlatoonsFailure([error.message]));\n  }\n}\n\nfunction* loadEvents() {\n  try {\n    const response = yield call(EventsService.getEvents);\n    if (response.ok) {\n      const events = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        events[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadEventsSuccess({ ids, events }));\n    } else {\n      yield put(\n        loadEventsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadEventsFailure([error.message]));\n  }\n}\n\nfunction* loadPersonnels() {\n  try {\n    const response = yield call(PersonnelsService.getPersonnels);\n    if (response.ok) {\n      const personnels = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        personnels[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadPersonnelsSuccess({ ids, personnels }));\n    } else {\n      yield put(\n        loadPersonnelsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPersonnelsFailure([error.message]));\n  }\n}\n\nfunction* loadStatuses() {\n  try {\n    const response = yield call(StatusesService.getStatuses);\n    if (response.ok) {\n      const statuses = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        statuses[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadStatusesSuccess({ ids, statuses }));\n    } else {\n      yield put(\n        loadStatusesFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadStatusesFailure([error.message]));\n  }\n}\n\nfunction* loadEssentials() {\n  try {\n    yield all([\n      call(loadRanks),\n      call(loadPlatoons),\n      call(loadPoints),\n      call(loadEvents),\n      call(loadPersonnels),\n      call(loadStatuses)\n    ]);\n    yield put(loadAppSuccess());\n  } catch (error) {\n    yield put(loadAppFailed());\n  }\n}\n\nfunction* refresh() {\n  while (true) {\n    const threeMinute = 1000 * 60 * 3;\n    yield delay(threeMinute);\n    const isAuth = yield select(state => state.auth.get('isAuthenticated'));\n    if (isAuth) {\n      yield call(loadEssentials);\n    }\n  }\n}\n\nfunction* loadingWatcher() {\n  yield all([takeLatest(LOAD_APP, loadEssentials), refresh()]);\n}\n\nexport default loadingWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_RANK, DELETE_RANK, UPDATE_RANK } from './constants';\nimport {\n  addRankSuccess,\n  addRankFailure,\n  deleteRankSuccess,\n  deleteRankFailure,\n  updateRankSuccess,\n  updateRankFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport RanksService from '../../services/ranks';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\n\nfunction* addRank(action) {\n  try {\n    const name = action.payload;\n    if (!name) {\n      yield put(addRankFailure(['Cannot give an empty name for new rank']));\n      yield call(clearError, addRankFailure);\n    } else {\n      const ids = yield select(state => state.ranks.get('ids'));\n      const ranks = yield select(state => state.ranks.get('ranks'));\n      const response = yield call(RanksService.createRank, name);\n\n      if (response.ok) {\n        const newRank = response.data;\n        ids.push(newRank._id);\n        ranks[newRank._id] = {\n          _id: newRank._id,\n          name: newRank.name\n        };\n        yield put(addRankSuccess({ ids, ranks }));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(addRankFailure(errors));\n        yield call(clearError, addRankFailure);\n      }\n    }\n  } catch (error) {\n    yield put(addRankFailure([error.message]));\n    yield call(clearError, addRankFailure);\n  }\n}\n\nfunction* deleteRank(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(RanksService.deleteRank, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.ranks.get('ids'));\n      const { ...ranks } = yield select(state => state.ranks.get('ranks'));\n      ids = ids.filter(id => id !== deleteId);\n      delete ranks[deleteId];\n      yield put(deleteRankSuccess({ ids, ranks }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteRankFailure(errors));\n      yield call(clearError, deleteRankFailure);\n    }\n  } catch (error) {\n    yield put(deleteRankFailure([error.message]));\n    yield call(clearError, deleteRankFailure);\n  }\n}\n\nfunction* updateRank(action) {\n  try {\n    const { id, name } = action.payload;\n    if (!name) {\n      yield put(\n        updateRankFailure(['Cannot update the rank with an empty name'])\n      );\n      yield call(clearError, updateRankFailure);\n    } else {\n      const response = yield call(RanksService.updateRank, id, name);\n      if (response.ok) {\n        const { ...ranks } = yield select(state => state.ranks.get('ranks'));\n        ranks[id] = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n\n        yield put(updateRankSuccess(ranks));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else if (response.status === 304) {\n        yield put(\n          updateRankFailure([\n            'Updating rank must not be the same name as before'\n          ])\n        );\n        yield call(clearError, updateRankFailure);\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(updateRankFailure(errors));\n        yield call(clearError, updateRankFailure);\n      }\n    }\n  } catch (error) {\n    yield put(updateRankFailure([error.message]));\n    yield call(clearError, updateRankFailure);\n  }\n}\n\nfunction* ranksWatcher() {\n  yield all([\n    takeLatest(ADD_RANK, addRank),\n    takeLatest(DELETE_RANK, deleteRank),\n    takeLatest(UPDATE_RANK, updateRank)\n  ]);\n}\n\nexport default ranksWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_PLATOON, DELETE_PLATOON, UPDATE_PLATOON } from './constants';\nimport {\n  addPlatoonSuccess,\n  addPlatoonFailure,\n  deletePlatoonSuccess,\n  deletePlatoonFailure,\n  updatePlatoonSuccess,\n  updatePlatoonFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport PlatoonsService from '../../services/platoons';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\n\nfunction* addPlatoon(action) {\n  try {\n    const name = action.payload;\n    if (!name) {\n      yield put(\n        addPlatoonFailure(['Cannot give an empty name for new platoon'])\n      );\n      yield call(clearError, addPlatoonFailure);\n    } else {\n      const ids = yield select(state => state.platoons.get('ids'));\n      const platoons = yield select(state => state.platoons.get('platoons'));\n      const response = yield call(PlatoonsService.createPlatoon, name);\n\n      if (response.ok) {\n        const newPlatoon = response.data;\n        ids.push(newPlatoon._id);\n        platoons[newPlatoon._id] = {\n          _id: newPlatoon._id,\n          name: newPlatoon.name\n        };\n        yield put(addPlatoonSuccess({ ids, platoons }));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(addPlatoonFailure(errors));\n        yield call(clearError, addPlatoonFailure);\n      }\n    }\n  } catch (error) {\n    yield put(addPlatoonFailure([error.message]));\n    yield call(clearError, addPlatoonFailure);\n  }\n}\n\nfunction* deletePlatoon(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PlatoonsService.deletePlatoon, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.platoons.get('ids'));\n      const { ...platoons } = yield select(state =>\n        state.platoons.get('platoons')\n      );\n      ids = ids.filter(id => id !== deleteId);\n      delete platoons[deleteId];\n      yield put(deletePlatoonSuccess({ ids, platoons }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePlatoonFailure(errors));\n      yield call(clearError, deletePlatoonFailure);\n    }\n  } catch (error) {\n    yield put(deletePlatoonFailure([error.message]));\n    yield call(clearError, deletePlatoonFailure);\n  }\n}\n\nfunction* updatePlatoon(action) {\n  try {\n    const { id, name } = action.payload;\n    if (!name) {\n      yield put(updatePlatoonFailure([`Cannot give an empty name`]));\n      yield call(clearError, updatePlatoonFailure);\n    } else {\n      const response = yield call(PlatoonsService.updatePlatoon, id, name);\n      if (response.ok) {\n        const { ...platoons } = yield select(state =>\n          state.platoons.get('platoons')\n        );\n        platoons[id] = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n\n        yield put(updatePlatoonSuccess(platoons));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else if (response.status === 304) {\n        yield put(\n          updatePlatoonFailure([\n            'Updating platoon must not be the same name as before'\n          ])\n        );\n        yield call(clearError, updatePlatoonFailure);\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(updatePlatoonFailure(errors));\n        yield call(clearError, updatePlatoonFailure);\n      }\n    }\n  } catch (error) {\n    yield put(updatePlatoonFailure([error.message]));\n    yield call(clearError, updatePlatoonFailure);\n  }\n}\n\nfunction* platoonsWatcher() {\n  yield all([\n    takeLatest(ADD_PLATOON, addPlatoon),\n    takeLatest(DELETE_PLATOON, deletePlatoon),\n    takeLatest(UPDATE_PLATOON, updatePlatoon)\n  ]);\n}\n\nexport default platoonsWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_POINT, DELETE_POINT, UPDATE_POINT } from './constants';\nimport {\n  addPointSuccess,\n  addPointFailure,\n  deletePointSuccess,\n  deletePointFailure,\n  updatePointSuccess,\n  updatePointFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport PointsService from '../../services/points';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\n\nfunction* addPoint(action) {\n  try {\n    const name = action.payload;\n    if (!name) {\n      yield put(\n        addPointFailure(['Cannot give an empty name for new point system'])\n      );\n      yield call(clearError, addPointFailure);\n    } else {\n      const ids = yield select(state => state.points.get('ids'));\n      const points = yield select(state => state.points.get('points'));\n      const response = yield call(PointsService.createPoint, name);\n\n      if (response.ok) {\n        const newPoint = response.data;\n        ids.push(newPoint._id);\n        points[newPoint._id] = {\n          _id: newPoint._id,\n          name: newPoint.name\n        };\n        yield put(addPointSuccess({ ids, points }));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(addPointFailure(errors));\n        yield call(clearError, addPointFailure);\n      }\n    }\n  } catch (error) {\n    yield put(addPointFailure([error.message]));\n    yield call(clearError, addPointFailure);\n  }\n}\n\nfunction* deletePoint(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PointsService.deletePoint, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.points.get('ids'));\n      const { ...points } = yield select(state => state.points.get('points'));\n      ids = ids.filter(id => id !== deleteId);\n      delete points[deleteId];\n      yield put(deletePointSuccess({ ids, points }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePointFailure(errors));\n      yield call(clearError, deletePointFailure);\n    }\n  } catch (error) {\n    yield put(deletePointFailure([error.message]));\n    yield call(clearError, deletePointFailure);\n  }\n}\n\nfunction* updatePoint(action) {\n  try {\n    const { id, name } = action.payload;\n    if (!name) {\n      yield put(\n        updatePointFailure(['Cannot update a point system with empty name'])\n      );\n      yield call(clearError, updatePointFailure);\n    } else {\n      const response = yield call(PointsService.updatePoint, id, name);\n      if (response.ok) {\n        const { ...points } = yield select(state => state.points.get('points'));\n        points[id] = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n\n        yield put(updatePointSuccess(points));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else if (response.status === 304) {\n        yield put(\n          updatePointFailure(['Updating point must not be the same as before'])\n        );\n        yield call(clearError, updatePointFailure);\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(updatePointFailure(errors));\n        yield call(clearError, updatePointFailure);\n      }\n    }\n  } catch (error) {\n    yield put(updatePointFailure([error.message]));\n    yield call(clearError, updatePointFailure);\n  }\n}\n\nfunction* pointsWatcher() {\n  yield all([\n    takeLatest(ADD_POINT, addPoint),\n    takeLatest(DELETE_POINT, deletePoint),\n    takeLatest(UPDATE_POINT, updatePoint)\n  ]);\n}\n\nexport default pointsWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_STATUS, DELETE_STATUS, UPDATE_STATUS } from './constants';\nimport {\n  addStatusSuccess,\n  addStatusFailure,\n  deleteStatusSuccess,\n  deleteStatusFailure,\n  updateStatusSuccess,\n  updateStatusFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport StatusesService from '../../services/statuses';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\nfunction* addStatus(action) {\n  try {\n    const name = action.payload;\n    const ids = yield select(state => state.statuses.get('ids'));\n    const statuses = yield select(state => state.statuses.get('statuses'));\n    const response = yield call(StatusesService.createStatus, name);\n\n    if (response.ok) {\n      const newStatus = response.data;\n      ids.push(newStatus._id);\n      statuses[newStatus._id] = {\n        _id: newStatus._id,\n        name: newStatus.name\n      };\n      yield put(addStatusSuccess({ ids, statuses }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addStatusFailure(errors));\n      yield call(clearError, addStatusFailure);\n    }\n  } catch (error) {\n    yield put(addStatusFailure([error.message]));\n    yield call(clearError, addStatusFailure);\n  }\n}\n\nfunction* deleteStatus(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(StatusesService.deleteStatus, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.statuses.get('ids'));\n      const { ...statuses } = yield select(state =>\n        state.statuses.get('statuses')\n      );\n      ids = ids.filter(id => id !== deleteId);\n      delete statuses[deleteId];\n      yield put(deleteStatusSuccess({ ids, statuses }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteStatusFailure(errors));\n      yield call(clearError, deleteStatusFailure);\n    }\n  } catch (error) {\n    yield put(deleteStatusFailure([error.message]));\n    yield call(clearError, deleteStatusFailure);\n  }\n}\n\nfunction* updateStatus(action) {\n  try {\n    const { id, name } = action.payload;\n    const response = yield call(StatusesService.updateStatus, id, name);\n    if (response.ok) {\n      const { ...statuses } = yield select(state =>\n        state.statuses.get('statuses')\n      );\n      statuses[id] = {\n        _id: response.data._id,\n        name: response.data.name\n      };\n\n      yield put(updateStatusSuccess(statuses));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else if (response.status === 304) {\n      yield put(\n        updateStatusFailure(['Updating status must not be the same as before'])\n      );\n      yield call(clearError, updateStatusFailure);\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(updateStatusFailure(errors));\n      yield call(clearError, updateStatusFailure);\n    }\n  } catch (error) {\n    yield put(updateStatusFailure([error.message]));\n    yield call(clearError, updateStatusFailure);\n  }\n}\n\nfunction* statusesWatcher() {\n  yield all([\n    takeLatest(ADD_STATUS, addStatus),\n    takeLatest(DELETE_STATUS, deleteStatus),\n    takeLatest(UPDATE_STATUS, updateStatus)\n  ]);\n}\n\nexport default statusesWatcher;\n","import { call, takeLatest, select, put, delay } from 'redux-saga/effects';\nimport { DELETE_PERSONNEL } from './constants';\nimport { deletePersonnelFailure, deletePersonnelSuccess } from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(deletePersonnelFailure([]));\n  } catch (error) {\n    yield put(deletePersonnelFailure([]));\n  }\n}\n\nfunction* deletePersonnel(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PersonnelsService.deletePersonnel, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.personnels.get('ids'));\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n\n      ids = ids.filter(id => id !== deleteId);\n      delete personnels[deleteId];\n      yield put(deletePersonnelSuccess({ ids, personnels }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePersonnelFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deletePersonnelFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* allWatcher() {\n  yield takeLatest(DELETE_PERSONNEL, deletePersonnel);\n}\n\nexport default allWatcher;\n","import { takeLatest, put, call, select, delay, all } from 'redux-saga/effects';\nimport { ADD_PERSONNEL } from './constants';\nimport {\n  addPersonnelFailure,\n  addPersonnelSuccess,\n  toggleAddPersonnelSuccessMessage\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearMessage() {\n  yield delay(4000);\n  yield all([\n    put(addPersonnelFailure([])),\n    put(toggleAddPersonnelSuccessMessage())\n  ]);\n}\n\nfunction* addPersonnel(action) {\n  try {\n    const { name, rank, platoon } = action.payload;\n    const response = yield call(\n      PersonnelsService.createPersonnel,\n      name,\n      rank,\n      platoon\n    );\n    if (response.ok) {\n      const [...ids] = yield select(state => state.personnels.get('ids'));\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const person = response.data;\n      ids.push(person._id);\n      personnels[person._id] = person;\n      yield put(addPersonnelSuccess({ ids, personnels }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addPersonnelFailure(errors));\n    }\n  } catch (error) {\n    yield put(addPersonnelFailure([error.message]));\n  }\n  yield call(clearMessage);\n}\n\nfunction* addWatcher() {\n  yield takeLatest(ADD_PERSONNEL, addPersonnel);\n}\n\nexport default addWatcher;\n","import { takeLatest, call, put, select, all, delay } from 'redux-saga/effects';\nimport moment from 'moment-timezone';\nimport {\n  ADD_STATUS,\n  DELETE_STATUS,\n  ADD_BLOCKOUT,\n  DELETE_BLOCKOUT,\n  EDIT_PERSONNEL_POINT\n} from './constants';\nimport {\n  addStatusSuccess,\n  addStatusFailure,\n  deleteStatusFailure,\n  deleteStatusSuccess,\n  addBlockoutSuccess,\n  addBlockoutFailure,\n  deleteBlockoutFailure,\n  deleteBlockoutSuccess,\n  editPersonnelPointFailure,\n  editPersonnelPointSuccess,\n  clearErrors\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(clearErrors());\n  } catch (error) {\n    yield put(clearErrors());\n  }\n}\nfunction* addStatus(action) {\n  try {\n    const { personnelId, statusId } = action.payload;\n    let { startDate, endDate } = action.payload;\n    startDate = moment(startDate, 'DDMMYY', true).format('DD-MM-YYYY');\n    endDate =\n      endDate.toLowerCase() === 'permanent'\n        ? endDate\n        : moment(endDate, 'DDMMYY', true).format('DD-MM-YYYY');\n\n    const response = yield call(\n      PersonnelsService.addPersonnelStatus,\n      personnelId,\n      statusId,\n      startDate,\n      endDate\n    );\n    if (response.ok) {\n      const status = response.data;\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const statusToPush = {\n        _id: status._id,\n        expired: status.expired,\n        statusId: status.statusId,\n        startDate: status.startDate,\n        endDate: status.endDate\n      };\n      personnels[personnelId].statuses.push(statusToPush);\n      yield put(addStatusSuccess(personnels));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(addStatusFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteStatus(action) {\n  try {\n    const { personnelId, pStatusId } = action.payload;\n    const response = yield call(\n      PersonnelsService.deletePersonnelStatus,\n      personnelId,\n      pStatusId\n    );\n    if (response.ok) {\n      const status = response.data.personnelStatus;\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      personnels[personnelId].statuses = personnels[\n        personnelId\n      ].statuses.filter(pStatus => pStatus._id !== status._id);\n      yield put(deleteStatusSuccess(personnels));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteStatusFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* addBlockout(action) {\n  try {\n    const { personnelId, date } = action.payload;\n\n    const startDate = moment(date.startDate, 'DDMMYY', true).format(\n      'DD-MM-YYYY'\n    );\n\n    const dateToSubmit = {\n      startDate\n    };\n\n    if (date.endDate) {\n      dateToSubmit.endDate = moment(date.endDate, 'DDMMYY', true).format(\n        'DD-MM-YYYY'\n      );\n    }\n\n    const response = yield call(\n      PersonnelsService.addPersonnelBlockout,\n      personnelId,\n      dateToSubmit\n    );\n\n    if (response.ok) {\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const { blockOutDates, _id: id } = response.data;\n      personnels[id].blockOutDates = blockOutDates;\n      yield put(addBlockoutSuccess(personnels));\n    } else if (response.status === 304) {\n      yield put(addBlockoutFailure(['Blockout date already exist']));\n      yield call(clearError, addBlockoutFailure);\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addBlockoutFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(addBlockoutFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteBlockout(action) {\n  try {\n    const { personnelId, date } = action.payload;\n    const response = yield call(\n      PersonnelsService.deletePersonnelBlockout,\n      personnelId,\n      date\n    );\n    if (response.ok) {\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const { blockOutDates, _id: id } = response.data;\n      personnels[id].blockOutDates = blockOutDates;\n      yield put(deleteBlockoutSuccess(personnels));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteBlockoutFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteBlockoutFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* editPersonnelPoint(action) {\n  try {\n    const { personnelId, personnelPointId, point } = action.payload;\n\n    const response = yield call(\n      PersonnelsService.editPersonnelPoint,\n      personnelId,\n      personnelPointId,\n      point\n    );\n    if (response.ok) {\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const { points, personId, _id } = response.data.personnelPoint;\n      const person = personnels[personId];\n      person.points = person.points.map(pPoint => {\n        if (_id === pPoint._id) {\n          const personPoint = pPoint;\n          personPoint.points = points;\n          return personPoint;\n        }\n        return pPoint;\n      });\n\n      yield put(editPersonnelPointSuccess(personnels));\n    } else if (response.status === 304) {\n      yield put(\n        editPersonnelPointFailure([\n          'Please provide a different point number, must not be the same'\n        ])\n      );\n      yield call(clearError);\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(editPersonnelPointFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(editPersonnelPointFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* singleWatcher() {\n  yield all([\n    takeLatest(ADD_STATUS, addStatus),\n    takeLatest(DELETE_STATUS, deleteStatus),\n    takeLatest(ADD_BLOCKOUT, addBlockout),\n    takeLatest(DELETE_BLOCKOUT, deleteBlockout),\n    takeLatest(EDIT_PERSONNEL_POINT, editPersonnelPoint)\n  ]);\n}\n\nexport default singleWatcher;\n","import { takeLatest, call, put, select, all } from 'redux-saga/effects';\nimport { UPDATE_PERSON } from './constants';\nimport { updatePersonFailure, updatePersonSuccess } from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* updatePerson(action) {\n  try {\n    const { personnelId, name, rank, platoon } = action.payload;\n    const { ...personnels } = yield select(state =>\n      state.personnels.get('personnels')\n    );\n    const response = yield call(PersonnelsService.editPersonnel, personnelId, {\n      name,\n      rank,\n      platoon\n    });\n    if (response.ok) {\n      const ranks = yield select(state => state.ranks.get('ranks'));\n      const platoons = yield select(state => state.platoons.get('platoons'));\n      const person = personnels[personnelId];\n      person.name = name;\n      person.rank = ranks[rank];\n      person.platoon = platoons[platoon];\n      yield put(updatePersonSuccess(personnels));\n    } else if (response.status === 304) {\n      yield put(updatePersonSuccess(personnels));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(updatePersonFailure(errors));\n    }\n  } catch (error) {\n    yield put(updatePersonFailure([error.message || 'Please try again later']));\n  }\n}\n\nfunction* editPersonnelWatcher() {\n  yield all([takeLatest(UPDATE_PERSON, updatePerson)]);\n}\n\nexport default editPersonnelWatcher;\n","import { all } from 'redux-saga/effects';\nimport allSaga from './all/saga';\nimport addSaga from './add/saga';\nimport singleSaga from './single/saga';\nimport editSaga from './edit/saga';\n\nfunction* personnelsSaga() {\n  yield all([allSaga(), addSaga(), singleSaga(), editSaga()]);\n}\n\nexport default personnelsSaga;\n","import { takeLatest, call, put, select, delay } from 'redux-saga/effects';\nimport { DELETE_EVENT } from './constants';\nimport { deleteEventFailure, deleteEventSuccess } from './actions';\nimport { logout } from '../../../actions/authActions';\nimport EventsService from '../../../services/events';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(deleteEventFailure([]));\n  } catch (error) {\n    yield put(deleteEventFailure([]));\n  }\n}\n\nfunction* deleteEvent(action) {\n  try {\n    const { revert, eventId } = action.payload;\n    const response = yield call(EventsService.deleteEvent, eventId, revert);\n    if (response.ok) {\n      const { event } = response.data;\n\n      let ids = yield select(state => state.events.get('ids'));\n      const { ...events } = yield select(state => state.events.get('events'));\n      ids = ids.filter(id => id !== event._id);\n      delete events[event._id];\n      yield put(deleteEventSuccess({ ids, events }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteEventFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteEventFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteWatcher() {\n  yield takeLatest(DELETE_EVENT, deleteEvent);\n}\n\nexport default deleteWatcher;\n","import { put, takeLatest, call, delay, select } from 'redux-saga/effects';\nimport { CREATE_EVENT } from './constants';\nimport { createEventFailure, createEventSuccess } from './actions';\nimport EventsService from '../../../services/events';\nimport { logout } from '../../../actions/authActions';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(createEventFailure([]));\n  } catch (error) {\n    yield put(createEventFailure([]));\n  }\n}\n\nfunction* createEvent(action) {\n  try {\n    const response = yield call(EventsService.createEvent, action.payload);\n    if (response.ok) {\n      const event = response.data;\n      const ids = yield select(state => state.events.get('ids'));\n      const { ...events } = yield select(state => state.events.get('events'));\n\n      ids.push(event._id);\n      events[event._id] = event;\n\n      yield put(createEventSuccess({ ids, events }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(createEventFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(createEventFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* addWatcher() {\n  yield takeLatest(CREATE_EVENT, createEvent);\n}\n\nexport default addWatcher;\n","import { all } from 'redux-saga/effects';\n\nimport deleteSaga from './delete/saga';\nimport addSaga from './add/saga';\n\nfunction* eventsWatcher() {\n  yield all([deleteSaga(), addSaga()]);\n}\n\nexport default eventsWatcher;\n","// PAGES SAGAS\nimport loginPageSaga from '../pages/login/saga';\nimport loadingPageSaga from '../pages/loading/saga';\nimport ranksPageSaga from '../pages/ranks/saga';\nimport platoonsPageSaga from '../pages/platoons/saga';\nimport pointsPageSaga from '../pages/points/saga';\nimport statusesPageSaga from '../pages/statuses/saga';\nimport personnelsPageSaga from '../pages/personnels/saga';\nimport eventsPageSaga from '../pages/events/saga';\n\nconst pageSagas = [\n  loginPageSaga(),\n  loadingPageSaga(),\n  ranksPageSaga(),\n  platoonsPageSaga(),\n  pointsPageSaga(),\n  statusesPageSaga(),\n  personnelsPageSaga(),\n  eventsPageSaga()\n];\n\nexport default pageSagas;\n","import { all } from 'redux-saga/effects';\n\n// GLOBAL SAGAS\nimport authSaga from './authSaga';\nimport personnelsSaga from './personnelsSaga';\nimport pageSagas from './pageSagas';\n\nconst globalSagas = [authSaga(), personnelsSaga()];\n\nfunction* rootSagas() {\n  yield all([...globalSagas, ...pageSagas]);\n}\n\nexport default rootSagas;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\n\nimport Reactotron from 'reactotron-react-js';\nimport ReactotronConfig from './reactotronConfig';\n\nimport rootReducer from '../reducers/rootReducer';\nimport rootSagas from '../sagas/rootSaga';\n\nconst configureStore = (state = {}) => {\n  // let sagaMiddleware = createSagaMiddleware();\n  // let store = createStore(rootReducer, state, applyMiddleware(sagaMiddleware));\n  // let persistor = persistStore(store);\n\n  // if (process.env.NODE_ENV === 'development') {\n  const sagaMonitor = Reactotron.createSagaMonitor();\n  const sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n  const store = createStore(\n    rootReducer,\n    state,\n    compose(applyMiddleware(sagaMiddleware), ReactotronConfig.createEnhancer())\n  );\n  const persistor = persistStore(store);\n  // }\n\n  sagaMiddleware.run(rootSagas);\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/styles.css';\nimport createStore from './stores/createStore';\n\nconst { store, persistor } = createStore();\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {\n  ADD_POINT,\n  ADD_POINT_FAILURE,\n  ADD_POINT_SUCCESS,\n  DELETE_POINT,\n  DELETE_POINT_FAILURE,\n  DELETE_POINT_SUCCESS,\n  UPDATE_POINT,\n  UPDATE_POINT_FAILURE,\n  UPDATE_POINT_SUCCESS\n} from './constants';\n\nexport const addPoint = name => ({\n  type: ADD_POINT,\n  payload: name\n});\n\nexport const addPointSuccess = ({ ids, points }) => ({\n  type: ADD_POINT_SUCCESS,\n  payload: {\n    ids,\n    points\n  }\n});\n\nexport const addPointFailure = errors => ({\n  type: ADD_POINT_FAILURE,\n  payload: errors\n});\n\nexport const deletePoint = id => ({\n  type: DELETE_POINT,\n  payload: id\n});\n\nexport const deletePointSuccess = id => ({\n  type: DELETE_POINT_SUCCESS,\n  payload: id\n});\n\nexport const deletePointFailure = errors => ({\n  type: DELETE_POINT_FAILURE,\n  payload: errors\n});\n\nexport const updatePoint = (id, name) => ({\n  type: UPDATE_POINT,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updatePointSuccess = points => ({\n  type: UPDATE_POINT_SUCCESS,\n  payload: points\n});\n\nexport const updatePointFailure = errors => ({\n  type: UPDATE_POINT_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT,\n  ADD_BLOCKOUT_FAILURE,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT,\n  DELETE_BLOCKOUT_FAILURE,\n  DELETE_BLOCKOUT_SUCCESS,\n  CLEAR_ERRORS,\n  EDIT_PERSONNEL_POINT,\n  EDIT_PERSONNEL_POINT_FAILURE,\n  EDIT_PERSONNEL_POINT_SUCCESS\n} from './constants';\n\nexport const addStatus = (personnelId, statusId, startDate, endDate) => ({\n  type: ADD_STATUS,\n  payload: {\n    personnelId,\n    statusId,\n    startDate,\n    endDate\n  }\n});\n\nexport const addStatusSuccess = payload => ({\n  type: ADD_STATUS_SUCCESS,\n  payload\n});\n\nexport const addStatusFailure = errors => ({\n  type: ADD_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const deleteStatus = (personnelId, pStatusId) => ({\n  type: DELETE_STATUS,\n  payload: {\n    personnelId,\n    pStatusId\n  }\n});\n\nexport const deleteStatusSuccess = payload => ({\n  type: DELETE_STATUS_SUCCESS,\n  payload\n});\n\nexport const deleteStatusFailure = errors => ({\n  type: DELETE_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const addBlockout = (personnelId, date) => ({\n  type: ADD_BLOCKOUT,\n  payload: {\n    personnelId,\n    date\n  }\n});\n\nexport const addBlockoutSuccess = payload => ({\n  type: ADD_BLOCKOUT_SUCCESS,\n  payload\n});\n\nexport const addBlockoutFailure = errors => ({\n  type: ADD_BLOCKOUT_FAILURE,\n  payload: errors\n});\n\nexport const deleteBlockout = (personnelId, date) => ({\n  type: DELETE_BLOCKOUT,\n  payload: {\n    personnelId,\n    date\n  }\n});\n\nexport const deleteBlockoutSuccess = payload => ({\n  type: DELETE_BLOCKOUT_SUCCESS,\n  payload\n});\n\nexport const deleteBlockoutFailure = errors => ({\n  type: DELETE_BLOCKOUT_FAILURE,\n  payload: errors\n});\n\nexport const clearErrors = () => ({\n  type: CLEAR_ERRORS\n});\n\nexport const editPersonnelPoint = (personnelId, personnelPointId, point) => ({\n  type: EDIT_PERSONNEL_POINT,\n  payload: {\n    personnelId,\n    personnelPointId,\n    point\n  }\n});\n\nexport const editPersonnelPointSuccess = payload => ({\n  type: EDIT_PERSONNEL_POINT_SUCCESS,\n  payload\n});\n\nexport const editPersonnelPointFailure = errors => ({\n  type: EDIT_PERSONNEL_POINT_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  UPDATE_STATUS,\n  UPDATE_STATUS_FAILURE,\n  UPDATE_STATUS_SUCCESS\n} from './constants';\n\nexport const addStatus = name => ({\n  type: ADD_STATUS,\n  payload: name\n});\n\nexport const addStatusSuccess = ({ ids, statuses }) => ({\n  type: ADD_STATUS_SUCCESS,\n  payload: {\n    ids,\n    statuses\n  }\n});\n\nexport const addStatusFailure = errors => ({\n  type: ADD_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const deleteStatus = id => ({\n  type: DELETE_STATUS,\n  payload: id\n});\n\nexport const deleteStatusSuccess = id => ({\n  type: DELETE_STATUS_SUCCESS,\n  payload: id\n});\n\nexport const deleteStatusFailure = errors => ({\n  type: DELETE_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const updateStatus = (id, name) => ({\n  type: UPDATE_STATUS,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updateStatusSuccess = statuses => ({\n  type: UPDATE_STATUS_SUCCESS,\n  payload: statuses\n});\n\nexport const updateStatusFailure = errors => ({\n  type: UPDATE_STATUS_FAILURE,\n  payload: errors\n});\n","export const ADD_PERSONNEL = 'PERSONNELS_PAGE/ADD/ADD_PERSONNEL';\nexport const ADD_PERSONNEL_SUCCESS =\n  'PERSONNELS_PAGE/ADD/ADD_PERSONNEL_SUCCESS';\nexport const ADD_PERSONNEL_FAILURE =\n  'PERSONNELS_PAGE/ADD/ADD_PERSONNEL_FAILURE';\nexport const TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE =\n  'PERSONNELS_PAGE/ADD/TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE';\n","export const DELETE_EVENT = 'EVENTS_PAGE/DELETE/DELETE_EVENT';\nexport const DELETE_EVENT_SUCCESS = 'EVENTS_PAGE/DELETE/DELETE_EVENT_SUCCESS';\nexport const DELETE_EVENT_FAILURE = 'EVENTS_PAGE/DELETE/DELETE_EVENT_FAILURE';\n","export const CREATE_EVENT = 'EVENTS_PAGE/ADD/CREATE_EVENT';\nexport const CREATE_EVENT_SUCCESS = 'EVENTS_PAGE/ADD/CREATE_EVENT_SUCCESS';\nexport const CREATE_EVENT_FAILURE = 'EVENTS_PAGE/ADD/CREATE_EVENT_FAILURE';\n","export const DELETE_PERSONNEL = 'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL';\nexport const DELETE_PERSONNEL_SUCCESS =\n  'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL_SUCCESS';\nexport const DELETE_PERSONNEL_FAILURE =\n  'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL_FAILURE';\n","export const UPDATE_PERSON = 'PERSONNELS/EDIT/UPDATE_PERSON';\nexport const UPDATE_PERSON_SUCCESS = 'PERSONNELS/EDIT/UPDATE_PERSON_SUCCESS';\nexport const UPDATE_PERSON_FAILURE = 'PERSONNELS/EDIT/UPDATE_PERSON_FAILURE';\n","export const LOGIN = 'LOGIN_PAGE/LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_PAGE/LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_PAGE/LOGIN_FAIL';\n","export const LOAD_APP = 'LOADING_PAGE/LOAD_APP';\nexport const LOAD_APP_SUCCESS = 'LOADING_PAGE/LOAD_APP_SUCCESS';\nexport const LOAD_APP_FAILURE = 'LOADING_PAGE/LOAD_APP_FAILURE';\n","import api from '../utils/api';\n\nclass EventsService {\n  static getEvents() {\n    return api\n      .get('/events')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteEvent(eventId, revert = false) {\n    return api\n      .post(`/events/delete/${eventId}`, { revert })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createEvent(data) {\n    return api\n      .post('/events/create', data)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static generateName(data) {\n    return api\n      .post('/events/generate', data)\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default EventsService;\n","import {\n  DELETE_PERSONNEL,\n  DELETE_PERSONNEL_FAILURE,\n  DELETE_PERSONNEL_SUCCESS\n} from './constants';\n\nexport const deletePersonnel = id => ({\n  type: DELETE_PERSONNEL,\n  payload: id\n});\n\nexport const deletePersonnelSuccess = ({ ids, personnels }) => ({\n  type: DELETE_PERSONNEL_SUCCESS,\n  payload: {\n    ids,\n    personnels\n  }\n});\n\nexport const deletePersonnelFailure = errors => ({\n  type: DELETE_PERSONNEL_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_PERSONNEL,\n  ADD_PERSONNEL_FAILURE,\n  ADD_PERSONNEL_SUCCESS,\n  TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE\n} from './constants';\n\nexport const addPersonnel = (name, platoon, rank) => ({\n  type: ADD_PERSONNEL,\n  payload: {\n    name,\n    platoon,\n    rank\n  }\n});\n\nexport const addPersonnelSuccess = ({ ids, personnels }) => ({\n  type: ADD_PERSONNEL_SUCCESS,\n  payload: {\n    ids,\n    personnels\n  }\n});\n\nexport const addPersonnelFailure = errors => ({\n  type: ADD_PERSONNEL_FAILURE,\n  payload: errors\n});\n\nexport const toggleAddPersonnelSuccessMessage = () => {\n  return {\n    type: TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE\n  };\n};\n","import {\n  DELETE_EVENT,\n  DELETE_EVENT_FAILURE,\n  DELETE_EVENT_SUCCESS\n} from './constants';\n\nexport const deleteEvent = ({ eventId, revert = false }) => ({\n  type: DELETE_EVENT,\n  payload: {\n    eventId,\n    revert\n  }\n});\n\nexport const deleteEventSuccess = ({ ids, events }) => ({\n  type: DELETE_EVENT_SUCCESS,\n  payload: {\n    ids,\n    events\n  }\n});\n\nexport const deleteEventFailure = errors => ({\n  type: DELETE_EVENT_FAILURE,\n  payload: errors\n});\n","import {\n  CREATE_EVENT,\n  CREATE_EVENT_FAILURE,\n  CREATE_EVENT_SUCCESS\n} from './constants';\n\nexport const createEvent = payload => ({\n  type: CREATE_EVENT,\n  payload\n});\n\nexport const createEventSuccess = ({ ids, events }) => ({\n  type: CREATE_EVENT_SUCCESS,\n  payload: { ids, events }\n});\n\nexport const createEventFailure = errors => ({\n  type: CREATE_EVENT_FAILURE,\n  payload: errors\n});\n","import { LOAD_APP, LOAD_APP_FAILURE, LOAD_APP_SUCCESS } from './constants';\n\nexport const loadApp = () => ({\n  type: LOAD_APP\n});\n\nexport const loadAppSuccess = () => ({\n  type: LOAD_APP_SUCCESS\n});\n\nexport const loadAppFailed = () => ({\n  type: LOAD_APP_FAILURE\n});\n","import { LOGIN, LOGIN_FAIL, LOGIN_SUCCESS } from './constants';\n\nexport const login = (username, password) => {\n  return {\n    type: LOGIN,\n    payload: {\n      username,\n      password\n    }\n  };\n};\n\nexport const loginSuccess = () => {\n  return {\n    type: LOGIN_SUCCESS\n  };\n};\n\nexport const loginFailure = errors => {\n  return {\n    type: LOGIN_FAIL,\n    payload: errors\n  };\n};\n","export const LOG_OUT = 'LOGOUT';\nexport const LOG_OUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOGOUT_FAILURE';\nexport const CHECK_AUTH = 'CHECK_AUTH';\nexport const CHECK_AUTH_FAILURE = 'CHECK_AUTH_FAILURE';\nexport const CHECK_AUTH_SUCCESS = 'CHECK_AUTH_SUCCESS';\n\nexport const LOAD_RANKS = 'LOAD_RANKS';\nexport const LOAD_RANKS_SUCCESS = 'LOAD_RANKS_SUCCESS';\nexport const LOAD_RANKS_FAILURE = 'LOAD_RANKS_FAILURE';\n\nexport const LOAD_PLATOONS = 'LOAD_PLATOONS';\nexport const LOAD_PLATOONS_SUCCESS = 'LOAD_PLATOONS_SUCCESS';\nexport const LOAD_PLATOONS_FAILURE = 'LOAD_PLATOONS_FAILURE';\n\nexport const LOAD_EVENTS = 'LOAD_EVENTS';\nexport const LOAD_EVENTS_SUCCESS = 'LOAD_EVENTS_SUCCESS';\nexport const LOAD_EVENTS_FAILURE = 'LOAD_EVENTS_FAILURE';\n\nexport const LOAD_PERSONNELS = 'LOAD_PERSONNELS';\nexport const LOAD_PERSONNELS_SUCCESS = 'LOAD_PERSONNELS_SUCCESS';\nexport const LOAD_PERSONNELS_FAILURE = 'LOAD_PERSONNELS_FAILURE';\n\nexport const PERSONNELS_UPDATE_POINTS_SYSTEM =\n  'PERSONNELS_UPDATE_POINTS_SYSTEM';\nexport const PERSONNELS_UPDATE_EVENT_POINTS = 'PERSONNELS_UPDATE_EVENT_POINTS';\nexport const PERSONNELS_UPDATE_RANK_NAME = 'PERSONNELS_UPDATE_RANK_NAME';\nexport const PERSONNELS_UPDATE_PLATOON_NAME = 'PERSONNELS_UPDATE_PLATOON_NAME';\nexport const PERSONNELS_UPDATE_STATUS_NAME = 'PERSONNELS_UPDATE_STATUS_NAME';\n\nexport const LOAD_POINTS = 'LOAD_POINTS';\nexport const LOAD_POINTS_SUCCESS = 'LOAD_POINTS_SUCCESS';\nexport const LOAD_POINTS_FAILURE = 'LOAD_POINTS_FAILURE';\n\nexport const LOAD_STATUSES = 'LOAD_STATUSES';\nexport const LOAD_STATUSES_SUCCESS = 'LOAD_STATUSES_SUCCESS';\nexport const LOAD_STATUSES_FAILURE = 'LOAD_STATUSES_FAILURE';\n","import {\n  UPDATE_PERSON,\n  UPDATE_PERSON_FAILURE,\n  UPDATE_PERSON_SUCCESS\n} from './constants';\n\nexport const updatePerson = payload => ({\n  type: UPDATE_PERSON,\n  payload\n});\n\nexport const updatePersonSuccess = payload => ({\n  type: UPDATE_PERSON_SUCCESS,\n  payload\n});\n\nexport const updatePersonFailure = errors => ({\n  type: UPDATE_PERSON_FAILURE,\n  payload: errors\n});\n","import React, { useState } from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\n\nconst TopNavBar = ({ username, logout }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Navbar color=\"dark\" dark expand=\"md\">\n      <NavbarBrand href=\"/\">Duty App</NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/dashboard\" activeClassName=\"active\" exact>\n              Dashboard\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/events\" activeClassName=\"active\" exact>\n              Events\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/personnels\" activeClassName=\"active\" exact>\n              Personnels\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/ranks\" activeClassName=\"active\" exact>\n              Ranks\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/platoons\" activeClassName=\"active\" exact>\n              Platoons\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/points\" activeClassName=\"active\" exact>\n              Points System\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/statuses\" activeClassName=\"active\" exact>\n              Statuses\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <Nav className=\"ml-auto\" navbar>\n          <UncontrolledDropdown nav inNavbar>\n            <DropdownToggle nav caret>\n              Hello, {username}\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem onClick={logout}>Logout</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n\nTopNavBar.propTypes = {\n  username: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nexport default TopNavBar;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport TopNavBar from '../../components/commons/TopNavBar';\nimport { logout } from '../../actions/authActions';\n\nclass AppLayout extends PureComponent {\n  render() {\n    const { children, username, userLogout } = this.props;\n    return (\n      <>\n        <TopNavBar username={username} logout={userLogout} />\n        {children}\n      </>\n    );\n  }\n}\n\nAppLayout.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  username: PropTypes.string.isRequired,\n  userLogout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  username: state.auth.get('username')\n});\n\nconst mapDispatchToProps = {\n  userLogout: logout\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppLayout);\n"],"sourceRoot":""}