{"version":3,"sources":["actions/authActions.js","utils/api.js","pages/personnels/single/constants.js","pages/ranks/constants.js","pages/platoons/constants.js","pages/points/constants.js","pages/statuses/constants.js","pages/ranks/actions.js","pages/platoons/actions.js","AuthRoute.js","components/commons/Loading.jsx","pages/NotFoundPage/NotFoundPage.jsx","App.js","stores/reactotronConfig.js","reducers/authReducer.js","reducers/ranksReducer.js","reducers/platoonsReducer.js","reducers/eventsReducer.js","reducers/personnelsReducer.js","reducers/pointsReducer.js","reducers/statusesReducer.js","pages/login/reducer.js","pages/loading/reducer.js","pages/ranks/reducer.js","pages/platoons/reducer.js","pages/points/reducer.js","pages/statuses/reducer.js","pages/personnels/all/reducer.js","pages/personnels/add/reducer.js","pages/personnels/single/reducer.js","pages/personnels/reducer.js","pages/events/delete/reducer.js","pages/events/add/reducer.js","pages/events/reducer.js","reducers/pagesReducer.js","reducers/rootReducer.js","services/accounts.js","sagas/authSaga.js","pages/login/saga.js","actions/ranksActions.js","actions/platoonsActions.js","actions/pointsActions.js","actions/eventsActions.js","actions/personnelsActions.js","actions/statusesActions.js","services/ranks.js","services/platoons.js","services/points.js","services/personnels.js","services/statuses.js","pages/loading/saga.js","pages/ranks/saga.js","pages/platoons/saga.js","pages/points/saga.js","pages/statuses/saga.js","pages/personnels/all/saga.js","pages/personnels/add/saga.js","pages/personnels/single/saga.js","pages/personnels/saga.js","pages/events/delete/saga.js","pages/events/add/saga.js","pages/events/saga.js","sagas/pageSagas.js","sagas/rootSaga.js","stores/createStore.js","index.js","pages/points/actions.js","pages/statuses/actions.js","pages/personnels/single/actions.js","pages/personnels/add/constants.js","pages/events/delete/constants.js","pages/events/add/constants.js","pages/personnels/all/constants.js","pages/login/constants.js","pages/loading/constants.js","services/events.js","pages/personnels/all/actions.js","pages/personnels/add/actions.js","pages/events/delete/actions.js","pages/events/add/actions.js","pages/loading/actions.js","pages/login/actions.js","actions/constants.js","components/commons/TopNavBar.jsx","pages/shared/AppLayout.jsx"],"names":["logout","type","LOG_OUT","logoutFailure","LOG_OUT_FAILURE","logoutSuccess","LOG_OUT_SUCCESS","checkAuth","CHECK_AUTH","checkAuthSuccess","payload","CHECK_AUTH_SUCCESS","checkAuthFailure","errors","CHECK_AUTH_FAILURE","api","create","baseURL","withCredentials","ADD_STATUS","ADD_STATUS_SUCCESS","ADD_STATUS_FAILURE","DELETE_STATUS","DELETE_STATUS_SUCCESS","DELETE_STATUS_FAILURE","ADD_BLOCKOUT","ADD_BLOCKOUT_SUCCESS","ADD_BLOCKOUT_FAILURE","DELETE_BLOCKOUT","DELETE_BLOCKOUT_SUCCESS","DELETE_BLOCKOUT_FAILURE","CLEAR_ERRORS","ADD_RANK","ADD_RANK_SUCCESS","ADD_RANK_FAILURE","UPDATE_RANK","UPDATE_RANK_SUCCESS","UPDATE_RANK_FAILURE","DELETE_RANK","DELETE_RANK_SUCCESS","DELETE_RANK_FAILURE","ADD_PLATOON","ADD_PLATOON_SUCCESS","ADD_PLATOON_FAILURE","UPDATE_PLATOON","UPDATE_PLATOON_SUCCESS","UPDATE_PLATOON_FAILURE","DELETE_PLATOON","DELETE_PLATOON_SUCCESS","DELETE_PLATOON_FAILURE","ADD_POINT","ADD_POINT_SUCCESS","ADD_POINT_FAILURE","UPDATE_POINT","UPDATE_POINT_SUCCESS","UPDATE_POINT_FAILURE","DELETE_POINT","DELETE_POINT_SUCCESS","DELETE_POINT_FAILURE","UPDATE_STATUS","UPDATE_STATUS_SUCCESS","UPDATE_STATUS_FAILURE","addRank","name","addRankSuccess","ids","ranks","addRankFailure","deleteRank","id","deleteRankSuccess","deleteRankFailure","updateRank","updateRankSuccess","updateRankFailure","addPlatoon","addPlatoonSuccess","platoons","addPlatoonFailure","deletePlatoon","deletePlatoonSuccess","deletePlatoonFailure","updatePlatoon","updatePlatoonSuccess","updatePlatoonFailure","connect","state","isAuthenticated","auth","get","Component","component","rest","render","props","undefined","exact","to","Loading","this","AppLayout","Container","className","Row","Spinner","color","PureComponent","NotFoundPage","goBack","history","Col","Button","onClick","LoginPage","lazy","LoadingPage","DashboardPage","RanksPage","PlatoonsPage","PointsPage","StatusesPage","PersonnelsPage","EventsPage","App","checkAuthenticated","fallback","from","path","appLoaded","reloadApp","mapDispatchToProps","loadApp","pages","loading","reactotron","Reactotron","configure","use","reactotronRedux","sagaPlugin","initialState","Map","username","authReducer","LOGIN","merge","events","personnels","points","statuses","isLoading","actionInProgress","success","personnelsPageReducers","combineReducers","all","DELETE_PERSONNEL","DELETE_PERSONNEL_SUCCESS","DELETE_PERSONNEL_FAILURE","add","ADD_PERSONNEL","ADD_PERSONNEL_SUCCESS","TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE","ADD_PERSONNEL_FAILURE","single","isDeleting","isAdding","delete","DELETE_EVENT","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAILURE","CREATE_EVENT","CREATE_EVENT_SUCCESS","CREATE_EVENT_FAILURE","login","LOGIN_FAIL","LOAD_APP","LOAD_APP_FAILURE","LOAD_APP_SUCCESS","eventsPageReducer","personnelsPageReducer","appReducer","LOAD_RANKS_SUCCESS","LOAD_RANKS_FAILURE","LOAD_PLATOONS_SUCCESS","LOAD_PLATOONS_FAILURE","LOAD_EVENTS_SUCCESS","LOAD_EVENTS_FAILURE","LOAD_PERSONNELS_SUCCESS","LOAD_PERSONNELS_FAILURE","LOAD_POINTS_SUCCESS","LOAD_POINTS_FAILURE","LOAD_STATUSES_SUCCESS","LOAD_STATUSES_FAILURE","pagesReducer","persistConfig","transforms","immutableTransform","key","storage","blacklist","persistedRootReducer","persistReducer","action","newState","AccountService","password","post","then","response","catch","error","authSagaWatcher","call","put","ok","isAuth","data","logoutAction","message","takeLatest","loginWatcher","delay","status","loginFailure","loginSuccess","loadRanksSuccess","loadRanksFailure","loadPlatoonsSuccess","loadPlatoonsFailure","loadPointsSuccess","loadPointsFailure","loadEventsSuccess","loadEventsFailure","loadPersonnelsSuccess","loadPersonnelsFailure","loadStatusesSuccess","loadStatusesFailure","RanksService","PlatoonService","PointsService","PersonnelsService","rank","platoon","updatedPersonnel","personnelId","statusId","startDate","endDate","pStatusId","date","Statuses","loadPoints","loadRanks","loadPlatoons","loadEvents","loadPersonnels","loadStatuses","loadEssentials","refresh","loadingWatcher","getPoints","forEach","point","_id","push","getRanks","PlatoonsService","getPlatoons","EventsService","getEvents","getPersonnels","StatusesService","getStatuses","loadAppSuccess","loadAppFailed","select","clearError","ranksWatcher","funcToClear","createRank","newRank","concat","deleteId","filter","platoonsWatcher","createPlatoon","newPlatoon","addPoint","deletePoint","updatePoint","pointsWatcher","addPointFailure","createPoint","newPoint","addPointSuccess","deletePointSuccess","deletePointFailure","updatePointFailure","updatePointSuccess","addStatus","deleteStatus","updateStatus","statusesWatcher","createStatus","newStatus","addStatusSuccess","addStatusFailure","deleteStatusSuccess","deleteStatusFailure","updateStatusSuccess","updateStatusFailure","deletePersonnel","allWatcher","deletePersonnelFailure","deletePersonnelSuccess","clearMessage","addPersonnel","addWatcher","addPersonnelFailure","toggleAddPersonnelSuccessMessage","createPersonnel","person","addPersonnelSuccess","addBlockout","deleteBlockout","singleWatcher","clearErrors","moment","format","toLowerCase","addPersonnelStatus","statusToPush","expired","deletePersonnelStatus","personnelStatus","pStatus","dateToSubmit","addPersonnelBlockout","blockOutDates","addBlockoutSuccess","addBlockoutFailure","deletePersonnelBlockout","deleteBlockoutSuccess","deleteBlockoutFailure","personnelsSaga","allSaga","addSaga","singleSaga","deleteEvent","deleteWatcher","deleteEventFailure","revert","eventId","event","deleteEventSuccess","createEvent","createEventFailure","createEventSuccess","eventsWatcher","deleteSaga","pageSagas","loginPageSaga","loadingPageSaga","ranksPageSaga","platoonsPageSaga","pointsPageSaga","statusesPageSaga","personnelsPageSaga","eventsPageSaga","rootSagas","globalSagas","authSaga","sagaMonitor","createSagaMonitor","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","ReactotronConfig","createEnhancer","persistor","persistStore","run","document","getElementById","LOGIN_SUCCESS","LOAD_RANKS","LOAD_PLATOONS","LOAD_EVENTS","LOAD_PERSONNELS","LOAD_POINTS","LOAD_STATUSES","TopNavBar","useState","isOpen","setIsOpen","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","Link","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","children","userLogout"],"mappings":"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","file":"static/js/main.a4204c9a.chunk.js","sourcesContent":["import {\n  LOG_OUT,\n  LOG_OUT_FAILURE,\n  LOG_OUT_SUCCESS,\n  CHECK_AUTH,\n  CHECK_AUTH_SUCCESS,\n  CHECK_AUTH_FAILURE\n} from './constants';\n\nexport const logout = () => {\n  return {\n    type: LOG_OUT\n  };\n};\n\nexport const logoutFailure = () => {\n  return {\n    type: LOG_OUT_FAILURE\n  };\n};\nexport const logoutSuccess = () => {\n  return {\n    type: LOG_OUT_SUCCESS\n  };\n};\n\nexport const checkAuth = () => ({\n  type: CHECK_AUTH\n});\n\nexport const checkAuthSuccess = payload => ({\n  type: CHECK_AUTH_SUCCESS,\n  payload\n});\n\nexport const checkAuthFailure = errors => ({\n  type: CHECK_AUTH_FAILURE,\n  payload: errors\n});\n","import { create } from 'apisauce';\n\nconst api = create({\n  baseURL: '/api',\n  withCredentials: true\n});\n\nexport default api;\n","export const ADD_STATUS = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS';\nexport const ADD_STATUS_SUCCESS = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS_SUCCESS';\nexport const ADD_STATUS_FAILURE = 'PERSONNELS_PAGE/SINGLE/ADD_STATUS_FAILURE';\n\nexport const DELETE_STATUS = 'PERSONNELS_PAGE/SINGLE/DELETE_STATUS';\nexport const DELETE_STATUS_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/DELETE_STATUS_SUCCESS';\nexport const DELETE_STATUS_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/DELETE_STATUS_FAILURE';\n\nexport const ADD_BLOCKOUT = 'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT';\nexport const ADD_BLOCKOUT_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_SUCCESS';\nexport const ADD_BLOCKOUT_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_FAILURE';\n\nexport const DELETE_BLOCKOUT = 'PERSONNELS_PAGE/SINGLE/DELETE_BLOCKOUT';\nexport const DELETE_BLOCKOUT_SUCCESS =\n  'PERSONNELS_PAGE/SINGLE/DELETE_BLOCKOUT_SUCCESS';\nexport const DELETE_BLOCKOUT_FAILURE =\n  'PERSONNELS_PAGE/SINGLE/ADD_BLOCKOUT_FAILURE';\n\nexport const CLEAR_ERRORS = 'PERSONNELS_PAGE/SINGLE/CLEAR_ERRORS';\n","export const ADD_RANK = 'RANKS_PAGE/ADD_RANK';\nexport const ADD_RANK_SUCCESS = 'RANKS_PAGE/ADD_RANK_SUCCESS';\nexport const ADD_RANK_FAILURE = 'RANKS_PAGE/ADD_RANK_FAILURE';\n\nexport const UPDATE_RANK = 'RANKS_PAGE/UPDATE_RANK';\nexport const UPDATE_RANK_SUCCESS = 'RANKS_PAGE/UPDATE_RANK_SUCCESS';\nexport const UPDATE_RANK_FAILURE = 'RANKS_PAGE/UPDATE_RANK_FAILURE';\n\nexport const DELETE_RANK = 'RANKS_PAGE/DELETE_RANK';\nexport const DELETE_RANK_SUCCESS = 'RANKS_PAGE/DELETE_RANK_SUCCESS';\nexport const DELETE_RANK_FAILURE = 'RANKS_PAGE/DELETE_RANK_FAILURE';\n","export const ADD_PLATOON = 'PLATOONS_PAGE/ADD_PLATOON';\nexport const ADD_PLATOON_SUCCESS = 'PLATOONS_PAGE/ADD_PLATOON_SUCCESS';\nexport const ADD_PLATOON_FAILURE = 'PLATOONS_PAGE/ADD_PLATOON_FAILURE';\n\nexport const UPDATE_PLATOON = 'PLATOONS_PAGE/UPDATE_PLATOON';\nexport const UPDATE_PLATOON_SUCCESS = 'PLATOONS_PAGE/UPDATE_PLATOON_SUCCESS';\nexport const UPDATE_PLATOON_FAILURE = 'PLATOONS_PAGE/UPDATE_PLATOON_FAILURE';\n\nexport const DELETE_PLATOON = 'PLATOONS_PAGE/DELETE_PLATOON';\nexport const DELETE_PLATOON_SUCCESS = 'PLATOONS_PAGE/DELETE_PLATOON_SUCCESS';\nexport const DELETE_PLATOON_FAILURE = 'PLATOONS_PAGE/DELETE_PLATOON_FAILURE';\n","export const ADD_POINT = 'POINTS_PAGE/ADD_POINT';\nexport const ADD_POINT_SUCCESS = 'POINTS_PAGE/ADD_POINT_SUCCESS';\nexport const ADD_POINT_FAILURE = 'POINTS_PAGE/ADD_POINT_FAILURE';\n\nexport const UPDATE_POINT = 'POINTS_PAGE/UPDATE_POINT';\nexport const UPDATE_POINT_SUCCESS = 'POINTS_PAGE/UPDATE_POINT_SUCCESS';\nexport const UPDATE_POINT_FAILURE = 'POINTS_PAGE/UPDATE_POINT_FAILURE';\n\nexport const DELETE_POINT = 'POINTS_PAGE/DELETE_POINT';\nexport const DELETE_POINT_SUCCESS = 'POINTS_PAGE/DELETE_POINT_SUCCESS';\nexport const DELETE_POINT_FAILURE = 'POINTS_PAGE/DELETE_POINT_FAILURE';\n","export const ADD_STATUS = 'STATUSES_PAGE/ADD_STATUS';\nexport const ADD_STATUS_SUCCESS = 'STATUSES_PAGE/ADD_STATUS_SUCCESS';\nexport const ADD_STATUS_FAILURE = 'STATUSES_PAGE/ADD_STATUS_FAILURE';\n\nexport const UPDATE_STATUS = 'STATUSES_PAGE/UPDATE_STATUS';\nexport const UPDATE_STATUS_SUCCESS = 'STATUSES_PAGE/UPDATE_STATUS_SUCCESS';\nexport const UPDATE_STATUS_FAILURE = 'STATUSES_PAGE/UPDATE_STATUS_FAILURE';\n\nexport const DELETE_STATUS = 'STATUSES_PAGE/DELETE_STATUS';\nexport const DELETE_STATUS_SUCCESS = 'STATUSES_PAGE/DELETE_STATUS_SUCCESS';\nexport const DELETE_STATUS_FAILURE = 'STATUSES_PAGE/DELETE_STATUS_FAILURE';\n","import {\n  ADD_RANK,\n  ADD_RANK_FAILURE,\n  ADD_RANK_SUCCESS,\n  DELETE_RANK,\n  DELETE_RANK_FAILURE,\n  DELETE_RANK_SUCCESS,\n  UPDATE_RANK,\n  UPDATE_RANK_FAILURE,\n  UPDATE_RANK_SUCCESS\n} from './constants';\n\nexport const addRank = name => ({\n  type: ADD_RANK,\n  payload: name\n});\n\nexport const addRankSuccess = ({ ids, ranks }) => ({\n  type: ADD_RANK_SUCCESS,\n  payload: {\n    ids,\n    ranks\n  }\n});\n\nexport const addRankFailure = errors => ({\n  type: ADD_RANK_FAILURE,\n  payload: errors\n});\n\nexport const deleteRank = id => ({\n  type: DELETE_RANK,\n  payload: id\n});\n\nexport const deleteRankSuccess = id => ({\n  type: DELETE_RANK_SUCCESS,\n  payload: id\n});\n\nexport const deleteRankFailure = errors => ({\n  type: DELETE_RANK_FAILURE,\n  payload: errors\n});\n\nexport const updateRank = (id, name) => ({\n  type: UPDATE_RANK,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updateRankSuccess = ranks => ({\n  type: UPDATE_RANK_SUCCESS,\n  payload: ranks\n});\n\nexport const updateRankFailure = errors => ({\n  type: UPDATE_RANK_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_PLATOON,\n  ADD_PLATOON_FAILURE,\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON,\n  DELETE_PLATOON_FAILURE,\n  DELETE_PLATOON_SUCCESS,\n  UPDATE_PLATOON,\n  UPDATE_PLATOON_FAILURE,\n  UPDATE_PLATOON_SUCCESS\n} from './constants';\n\nexport const addPlatoon = name => ({\n  type: ADD_PLATOON,\n  payload: name\n});\n\nexport const addPlatoonSuccess = ({ ids, platoons }) => ({\n  type: ADD_PLATOON_SUCCESS,\n  payload: {\n    ids,\n    platoons\n  }\n});\n\nexport const addPlatoonFailure = errors => ({\n  type: ADD_PLATOON_FAILURE,\n  payload: errors\n});\n\nexport const deletePlatoon = id => ({\n  type: DELETE_PLATOON,\n  payload: id\n});\n\nexport const deletePlatoonSuccess = id => ({\n  type: DELETE_PLATOON_SUCCESS,\n  payload: id\n});\n\nexport const deletePlatoonFailure = errors => ({\n  type: DELETE_PLATOON_FAILURE,\n  payload: errors\n});\n\nexport const updatePlatoon = (id, name) => ({\n  type: UPDATE_PLATOON,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updatePlatoonSuccess = platoons => ({\n  type: UPDATE_PLATOON_SUCCESS,\n  payload: platoons\n});\n\nexport const updatePlatoonFailure = errors => ({\n  type: UPDATE_PLATOON_FAILURE,\n  payload: errors\n});\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction AuthRoute({ component: Component, isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (isAuthenticated === undefined) {\n          return null;\n        }\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        }\n\n        return <Redirect exact to=\"/\" />;\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.get('isAuthenticated')\n});\n\nexport default connect(mapStateToProps)(AuthRoute);\n\n// export default AuthRoute;\n","import React, { PureComponent } from 'react';\nimport { Spinner, Row, Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../../pages/shared/AppLayout';\n\nclass Loading extends PureComponent {\n  render() {\n    const { isAuthenticated } = this.props;\n    if (isAuthenticated) {\n      return (\n        <AppLayout>\n          <Container className=\"d-flex h-100 justify-content-center align-items-center flex-column\">\n            <Row>\n              <Spinner type=\"grow\" color=\"primary\" />\n              <Spinner type=\"grow\" color=\"secondary\" />\n              <Spinner type=\"grow\" color=\"success\" />\n              <Spinner type=\"grow\" color=\"danger\" />\n              <Spinner type=\"grow\" color=\"warning\" />\n              <Spinner type=\"grow\" color=\"info\" />\n              <Spinner type=\"grow\" color=\"dark\" />\n            </Row>\n            <Row>Loading Page...</Row>\n          </Container>\n        </AppLayout>\n      );\n    }\n    return (\n      <Container className=\"d-flex h-100 justify-content-center align-items-center flex-column\">\n        <Row>\n          <Spinner type=\"grow\" color=\"primary\" />\n          <Spinner type=\"grow\" color=\"secondary\" />\n          <Spinner type=\"grow\" color=\"success\" />\n          <Spinner type=\"grow\" color=\"danger\" />\n          <Spinner type=\"grow\" color=\"warning\" />\n          <Spinner type=\"grow\" color=\"info\" />\n          <Spinner type=\"grow\" color=\"dark\" />\n        </Row>\n        <Row>Loading Page...</Row>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.get('isAuthenticated')\n});\n\nexport default connect(mapStateToProps)(Loading);\n","import React, { PureComponent } from 'react';\nimport { Container, Button, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass NotFoundPage extends PureComponent {\n  goBack = () => {\n    const {\n      history: { goBack }\n    } = this.props;\n    goBack();\n  };\n\n  render() {\n    return (\n      <Container className=\"h-100\">\n        <Row className=\"h-100 justify-content-center align-items-center\">\n          <Col className=\"d-flex justify-content-center align-items-center flex-column\">\n            <h1>404</h1>\n            <p>The page that you are looking is not available</p>\n            <Button color=\"primary\" onClick={this.goBack}>\n              Click Here To Go back\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nNotFoundPage.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default NotFoundPage;\n","import React, { PureComponent, Suspense, lazy } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { checkAuth } from './actions/authActions';\nimport { loadApp } from './pages/loading/actions';\n\nimport AuthRoute from './AuthRoute';\n\nimport Loading from './components/commons/Loading';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\n\nconst LoginPage = lazy(() => import('./pages/login'));\nconst LoadingPage = lazy(() => import('./pages/loading'));\nconst DashboardPage = lazy(() => import('./pages/dashboard'));\nconst RanksPage = lazy(() => import('./pages/ranks'));\nconst PlatoonsPage = lazy(() => import('./pages/platoons'));\nconst PointsPage = lazy(() => import('./pages/points'));\nconst StatusesPage = lazy(() => import('./pages/statuses'));\nconst PersonnelsPage = lazy(() => import('./pages/personnels'));\nconst EventsPage = lazy(() => import('./pages/events'));\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { checkAuthenticated } = this.props;\n    checkAuthenticated();\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.isAuthenticated && !props.appLoaded) {\n      props.reloadApp();\n    }\n\n    return {};\n  }\n\n  render() {\n    return (\n      <Router>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Redirect from=\"/\" to=\"/login\" exact />\n            <Route path=\"/login\" component={LoginPage} />\n            <AuthRoute path=\"/app\" component={LoadingPage} />\n            <AuthRoute path=\"/dashboard\" component={DashboardPage} />\n            <AuthRoute path=\"/events\" component={EventsPage} />\n            <AuthRoute path=\"/ranks\" component={RanksPage} />\n            <AuthRoute path=\"/platoons\" component={PlatoonsPage} />\n            <AuthRoute path=\"/points\" component={PointsPage} />\n            <AuthRoute path=\"/statuses\" component={StatusesPage} />\n            <AuthRoute path=\"/personnels\" component={PersonnelsPage} />\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n        </Suspense>\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  checkAuthenticated: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  appLoaded: PropTypes.bool.isRequired,\n  reloadApp: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.get('isAuthenticated'),\n    appLoaded: state.pages.loading.get('appLoaded')\n  };\n};\nconst mapDispatchToProps = {\n  checkAuthenticated: checkAuth,\n  reloadApp: loadApp\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// if (process.env.NODE_ENV === 'development') {\nimport Reactotron from 'reactotron-react-js';\nimport { reactotronRedux } from 'reactotron-redux';\nimport sagaPlugin from 'reactotron-redux-saga';\n\nconst reactotron = Reactotron.configure({ name: 'Duty App' })\n  .use(reactotronRedux()) //  <- here i am!\n  .use(sagaPlugin())\n  .connect(); // Don't forget about me!\n\nexport default reactotron;\n// }\n","import { Map } from 'immutable';\nimport { LOGIN } from '../pages/login/constants';\nimport { CHECK_AUTH_SUCCESS, CHECK_AUTH_FAILURE } from '../actions/constants';\n\nconst initialState = Map({\n  username: '',\n  isAuthenticated: false\n});\n\nconst authReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN:\n      return state.merge({\n        username: payload.username\n      });\n    case CHECK_AUTH_SUCCESS:\n      return state.merge({\n        isAuthenticated: payload\n      });\n    case CHECK_AUTH_FAILURE:\n      return state.merge({\n        isAuthenticated: false\n      });\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { Map } from 'immutable';\nimport { LOAD_RANKS_FAILURE, LOAD_RANKS_SUCCESS } from '../actions/constants';\nimport {\n  ADD_RANK_SUCCESS,\n  DELETE_RANK_SUCCESS,\n  UPDATE_RANK_SUCCESS\n} from '../pages/ranks/constants';\n\nconst initialState = Map({\n  ids: [],\n  ranks: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_RANK_SUCCESS:\n    case LOAD_RANKS_SUCCESS:\n    case DELETE_RANK_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        ranks: payload.ranks,\n        errors: []\n      });\n    case UPDATE_RANK_SUCCESS:\n      return state.merge({\n        ranks: payload\n      });\n    case LOAD_RANKS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  LOAD_PLATOONS_FAILURE,\n  LOAD_PLATOONS_SUCCESS\n} from '../actions/constants';\nimport {\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON_SUCCESS,\n  UPDATE_PLATOON_SUCCESS\n} from '../pages/platoons/constants';\n\nconst initialState = Map({\n  ids: [],\n  platoons: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PLATOON_SUCCESS:\n    case DELETE_PLATOON_SUCCESS:\n    case LOAD_PLATOONS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        platoons: payload.platoons,\n        errors: []\n      });\n    case UPDATE_PLATOON_SUCCESS:\n      return state.merge({\n        platoons: payload\n      });\n    case LOAD_PLATOONS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOAD_EVENTS_FAILURE, LOAD_EVENTS_SUCCESS } from '../actions/constants';\nimport {\n  DELETE_EVENT_SUCCESS,\n  CREATE_EVENT_SUCCESS\n} from '../pages/events/constants';\n\nconst initialState = Map({\n  ids: [],\n  events: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_EVENTS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        events: payload.events\n      });\n\n    case LOAD_EVENTS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    case CREATE_EVENT_SUCCESS:\n    case DELETE_EVENT_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        events: payload.events\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  LOAD_PERSONNELS_FAILURE,\n  LOAD_PERSONNELS_SUCCESS\n} from '../actions/constants';\nimport {\n  DELETE_PERSONNEL_SUCCESS,\n  ADD_PERSONNEL_SUCCESS,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT_SUCCESS\n} from '../pages/personnels/constants';\n\nconst initialState = Map({\n  ids: [],\n  personnels: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_PERSONNELS_SUCCESS:\n    case DELETE_PERSONNEL_SUCCESS:\n    case ADD_PERSONNEL_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        personnels: payload.personnels\n      });\n    case DELETE_STATUS_SUCCESS:\n    case ADD_STATUS_SUCCESS:\n    case ADD_BLOCKOUT_SUCCESS:\n    case DELETE_BLOCKOUT_SUCCESS:\n      return state.merge({\n        personnels: payload\n      });\n    case LOAD_PERSONNELS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOAD_POINTS_FAILURE, LOAD_POINTS_SUCCESS } from '../actions/constants';\nimport {\n  ADD_POINT_SUCCESS,\n  DELETE_POINT_SUCCESS,\n  UPDATE_POINT_SUCCESS\n} from '../pages/points/constants';\n\nconst initialState = Map({\n  ids: [],\n  points: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_POINT_SUCCESS:\n    case DELETE_POINT_SUCCESS:\n    case LOAD_POINTS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        points: payload.points,\n        errors: []\n      });\n    case UPDATE_POINT_SUCCESS:\n      return state.merge({\n        points: payload\n      });\n    case LOAD_POINTS_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  LOAD_STATUSES_FAILURE,\n  LOAD_STATUSES_SUCCESS\n} from '../actions/constants';\nimport {\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS_SUCCESS,\n  UPDATE_STATUS_SUCCESS\n} from '../pages/statuses/constants';\n\nconst initialState = Map({\n  ids: [],\n  statuses: {},\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS_SUCCESS:\n    case LOAD_STATUSES_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n      return state.merge({\n        ids: payload.ids,\n        statuses: payload.statuses,\n        errors: []\n      });\n    case UPDATE_STATUS_SUCCESS:\n      return state.merge({\n        statuses: payload\n      });\n    case LOAD_STATUSES_FAILURE:\n      return state.merge({\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOGIN, LOGIN_FAIL } from './constants';\nimport {\n  CHECK_AUTH_SUCCESS,\n  CHECK_AUTH_FAILURE\n} from '../../actions/constants';\n\nconst initialState = Map({\n  isLoading: false,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN:\n      return state.merge({\n        isLoading: true,\n        errors: []\n      });\n    case CHECK_AUTH_SUCCESS:\n    case CHECK_AUTH_FAILURE:\n      return state.merge({\n        isLoading: false\n      });\n    case LOGIN_FAIL:\n      return state.merge({\n        isLoading: false,\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { LOAD_APP, LOAD_APP_FAILURE, LOAD_APP_SUCCESS } from './constants';\n\nconst initialState = Map({\n  isLoading: false,\n  appLoaded: false\n});\n\nexport default (state = initialState, { type }) => {\n  switch (type) {\n    case LOAD_APP:\n      return state.merge({\n        isLoading: true\n      });\n    case LOAD_APP_FAILURE:\n    case LOAD_APP_SUCCESS:\n      return state.merge({\n        isLoading: false,\n        appLoaded: true\n      });\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_RANK_FAILURE,\n  ADD_RANK,\n  ADD_RANK_SUCCESS,\n  DELETE_RANK,\n  DELETE_RANK_SUCCESS,\n  DELETE_RANK_FAILURE,\n  UPDATE_RANK,\n  UPDATE_RANK_FAILURE,\n  UPDATE_RANK_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_RANK:\n    case DELETE_RANK:\n    case UPDATE_RANK:\n      return state.merge({\n        errors: [],\n        actionInProgress: true\n      });\n    case ADD_RANK_SUCCESS:\n    case DELETE_RANK_SUCCESS:\n    case UPDATE_RANK_SUCCESS:\n      return state.merge({\n        errors: [],\n        actionInProgress: false\n      });\n    case ADD_RANK_FAILURE:\n    case DELETE_RANK_FAILURE:\n    case UPDATE_RANK_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_PLATOON_FAILURE,\n  ADD_PLATOON,\n  ADD_PLATOON_SUCCESS,\n  DELETE_PLATOON,\n  DELETE_PLATOON_SUCCESS,\n  DELETE_PLATOON_FAILURE,\n  UPDATE_PLATOON,\n  UPDATE_PLATOON_FAILURE,\n  UPDATE_PLATOON_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PLATOON:\n    case DELETE_PLATOON:\n    case UPDATE_PLATOON:\n      return state.merge({\n        actionInProgress: true,\n        errors: []\n      });\n    case ADD_PLATOON_SUCCESS:\n    case DELETE_PLATOON_SUCCESS:\n    case UPDATE_PLATOON_SUCCESS:\n      return state.merge({\n        actionInProgress: false,\n        errors: []\n      });\n    case ADD_PLATOON_FAILURE:\n    case DELETE_PLATOON_FAILURE:\n    case UPDATE_PLATOON_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_POINT_FAILURE,\n  ADD_POINT,\n  ADD_POINT_SUCCESS,\n  DELETE_POINT,\n  DELETE_POINT_SUCCESS,\n  DELETE_POINT_FAILURE,\n  UPDATE_POINT,\n  UPDATE_POINT_FAILURE,\n  UPDATE_POINT_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_POINT:\n    case DELETE_POINT:\n    case UPDATE_POINT:\n      return state.merge({\n        errors: [],\n        actionInProgress: true\n      });\n    case ADD_POINT_SUCCESS:\n    case DELETE_POINT_SUCCESS:\n    case UPDATE_POINT_SUCCESS:\n      return state.merge({\n        errors: [],\n        actionInProgress: false\n      });\n    case ADD_POINT_FAILURE:\n    case DELETE_POINT_FAILURE:\n    case UPDATE_POINT_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_STATUS_FAILURE,\n  ADD_STATUS,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_SUCCESS,\n  DELETE_STATUS_FAILURE,\n  UPDATE_STATUS,\n  UPDATE_STATUS_FAILURE,\n  UPDATE_STATUS_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS:\n    case DELETE_STATUS:\n    case UPDATE_STATUS:\n      return state.merge({\n        actionInProgress: true,\n        errors: []\n      });\n    case ADD_STATUS_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n    case UPDATE_STATUS_SUCCESS:\n      return state.merge({\n        actionInProgress: false,\n        errors: []\n      });\n    case ADD_STATUS_FAILURE:\n    case DELETE_STATUS_FAILURE:\n    case UPDATE_STATUS_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  DELETE_PERSONNEL,\n  DELETE_PERSONNEL_FAILURE,\n  DELETE_PERSONNEL_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  actionInProgress: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DELETE_PERSONNEL:\n      return state.merge({ actionInProgress: true });\n    case DELETE_PERSONNEL_SUCCESS:\n      return state.merge({ actionInProgress: false });\n    case DELETE_PERSONNEL_FAILURE:\n      return state.merge({\n        errors: payload,\n        actionInProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_PERSONNEL,\n  ADD_PERSONNEL_FAILURE,\n  ADD_PERSONNEL_SUCCESS,\n  TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE\n} from './constants';\n\nconst initialState = Map({\n  actionInProgress: false,\n  errors: [],\n  success: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_PERSONNEL:\n      return state.merge({\n        errors: [],\n        actionInProgress: true,\n        success: false\n      });\n    case ADD_PERSONNEL_SUCCESS:\n      return state.merge({\n        actionInProgress: false,\n        errors: [],\n        success: true\n      });\n    case TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE:\n      return state.merge({\n        success: !state.get('success')\n      });\n    case ADD_PERSONNEL_FAILURE:\n      return state.merge({\n        actionInProgress: false,\n        errors: payload\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT,\n  ADD_BLOCKOUT_FAILURE,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT,\n  DELETE_BLOCKOUT_FAILURE,\n  DELETE_BLOCKOUT_SUCCESS,\n  CLEAR_ERRORS\n} from './constants';\n\nconst initialState = Map({\n  actionInProgress: false,\n  errors: []\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_STATUS:\n    case DELETE_STATUS:\n    case ADD_BLOCKOUT:\n    case DELETE_BLOCKOUT:\n      return state.merge({\n        actionInProgress: true,\n        errors: []\n      });\n    case ADD_STATUS_SUCCESS:\n    case DELETE_STATUS_SUCCESS:\n    case ADD_BLOCKOUT_SUCCESS:\n    case DELETE_BLOCKOUT_SUCCESS:\n    case CLEAR_ERRORS:\n      return state.merge({\n        actionInProgress: false,\n        errors: []\n      });\n\n    case ADD_STATUS_FAILURE:\n    case DELETE_STATUS_FAILURE:\n    case ADD_BLOCKOUT_FAILURE:\n    case DELETE_BLOCKOUT_FAILURE:\n      return state.merge({\n        actionInProgress: false,\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport allReducer from './all/reducer';\nimport addReducer from './add/reducer';\nimport singleReducer from './single/reducer';\n\nconst personnelsPageReducers = combineReducers({\n  all: allReducer,\n  add: addReducer,\n  single: singleReducer\n});\n\nexport default personnelsPageReducers;\n","import { Map } from 'immutable';\nimport {\n  DELETE_EVENT,\n  DELETE_EVENT_FAILURE,\n  DELETE_EVENT_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  isDeleting: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DELETE_EVENT:\n      return state.merge({\n        errors: [],\n        isDeleting: true\n      });\n\n    case DELETE_EVENT_SUCCESS:\n      return state.merge({\n        isDeleting: false\n      });\n\n    case DELETE_EVENT_FAILURE:\n      return state.merge({\n        isDeleting: false,\n        errors: payload\n      });\n\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport {\n  CREATE_EVENT,\n  CREATE_EVENT_FAILURE,\n  CREATE_EVENT_SUCCESS\n} from './constants';\n\nconst initialState = Map({\n  errors: [],\n  isAdding: false\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CREATE_EVENT:\n      return state.merge({\n        isAdding: true,\n        errors: []\n      });\n    case CREATE_EVENT_SUCCESS:\n      return state.merge({\n        isAdding: false,\n        errors: []\n      });\n    case CREATE_EVENT_FAILURE:\n      return state.merge({\n        isAdding: false,\n        errors: payload\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport deleteReducer from './delete/reducer';\nimport addReducer from './add/reducer';\n\nexport default combineReducers({\n  delete: deleteReducer,\n  add: addReducer\n});\n","import { combineReducers } from 'redux';\nimport loginPageReducer from '../pages/login/reducer';\nimport loadingPageReducer from '../pages/loading/reducer';\nimport ranksPageReducer from '../pages/ranks/reducer';\nimport platoonsPageReducer from '../pages/platoons/reducer';\nimport pointsPageReducer from '../pages/points/reducer';\nimport statusesPageReducer from '../pages/statuses/reducer';\nimport personnelsPageReducer from '../pages/personnels/reducer';\nimport eventsPageReducer from '../pages/events/reducer';\n\nconst pages = combineReducers({\n  login: loginPageReducer,\n  loading: loadingPageReducer,\n  events: eventsPageReducer,\n  ranks: ranksPageReducer,\n  platoons: platoonsPageReducer,\n  points: pointsPageReducer,\n  statuses: statusesPageReducer,\n  personnels: personnelsPageReducer\n});\n\nexport default pages;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport immutableTransform from 'redux-persist-transform-immutable';\nimport { LOG_OUT_SUCCESS } from '../actions/constants';\n\n// GLOBAL REDUCERS\nimport authReducer from './authReducer';\nimport ranksReducer from './ranksReducer';\nimport platoonsReducer from './platoonsReducer';\nimport eventsReducer from './eventsReducer';\nimport personnelsReducer from './personnelsReducer';\nimport pointsReducer from './pointsReducer';\nimport statusesReducer from './statusesReducer';\nimport pagesReducer from './pagesReducer';\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n  ranks: ranksReducer,\n  platoons: platoonsReducer,\n  events: eventsReducer,\n  personnels: personnelsReducer,\n  points: pointsReducer,\n  statuses: statusesReducer,\n  pages: pagesReducer\n});\n\nconst rootReducer = (state, action) => {\n  let newState = state;\n  if (action.type === LOG_OUT_SUCCESS) {\n    newState = undefined;\n  }\n  return appReducer(newState, action);\n};\n\nconst persistConfig = {\n  transforms: [immutableTransform()],\n  key: 'root',\n  storage,\n  blacklist: ['pages']\n};\n\nconst persistedRootReducer = persistReducer(persistConfig, rootReducer);\n\nexport default persistedRootReducer;\n","import api from '../utils/api';\n\nclass AccountService {\n  static login(username, password) {\n    return api\n      .post('/accounts/login', { username, password })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static checkAuthenticated() {\n    return api\n      .get('/accounts/isauthenticated')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static logout() {\n    return api\n      .post('/accounts/logout')\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default AccountService;\n","import { put, call, takeLatest, all } from 'redux-saga/effects';\nimport { LOG_OUT, CHECK_AUTH } from '../actions/constants';\nimport {\n  logoutSuccess,\n  logoutFailure,\n  checkAuthFailure,\n  checkAuthSuccess,\n  logout as logoutAction\n} from '../actions/authActions';\nimport AccountService from '../services/accounts';\n\nfunction* logout() {\n  try {\n    yield call(AccountService.logout);\n    yield put(logoutSuccess());\n  } catch (error) {\n    yield put(logoutFailure());\n  }\n}\n\nfunction* checkAuth() {\n  try {\n    const response = yield call(AccountService.checkAuthenticated);\n    if (!response.ok) {\n      yield put(checkAuthFailure());\n    } else {\n      const isAuth = response.data.isAuthenticated;\n      yield put(checkAuthSuccess(isAuth));\n      if (!isAuth) {\n        yield put(logoutAction());\n      }\n    }\n  } catch (error) {\n    yield put(checkAuthFailure(error.message || ['Unable to login']));\n  }\n}\n\nfunction* authSagaWatcher() {\n  yield all([takeLatest(CHECK_AUTH, checkAuth), takeLatest(LOG_OUT, logout)]);\n}\n\nexport default authSagaWatcher;\n","import { takeLatest, put, call, delay } from 'redux-saga/effects';\nimport { LOGIN } from './constants';\nimport { loginFailure, loginSuccess } from './actions';\nimport { checkAuth } from '../../actions/authActions';\nimport AccountService from '../../services/accounts';\n\nfunction* login(action) {\n  try {\n    const { username, password } = action.payload;\n    const response = yield call(AccountService.login, username, password);\n    yield delay(500);\n    if (!response.ok) {\n      if (response.status === 420) {\n        yield put(\n          loginFailure(['Too many login request, please login in 30mins time'])\n        );\n      }\n      yield put(loginFailure([response.data]));\n    } else {\n      yield put(loginSuccess());\n      yield put(checkAuth());\n    }\n  } catch (error) {\n    yield put(loginFailure([error.message || 'Unable to login']));\n  }\n}\n\nfunction* loginWatcher() {\n  yield takeLatest(LOGIN, login);\n}\n\nexport default loginWatcher;\n","import {\n  LOAD_RANKS,\n  LOAD_RANKS_FAILURE,\n  LOAD_RANKS_SUCCESS\n} from './constants';\n\nexport const loadRanks = () => ({\n  type: LOAD_RANKS\n});\n\nexport const loadRanksSuccess = payload => ({\n  type: LOAD_RANKS_SUCCESS,\n  payload\n});\n\nexport const loadRanksFailure = payload => ({\n  type: LOAD_RANKS_FAILURE,\n  payload\n});\n","import {\n  LOAD_PLATOONS,\n  LOAD_PLATOONS_FAILURE,\n  LOAD_PLATOONS_SUCCESS\n} from './constants';\n\nexport const loadPlatoons = () => ({\n  type: LOAD_PLATOONS\n});\n\nexport const loadPlatoonsSuccess = payload => ({\n  type: LOAD_PLATOONS_SUCCESS,\n  payload\n});\n\nexport const loadPlatoonsFailure = payload => ({\n  type: LOAD_PLATOONS_FAILURE,\n  payload\n});\n","import {\n  LOAD_POINTS,\n  LOAD_POINTS_FAILURE,\n  LOAD_POINTS_SUCCESS\n} from './constants';\n\nexport const loadPoints = () => ({\n  type: LOAD_POINTS\n});\n\nexport const loadPointsSuccess = payload => ({\n  type: LOAD_POINTS_SUCCESS,\n  payload\n});\n\nexport const loadPointsFailure = payload => ({\n  type: LOAD_POINTS_FAILURE,\n  payload\n});\n","import {\n  LOAD_EVENTS,\n  LOAD_EVENTS_FAILURE,\n  LOAD_EVENTS_SUCCESS\n} from './constants';\n\nexport const loadEvents = () => ({\n  type: LOAD_EVENTS\n});\n\nexport const loadEventsSuccess = payload => ({\n  type: LOAD_EVENTS_SUCCESS,\n  payload\n});\n\nexport const loadEventsFailure = payload => ({\n  type: LOAD_EVENTS_FAILURE,\n  payload\n});\n","import {\n  LOAD_PERSONNELS,\n  LOAD_PERSONNELS_FAILURE,\n  LOAD_PERSONNELS_SUCCESS\n} from './constants';\n\nexport const loadPersonnels = () => ({\n  type: LOAD_PERSONNELS\n});\n\nexport const loadPersonnelsSuccess = payload => ({\n  type: LOAD_PERSONNELS_SUCCESS,\n  payload\n});\n\nexport const loadPersonnelsFailure = payload => ({\n  type: LOAD_PERSONNELS_FAILURE,\n  payload\n});\n","import {\n  LOAD_STATUSES,\n  LOAD_STATUSES_FAILURE,\n  LOAD_STATUSES_SUCCESS\n} from './constants';\n\nexport const loadStatuses = () => ({\n  type: LOAD_STATUSES\n});\n\nexport const loadStatusesSuccess = payload => ({\n  type: LOAD_STATUSES_SUCCESS,\n  payload\n});\n\nexport const loadStatusesFailure = errors => ({\n  type: LOAD_STATUSES_FAILURE,\n  payload: errors\n});\n","import api from '../utils/api';\n\nclass RanksService {\n  static getRanks() {\n    return api\n      .get('/ranks')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createRank(name) {\n    return api\n      .post('/ranks', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteRank(id) {\n    return api\n      .delete(`/ranks/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updateRank(id, name) {\n    return api\n      .put(`/ranks/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default RanksService;\n","import api from '../utils/api';\n\nclass PlatoonService {\n  static getPlatoons() {\n    return api\n      .get('/platoons')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPlatoon(name) {\n    return api\n      .post('/platoons', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePlatoon(id) {\n    return api\n      .delete(`/platoons/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updatePlatoon(id, name) {\n    return api\n      .put(`/platoons/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PlatoonService;\n","import api from '../utils/api';\n\nclass PointsService {\n  static getPoints() {\n    return api\n      .get('/points')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPoint(name) {\n    return api\n      .post('/points', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePoint(id) {\n    return api\n      .delete(`/points/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updatePoint(id, name) {\n    return api\n      .put(`/points/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PointsService;\n","import api from '../utils/api';\n\nclass PersonnelsService {\n  static getPersonnels() {\n    return api\n      .get('/person')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createPersonnel(name, rank, platoon) {\n    return api\n      .post('/person/new', { name, rank, platoon })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static editPersonnel(id, updatedPersonnel) {\n    return api\n      .put(`/person/${id}`, updatedPersonnel)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnel(id) {\n    return api\n      .delete(`/person/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static addPersonnelStatus(personnelId, statusId, startDate, endDate) {\n    return api\n      .post(`/person/status/${personnelId}/add`, {\n        statusId,\n        startDate,\n        endDate\n      })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnelStatus(personnelId, pStatusId) {\n    return api\n      .delete(`/person/status/${personnelId}/${pStatusId}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static addPersonnelBlockout(personnelId, date) {\n    return api\n      .post(`/person/${personnelId}/blockout`, date)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deletePersonnelBlockout(personnelId, date) {\n    return api\n      .post(`/person/${personnelId}/blockout/delete`, { date })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default PersonnelsService;\n","import api from '../utils/api';\n\nclass Statuses {\n  static getStatuses() {\n    return api\n      .get('/status')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createStatus(name) {\n    return api\n      .post('/status', { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteStatus(id) {\n    return api\n      .delete(`/status/${id}`)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static updateStatus(id, name) {\n    return api\n      .put(`/status/${id}`, { name })\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default Statuses;\n","import { takeLatest, call, all, put, delay, select } from 'redux-saga/effects';\nimport { LOAD_APP } from './constants';\nimport { loadRanksSuccess, loadRanksFailure } from '../../actions/ranksActions';\nimport {\n  loadPlatoonsFailure,\n  loadPlatoonsSuccess\n} from '../../actions/platoonsActions';\nimport {\n  loadPointsFailure,\n  loadPointsSuccess\n} from '../../actions/pointsActions';\nimport {\n  loadEventsSuccess,\n  loadEventsFailure\n} from '../../actions/eventsActions';\nimport {\n  loadPersonnelsFailure,\n  loadPersonnelsSuccess\n} from '../../actions/personnelsActions';\nimport {\n  loadStatusesFailure,\n  loadStatusesSuccess\n} from '../../actions/statusesActions';\n\nimport { loadAppSuccess, loadAppFailed } from './actions';\nimport RanksService from '../../services/ranks';\nimport PlatoonsService from '../../services/platoons';\nimport PointsService from '../../services/points';\nimport EventsService from '../../services/events';\nimport PersonnelsService from '../../services/personnels';\nimport StatusesService from '../../services/statuses';\n\nfunction* loadPoints() {\n  try {\n    const response = yield call(PointsService.getPoints);\n    if (response.ok) {\n      const points = {};\n      const ids = [];\n\n      response.data.forEach(point => {\n        const { _id: id } = point;\n        points[id] = point;\n        ids.push(id);\n      });\n      yield put(loadPointsSuccess({ ids, points }));\n    } else {\n      yield put(\n        loadPointsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPointsFailure([error.message]));\n  }\n}\n\nfunction* loadRanks() {\n  try {\n    const response = yield call(RanksService.getRanks);\n    if (response.ok) {\n      const ranks = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        ranks[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadRanksSuccess({ ids, ranks }));\n    } else {\n      yield put(\n        loadRanksFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadRanksFailure([error.message]));\n  }\n}\n\nfunction* loadPlatoons() {\n  try {\n    const response = yield call(PlatoonsService.getPlatoons);\n    if (response.ok) {\n      const platoons = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        platoons[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadPlatoonsSuccess({ ids, platoons }));\n    } else {\n      yield put(\n        loadPlatoonsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPlatoonsFailure([error.message]));\n  }\n}\n\nfunction* loadEvents() {\n  try {\n    const response = yield call(EventsService.getEvents);\n    if (response.ok) {\n      const events = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        events[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadEventsSuccess({ ids, events }));\n    } else {\n      yield put(\n        loadEventsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadEventsFailure([error.message]));\n  }\n}\n\nfunction* loadPersonnels() {\n  try {\n    const response = yield call(PersonnelsService.getPersonnels);\n    if (response.ok) {\n      const personnels = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        personnels[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadPersonnelsSuccess({ ids, personnels }));\n    } else {\n      yield put(\n        loadPersonnelsFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadPersonnelsFailure([error.message]));\n  }\n}\n\nfunction* loadStatuses() {\n  try {\n    const response = yield call(StatusesService.getStatuses);\n    if (response.ok) {\n      const statuses = {};\n      const ids = [];\n\n      response.data.forEach(rank => {\n        const { _id: id } = rank;\n        statuses[id] = rank;\n        ids.push(id);\n      });\n      yield put(loadStatusesSuccess({ ids, statuses }));\n    } else {\n      yield put(\n        loadStatusesFailure(response.data.message || response.data.errors)\n      );\n    }\n  } catch (error) {\n    yield put(loadStatusesFailure([error.message]));\n  }\n}\n\nfunction* loadEssentials() {\n  try {\n    yield all([\n      call(loadRanks),\n      call(loadPlatoons),\n      call(loadPoints),\n      call(loadEvents),\n      call(loadPersonnels),\n      call(loadStatuses)\n    ]);\n    yield put(loadAppSuccess());\n  } catch (error) {\n    yield put(loadAppFailed());\n  }\n}\n\nfunction* refresh() {\n  while (true) {\n    const threeMinute = 1000 * 60 * 3;\n    yield delay(threeMinute);\n    const isAuth = yield select(state => state.auth.get('isAuthenticated'));\n    if (isAuth) {\n      yield call(loadEssentials);\n    }\n  }\n}\n\nfunction* loadingWatcher() {\n  yield all([takeLatest(LOAD_APP, loadEssentials), refresh()]);\n}\n\nexport default loadingWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_RANK, DELETE_RANK, UPDATE_RANK } from './constants';\nimport {\n  addRankSuccess,\n  addRankFailure,\n  deleteRankSuccess,\n  deleteRankFailure,\n  updateRankSuccess,\n  updateRankFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport RanksService from '../../services/ranks';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\n\nfunction* addRank(action) {\n  try {\n    const name = action.payload;\n    if (!name) {\n      yield put(addRankFailure(['Cannot give an empty name for new rank']));\n      yield call(clearError, addRankFailure);\n    } else {\n      const ids = yield select(state => state.ranks.get('ids'));\n      const ranks = yield select(state => state.ranks.get('ranks'));\n      const response = yield call(RanksService.createRank, name);\n\n      if (response.ok) {\n        const newRank = response.data;\n        ids.push(newRank._id);\n        ranks[newRank._id] = {\n          _id: newRank._id,\n          name: newRank.name\n        };\n        yield put(addRankSuccess({ ids, ranks }));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(addRankFailure(errors));\n        yield call(clearError, addRankFailure);\n      }\n    }\n  } catch (error) {\n    yield put(addRankFailure([error.message]));\n    yield call(clearError, addRankFailure);\n  }\n}\n\nfunction* deleteRank(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(RanksService.deleteRank, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.ranks.get('ids'));\n      const { ...ranks } = yield select(state => state.ranks.get('ranks'));\n      ids = ids.filter(id => id !== deleteId);\n      delete ranks[deleteId];\n      yield put(deleteRankSuccess({ ids, ranks }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteRankFailure(errors));\n      yield call(clearError, deleteRankFailure);\n    }\n  } catch (error) {\n    yield put(deleteRankFailure([error.message]));\n    yield call(clearError, deleteRankFailure);\n  }\n}\n\nfunction* updateRank(action) {\n  try {\n    const { id, name } = action.payload;\n    if (!name) {\n      yield put(\n        updateRankFailure(['Cannot update the rank with an empty name'])\n      );\n      yield call(clearError, updateRankFailure);\n    } else {\n      const response = yield call(RanksService.updateRank, id, name);\n      if (response.ok) {\n        const { ...ranks } = yield select(state => state.ranks.get('ranks'));\n        ranks[id] = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n\n        yield put(updateRankSuccess(ranks));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else if (response.status === 304) {\n        yield put(\n          updateRankFailure([\n            'Updating rank must not be the same name as before'\n          ])\n        );\n        yield call(clearError, updateRankFailure);\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(updateRankFailure(errors));\n        yield call(clearError, updateRankFailure);\n      }\n    }\n  } catch (error) {\n    yield put(updateRankFailure([error.message]));\n    yield call(clearError, updateRankFailure);\n  }\n}\n\nfunction* ranksWatcher() {\n  yield all([\n    takeLatest(ADD_RANK, addRank),\n    takeLatest(DELETE_RANK, deleteRank),\n    takeLatest(UPDATE_RANK, updateRank)\n  ]);\n}\n\nexport default ranksWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_PLATOON, DELETE_PLATOON, UPDATE_PLATOON } from './constants';\nimport {\n  addPlatoonSuccess,\n  addPlatoonFailure,\n  deletePlatoonSuccess,\n  deletePlatoonFailure,\n  updatePlatoonSuccess,\n  updatePlatoonFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport PlatoonsService from '../../services/platoons';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\n\nfunction* addPlatoon(action) {\n  try {\n    const name = action.payload;\n    if (!name) {\n      yield put(\n        addPlatoonFailure(['Cannot give an empty name for new platoon'])\n      );\n      yield call(clearError, addPlatoonFailure);\n    } else {\n      const ids = yield select(state => state.platoons.get('ids'));\n      const platoons = yield select(state => state.platoons.get('platoons'));\n      const response = yield call(PlatoonsService.createPlatoon, name);\n\n      if (response.ok) {\n        const newPlatoon = response.data;\n        ids.push(newPlatoon._id);\n        platoons[newPlatoon._id] = {\n          _id: newPlatoon._id,\n          name: newPlatoon.name\n        };\n        yield put(addPlatoonSuccess({ ids, platoons }));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(addPlatoonFailure(errors));\n        yield call(clearError, addPlatoonFailure);\n      }\n    }\n  } catch (error) {\n    yield put(addPlatoonFailure([error.message]));\n    yield call(clearError, addPlatoonFailure);\n  }\n}\n\nfunction* deletePlatoon(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PlatoonsService.deletePlatoon, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.platoons.get('ids'));\n      const { ...platoons } = yield select(state =>\n        state.platoons.get('platoons')\n      );\n      ids = ids.filter(id => id !== deleteId);\n      delete platoons[deleteId];\n      yield put(deletePlatoonSuccess({ ids, platoons }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePlatoonFailure(errors));\n      yield call(clearError, deletePlatoonFailure);\n    }\n  } catch (error) {\n    yield put(deletePlatoonFailure([error.message]));\n    yield call(clearError, deletePlatoonFailure);\n  }\n}\n\nfunction* updatePlatoon(action) {\n  try {\n    const { id, name } = action.payload;\n    if (!name) {\n      yield put(updatePlatoonFailure([`Cannot give an empty name`]));\n      yield call(clearError, updatePlatoonFailure);\n    } else {\n      const response = yield call(PlatoonsService.updatePlatoon, id, name);\n      if (response.ok) {\n        const { ...platoons } = yield select(state =>\n          state.platoons.get('platoons')\n        );\n        platoons[id] = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n\n        yield put(updatePlatoonSuccess(platoons));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else if (response.status === 304) {\n        yield put(\n          updatePlatoonFailure([\n            'Updating platoon must not be the same name as before'\n          ])\n        );\n        yield call(clearError, updatePlatoonFailure);\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(updatePlatoonFailure(errors));\n        yield call(clearError, updatePlatoonFailure);\n      }\n    }\n  } catch (error) {\n    yield put(updatePlatoonFailure([error.message]));\n    yield call(clearError, updatePlatoonFailure);\n  }\n}\n\nfunction* platoonsWatcher() {\n  yield all([\n    takeLatest(ADD_PLATOON, addPlatoon),\n    takeLatest(DELETE_PLATOON, deletePlatoon),\n    takeLatest(UPDATE_PLATOON, updatePlatoon)\n  ]);\n}\n\nexport default platoonsWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_POINT, DELETE_POINT, UPDATE_POINT } from './constants';\nimport {\n  addPointSuccess,\n  addPointFailure,\n  deletePointSuccess,\n  deletePointFailure,\n  updatePointSuccess,\n  updatePointFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport PointsService from '../../services/points';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\n\nfunction* addPoint(action) {\n  try {\n    const name = action.payload;\n    if (!name) {\n      yield put(\n        addPointFailure(['Cannot give an empty name for new point system'])\n      );\n      yield call(clearError, addPointFailure);\n    } else {\n      const ids = yield select(state => state.points.get('ids'));\n      const points = yield select(state => state.points.get('points'));\n      const response = yield call(PointsService.createPoint, name);\n\n      if (response.ok) {\n        const newPoint = response.data;\n        ids.push(newPoint._id);\n        points[newPoint._id] = {\n          _id: newPoint._id,\n          name: newPoint.name\n        };\n        yield put(addPointSuccess({ ids, points }));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(addPointFailure(errors));\n        yield call(clearError, addPointFailure);\n      }\n    }\n  } catch (error) {\n    yield put(addPointFailure([error.message]));\n    yield call(clearError, addPointFailure);\n  }\n}\n\nfunction* deletePoint(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PointsService.deletePoint, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.points.get('ids'));\n      const { ...points } = yield select(state => state.points.get('points'));\n      ids = ids.filter(id => id !== deleteId);\n      delete points[deleteId];\n      yield put(deletePointSuccess({ ids, points }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePointFailure(errors));\n      yield call(clearError, deletePointFailure);\n    }\n  } catch (error) {\n    yield put(deletePointFailure([error.message]));\n    yield call(clearError, deletePointFailure);\n  }\n}\n\nfunction* updatePoint(action) {\n  try {\n    const { id, name } = action.payload;\n    if (!name) {\n      yield put(\n        updatePointFailure(['Cannot update a point system with empty name'])\n      );\n      yield call(clearError, updatePointFailure);\n    } else {\n      const response = yield call(PointsService.updatePoint, id, name);\n      if (response.ok) {\n        const { ...points } = yield select(state => state.points.get('points'));\n        points[id] = {\n          _id: response.data._id,\n          name: response.data.name\n        };\n\n        yield put(updatePointSuccess(points));\n      } else if (response.status === 401) {\n        yield put(logout());\n      } else if (response.status === 304) {\n        yield put(\n          updatePointFailure(['Updating point must not be the same as before'])\n        );\n        yield call(clearError, updatePointFailure);\n      } else {\n        let errors = [];\n        if (response.data.message) {\n          errors.push(response.data.message);\n        }\n\n        if (response.data.errors) {\n          errors = errors.concat(response.data.errors);\n        }\n        yield put(updatePointFailure(errors));\n        yield call(clearError, updatePointFailure);\n      }\n    }\n  } catch (error) {\n    yield put(updatePointFailure([error.message]));\n    yield call(clearError, updatePointFailure);\n  }\n}\n\nfunction* pointsWatcher() {\n  yield all([\n    takeLatest(ADD_POINT, addPoint),\n    takeLatest(DELETE_POINT, deletePoint),\n    takeLatest(UPDATE_POINT, updatePoint)\n  ]);\n}\n\nexport default pointsWatcher;\n","import { takeLatest, call, select, put, all, delay } from 'redux-saga/effects';\nimport { ADD_STATUS, DELETE_STATUS, UPDATE_STATUS } from './constants';\nimport {\n  addStatusSuccess,\n  addStatusFailure,\n  deleteStatusSuccess,\n  deleteStatusFailure,\n  updateStatusSuccess,\n  updateStatusFailure\n} from './actions';\nimport { logout } from '../../actions/authActions';\nimport StatusesService from '../../services/statuses';\n\nfunction* clearError(funcToClear) {\n  try {\n    yield delay(4000);\n    yield put(funcToClear([]));\n  } catch (error) {\n    yield put(funcToClear([]));\n  }\n}\nfunction* addStatus(action) {\n  try {\n    const name = action.payload;\n    const ids = yield select(state => state.statuses.get('ids'));\n    const statuses = yield select(state => state.statuses.get('statuses'));\n    const response = yield call(StatusesService.createStatus, name);\n\n    if (response.ok) {\n      const newStatus = response.data;\n      ids.push(newStatus._id);\n      statuses[newStatus._id] = {\n        _id: newStatus._id,\n        name: newStatus.name\n      };\n      yield put(addStatusSuccess({ ids, statuses }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addStatusFailure(errors));\n      yield call(clearError, addStatusFailure);\n    }\n  } catch (error) {\n    yield put(addStatusFailure([error.message]));\n    yield call(clearError, addStatusFailure);\n  }\n}\n\nfunction* deleteStatus(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(StatusesService.deleteStatus, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.statuses.get('ids'));\n      const { ...statuses } = yield select(state =>\n        state.statuses.get('statuses')\n      );\n      ids = ids.filter(id => id !== deleteId);\n      delete statuses[deleteId];\n      yield put(deleteStatusSuccess({ ids, statuses }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteStatusFailure(errors));\n      yield call(clearError, deleteStatusFailure);\n    }\n  } catch (error) {\n    yield put(deleteStatusFailure([error.message]));\n    yield call(clearError, deleteStatusFailure);\n  }\n}\n\nfunction* updateStatus(action) {\n  try {\n    const { id, name } = action.payload;\n    const response = yield call(StatusesService.updateStatus, id, name);\n    if (response.ok) {\n      const { ...statuses } = yield select(state =>\n        state.statuses.get('statuses')\n      );\n      statuses[id] = {\n        _id: response.data._id,\n        name: response.data.name\n      };\n\n      yield put(updateStatusSuccess(statuses));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else if (response.status === 304) {\n      yield put(\n        updateStatusFailure(['Updating status must not be the same as before'])\n      );\n      yield call(clearError, updateStatusFailure);\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(updateStatusFailure(errors));\n      yield call(clearError, updateStatusFailure);\n    }\n  } catch (error) {\n    yield put(updateStatusFailure([error.message]));\n    yield call(clearError, updateStatusFailure);\n  }\n}\n\nfunction* statusesWatcher() {\n  yield all([\n    takeLatest(ADD_STATUS, addStatus),\n    takeLatest(DELETE_STATUS, deleteStatus),\n    takeLatest(UPDATE_STATUS, updateStatus)\n  ]);\n}\n\nexport default statusesWatcher;\n","import { call, takeLatest, select, put, delay } from 'redux-saga/effects';\nimport { DELETE_PERSONNEL } from './constants';\nimport { deletePersonnelFailure, deletePersonnelSuccess } from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(deletePersonnelFailure([]));\n  } catch (error) {\n    yield put(deletePersonnelFailure([]));\n  }\n}\n\nfunction* deletePersonnel(action) {\n  try {\n    const deleteId = action.payload;\n    const response = yield call(PersonnelsService.deletePersonnel, deleteId);\n    if (response.ok) {\n      let ids = yield select(state => state.personnels.get('ids'));\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n\n      ids = ids.filter(id => id !== deleteId);\n      delete personnels[deleteId];\n      yield put(deletePersonnelSuccess({ ids, personnels }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deletePersonnelFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deletePersonnelFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* allWatcher() {\n  yield takeLatest(DELETE_PERSONNEL, deletePersonnel);\n}\n\nexport default allWatcher;\n","import { takeLatest, put, call, select, delay, all } from 'redux-saga/effects';\nimport { ADD_PERSONNEL } from './constants';\nimport {\n  addPersonnelFailure,\n  addPersonnelSuccess,\n  toggleAddPersonnelSuccessMessage\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearMessage() {\n  yield delay(4000);\n  yield all([\n    put(addPersonnelFailure([])),\n    put(toggleAddPersonnelSuccessMessage())\n  ]);\n}\n\nfunction* addPersonnel(action) {\n  try {\n    const { name, rank, platoon } = action.payload;\n    const response = yield call(\n      PersonnelsService.createPersonnel,\n      name,\n      rank,\n      platoon\n    );\n    if (response.ok) {\n      const [...ids] = yield select(state => state.personnels.get('ids'));\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const person = response.data;\n      ids.push(person._id);\n      personnels[person._id] = person;\n      yield put(addPersonnelSuccess({ ids, personnels }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addPersonnelFailure(errors));\n    }\n  } catch (error) {\n    yield put(addPersonnelFailure([error.message]));\n  }\n  yield call(clearMessage);\n}\n\nfunction* addWatcher() {\n  yield takeLatest(ADD_PERSONNEL, addPersonnel);\n}\n\nexport default addWatcher;\n","import { takeLatest, call, put, select, all, delay } from 'redux-saga/effects';\nimport moment from 'moment-timezone';\nimport {\n  ADD_STATUS,\n  DELETE_STATUS,\n  ADD_BLOCKOUT,\n  DELETE_BLOCKOUT\n} from './constants';\nimport {\n  addStatusSuccess,\n  addStatusFailure,\n  deleteStatusFailure,\n  deleteStatusSuccess,\n  addBlockoutSuccess,\n  addBlockoutFailure,\n  deleteBlockoutFailure,\n  deleteBlockoutSuccess,\n  clearErrors\n} from './actions';\nimport { logout } from '../../../actions/authActions';\nimport PersonnelsService from '../../../services/personnels';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(clearErrors());\n  } catch (error) {\n    yield put(clearErrors());\n  }\n}\nfunction* addStatus(action) {\n  try {\n    const { personnelId, statusId } = action.payload;\n    let { startDate, endDate } = action.payload;\n    startDate = moment(startDate, 'DDMMYY', true).format('DD-MM-YYYY');\n    endDate =\n      endDate.toLowerCase() === 'permanent'\n        ? endDate\n        : moment(endDate, 'DDMMYY', true).format('DD-MM-YYYY');\n\n    const response = yield call(\n      PersonnelsService.addPersonnelStatus,\n      personnelId,\n      statusId,\n      startDate,\n      endDate\n    );\n    if (response.ok) {\n      const status = response.data;\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const statusToPush = {\n        _id: status._id,\n        expired: status.expired,\n        statusId: status.statusId,\n        startDate: status.startDate,\n        endDate: status.endDate\n      };\n      personnels[personnelId].statuses.push(statusToPush);\n      yield put(addStatusSuccess(personnels));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(addStatusFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteStatus(action) {\n  try {\n    const { personnelId, pStatusId } = action.payload;\n    const response = yield call(\n      PersonnelsService.deletePersonnelStatus,\n      personnelId,\n      pStatusId\n    );\n    if (response.ok) {\n      const status = response.data.personnelStatus;\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      personnels[personnelId].statuses = personnels[\n        personnelId\n      ].statuses.filter(pStatus => pStatus._id !== status._id);\n      yield put(deleteStatusSuccess(personnels));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteStatusFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteStatusFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* addBlockout(action) {\n  try {\n    const { personnelId, date } = action.payload;\n\n    const startDate = moment(date.startDate, 'DDMMYY', true).format(\n      'DD-MM-YYYY'\n    );\n\n    const dateToSubmit = {\n      startDate\n    };\n\n    if (date.endDate) {\n      dateToSubmit.endDate = moment(date.endDate, 'DDMMYY', true).format(\n        'DD-MM-YYYY'\n      );\n    }\n\n    const response = yield call(\n      PersonnelsService.addPersonnelBlockout,\n      personnelId,\n      dateToSubmit\n    );\n\n    if (response.ok) {\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const { blockOutDates, _id: id } = response.data;\n      personnels[id].blockOutDates = blockOutDates;\n      yield put(addBlockoutSuccess(personnels));\n    } else if (response.status === 304) {\n      yield put(addBlockoutFailure(['Blockout date already exist']));\n      yield call(clearError, addBlockoutFailure);\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(addBlockoutFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(addBlockoutFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteBlockout(action) {\n  try {\n    const { personnelId, date } = action.payload;\n    const response = yield call(\n      PersonnelsService.deletePersonnelBlockout,\n      personnelId,\n      date\n    );\n    if (response.ok) {\n      const { ...personnels } = yield select(state =>\n        state.personnels.get('personnels')\n      );\n      const { blockOutDates, _id: id } = response.data;\n      personnels[id].blockOutDates = blockOutDates;\n      yield put(deleteBlockoutSuccess(personnels));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteBlockoutFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteBlockoutFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* singleWatcher() {\n  yield all([\n    takeLatest(ADD_STATUS, addStatus),\n    takeLatest(DELETE_STATUS, deleteStatus),\n    takeLatest(ADD_BLOCKOUT, addBlockout),\n    takeLatest(DELETE_BLOCKOUT, deleteBlockout)\n  ]);\n}\n\nexport default singleWatcher;\n","import { all } from 'redux-saga/effects';\nimport allSaga from './all/saga';\nimport addSaga from './add/saga';\nimport singleSaga from './single/saga';\n\nfunction* personnelsSaga() {\n  yield all([allSaga(), addSaga(), singleSaga()]);\n}\n\nexport default personnelsSaga;\n","import { takeLatest, call, put, select, delay } from 'redux-saga/effects';\nimport { DELETE_EVENT } from './constants';\nimport { deleteEventFailure, deleteEventSuccess } from './actions';\nimport { logout } from '../../../actions/authActions';\nimport EventsService from '../../../services/events';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(deleteEventFailure([]));\n  } catch (error) {\n    yield put(deleteEventFailure([]));\n  }\n}\n\nfunction* deleteEvent(action) {\n  try {\n    const { revert, eventId } = action.payload;\n    const response = yield call(EventsService.deleteEvent, eventId, revert);\n    if (response.ok) {\n      const { event } = response.data;\n\n      let ids = yield select(state => state.events.get('ids'));\n      const { ...events } = yield select(state => state.events.get('events'));\n      ids = ids.filter(id => id !== event._id);\n      delete events[event._id];\n      yield put(deleteEventSuccess({ ids, events }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(deleteEventFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(deleteEventFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* deleteWatcher() {\n  yield takeLatest(DELETE_EVENT, deleteEvent);\n}\n\nexport default deleteWatcher;\n","import { put, takeLatest, call, delay, select } from 'redux-saga/effects';\nimport { CREATE_EVENT } from './constants';\nimport { createEventFailure, createEventSuccess } from './actions';\nimport EventsService from '../../../services/events';\nimport { logout } from '../../../actions/authActions';\n\nfunction* clearError() {\n  try {\n    yield delay(4000);\n    yield put(createEventFailure([]));\n  } catch (error) {\n    yield put(createEventFailure([]));\n  }\n}\n\nfunction* createEvent(action) {\n  try {\n    const response = yield call(EventsService.createEvent, action.payload);\n    if (response.ok) {\n      const event = response.data;\n      const ids = yield select(state => state.events.get('ids'));\n      const { ...events } = yield select(state => state.events.get('events'));\n\n      ids.push(event._id);\n      events[event._id] = event;\n\n      yield put(createEventSuccess({ ids, events }));\n    } else if (response.status === 401) {\n      yield put(logout());\n    } else {\n      let errors = [];\n      if (response.data.message) {\n        errors.push(response.data.message);\n      }\n\n      if (response.data.errors) {\n        errors = errors.concat(response.data.errors);\n      }\n      yield put(createEventFailure(errors));\n      yield call(clearError);\n    }\n  } catch (error) {\n    yield put(createEventFailure([error.message]));\n    yield call(clearError);\n  }\n}\n\nfunction* addWatcher() {\n  yield takeLatest(CREATE_EVENT, createEvent);\n}\n\nexport default addWatcher;\n","import { all } from 'redux-saga/effects';\n\nimport deleteSaga from './delete/saga';\nimport addSaga from './add/saga';\n\nfunction* eventsWatcher() {\n  yield all([deleteSaga(), addSaga()]);\n}\n\nexport default eventsWatcher;\n","// PAGES SAGAS\nimport loginPageSaga from '../pages/login/saga';\nimport loadingPageSaga from '../pages/loading/saga';\nimport ranksPageSaga from '../pages/ranks/saga';\nimport platoonsPageSaga from '../pages/platoons/saga';\nimport pointsPageSaga from '../pages/points/saga';\nimport statusesPageSaga from '../pages/statuses/saga';\nimport personnelsPageSaga from '../pages/personnels/saga';\nimport eventsPageSaga from '../pages/events/saga';\n\nconst pageSagas = [\n  loginPageSaga(),\n  loadingPageSaga(),\n  ranksPageSaga(),\n  platoonsPageSaga(),\n  pointsPageSaga(),\n  statusesPageSaga(),\n  personnelsPageSaga(),\n  eventsPageSaga()\n];\n\nexport default pageSagas;\n","import { all } from 'redux-saga/effects';\n\n// GLOBAL SAGAS\nimport authSaga from './authSaga';\nimport pageSagas from './pageSagas';\n\nconst globalSagas = [authSaga()];\n\nfunction* rootSagas() {\n  yield all([...globalSagas, ...pageSagas]);\n}\n\nexport default rootSagas;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\n\nimport Reactotron from 'reactotron-react-js';\nimport ReactotronConfig from './reactotronConfig';\n\nimport rootReducer from '../reducers/rootReducer';\nimport rootSagas from '../sagas/rootSaga';\n\nconst configureStore = (state = {}) => {\n  // let sagaMiddleware = createSagaMiddleware();\n  // let store = createStore(rootReducer, state, applyMiddleware(sagaMiddleware));\n  // let persistor = persistStore(store);\n\n  // if (process.env.NODE_ENV === 'development') {\n  const sagaMonitor = Reactotron.createSagaMonitor();\n  const sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n  const store = createStore(\n    rootReducer,\n    state,\n    compose(applyMiddleware(sagaMiddleware), ReactotronConfig.createEnhancer())\n  );\n  const persistor = persistStore(store);\n  // }\n\n  sagaMiddleware.run(rootSagas);\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/styles.css';\nimport createStore from './stores/createStore';\n\nconst { store, persistor } = createStore();\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {\n  ADD_POINT,\n  ADD_POINT_FAILURE,\n  ADD_POINT_SUCCESS,\n  DELETE_POINT,\n  DELETE_POINT_FAILURE,\n  DELETE_POINT_SUCCESS,\n  UPDATE_POINT,\n  UPDATE_POINT_FAILURE,\n  UPDATE_POINT_SUCCESS\n} from './constants';\n\nexport const addPoint = name => ({\n  type: ADD_POINT,\n  payload: name\n});\n\nexport const addPointSuccess = ({ ids, points }) => ({\n  type: ADD_POINT_SUCCESS,\n  payload: {\n    ids,\n    points\n  }\n});\n\nexport const addPointFailure = errors => ({\n  type: ADD_POINT_FAILURE,\n  payload: errors\n});\n\nexport const deletePoint = id => ({\n  type: DELETE_POINT,\n  payload: id\n});\n\nexport const deletePointSuccess = id => ({\n  type: DELETE_POINT_SUCCESS,\n  payload: id\n});\n\nexport const deletePointFailure = errors => ({\n  type: DELETE_POINT_FAILURE,\n  payload: errors\n});\n\nexport const updatePoint = (id, name) => ({\n  type: UPDATE_POINT,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updatePointSuccess = points => ({\n  type: UPDATE_POINT_SUCCESS,\n  payload: points\n});\n\nexport const updatePointFailure = errors => ({\n  type: UPDATE_POINT_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  UPDATE_STATUS,\n  UPDATE_STATUS_FAILURE,\n  UPDATE_STATUS_SUCCESS\n} from './constants';\n\nexport const addStatus = name => ({\n  type: ADD_STATUS,\n  payload: name\n});\n\nexport const addStatusSuccess = ({ ids, statuses }) => ({\n  type: ADD_STATUS_SUCCESS,\n  payload: {\n    ids,\n    statuses\n  }\n});\n\nexport const addStatusFailure = errors => ({\n  type: ADD_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const deleteStatus = id => ({\n  type: DELETE_STATUS,\n  payload: id\n});\n\nexport const deleteStatusSuccess = id => ({\n  type: DELETE_STATUS_SUCCESS,\n  payload: id\n});\n\nexport const deleteStatusFailure = errors => ({\n  type: DELETE_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const updateStatus = (id, name) => ({\n  type: UPDATE_STATUS,\n  payload: {\n    id,\n    name\n  }\n});\n\nexport const updateStatusSuccess = statuses => ({\n  type: UPDATE_STATUS_SUCCESS,\n  payload: statuses\n});\n\nexport const updateStatusFailure = errors => ({\n  type: UPDATE_STATUS_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_STATUS,\n  ADD_STATUS_FAILURE,\n  ADD_STATUS_SUCCESS,\n  DELETE_STATUS,\n  DELETE_STATUS_FAILURE,\n  DELETE_STATUS_SUCCESS,\n  ADD_BLOCKOUT,\n  ADD_BLOCKOUT_FAILURE,\n  ADD_BLOCKOUT_SUCCESS,\n  DELETE_BLOCKOUT,\n  DELETE_BLOCKOUT_FAILURE,\n  DELETE_BLOCKOUT_SUCCESS,\n  CLEAR_ERRORS\n} from './constants';\n\nexport const addStatus = (personnelId, statusId, startDate, endDate) => ({\n  type: ADD_STATUS,\n  payload: {\n    personnelId,\n    statusId,\n    startDate,\n    endDate\n  }\n});\n\nexport const addStatusSuccess = payload => ({\n  type: ADD_STATUS_SUCCESS,\n  payload\n});\n\nexport const addStatusFailure = errors => ({\n  type: ADD_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const deleteStatus = (personnelId, pStatusId) => ({\n  type: DELETE_STATUS,\n  payload: {\n    personnelId,\n    pStatusId\n  }\n});\n\nexport const deleteStatusSuccess = payload => ({\n  type: DELETE_STATUS_SUCCESS,\n  payload\n});\n\nexport const deleteStatusFailure = errors => ({\n  type: DELETE_STATUS_FAILURE,\n  payload: errors\n});\n\nexport const addBlockout = (personnelId, date) => ({\n  type: ADD_BLOCKOUT,\n  payload: {\n    personnelId,\n    date\n  }\n});\n\nexport const addBlockoutSuccess = payload => ({\n  type: ADD_BLOCKOUT_SUCCESS,\n  payload\n});\n\nexport const addBlockoutFailure = errors => ({\n  type: ADD_BLOCKOUT_FAILURE,\n  payload: errors\n});\n\nexport const deleteBlockout = (personnelId, date) => ({\n  type: DELETE_BLOCKOUT,\n  payload: {\n    personnelId,\n    date\n  }\n});\n\nexport const deleteBlockoutSuccess = payload => ({\n  type: DELETE_BLOCKOUT_SUCCESS,\n  payload\n});\n\nexport const deleteBlockoutFailure = errors => ({\n  type: DELETE_BLOCKOUT_FAILURE,\n  payload: errors\n});\n\nexport const clearErrors = () => ({\n  type: CLEAR_ERRORS\n});\n","export const ADD_PERSONNEL = 'PERSONNELS_PAGE/ADD/ADD_PERSONNEL';\nexport const ADD_PERSONNEL_SUCCESS =\n  'PERSONNELS_PAGE/ADD/ADD_PERSONNEL_SUCCESS';\nexport const ADD_PERSONNEL_FAILURE =\n  'PERSONNELS_PAGE/ADD/ADD_PERSONNEL_FAILURE';\nexport const TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE =\n  'PERSONNELS_PAGE/ADD/TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE';\n","export const DELETE_EVENT = 'EVENTS_PAGE/DELETE/DELETE_EVENT';\nexport const DELETE_EVENT_SUCCESS = 'EVENTS_PAGE/DELETE/DELETE_EVENT_SUCCESS';\nexport const DELETE_EVENT_FAILURE = 'EVENTS_PAGE/DELETE/DELETE_EVENT_FAILURE';\n","export const CREATE_EVENT = 'EVENTS_PAGE/ADD/CREATE_EVENT';\nexport const CREATE_EVENT_SUCCESS = 'EVENTS_PAGE/ADD/CREATE_EVENT_SUCCESS';\nexport const CREATE_EVENT_FAILURE = 'EVENTS_PAGE/ADD/CREATE_EVENT_FAILURE';\n","export const DELETE_PERSONNEL = 'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL';\nexport const DELETE_PERSONNEL_SUCCESS =\n  'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL_SUCCESS';\nexport const DELETE_PERSONNEL_FAILURE =\n  'PERSONNELS_PAGE/ALL/DELETE_PERSONNEL_FAILURE';\n","export const LOGIN = 'LOGIN_PAGE/LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_PAGE/LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_PAGE/LOGIN_FAIL';\n","export const LOAD_APP = 'LOADING_PAGE/LOAD_APP';\nexport const LOAD_APP_SUCCESS = 'LOADING_PAGE/LOAD_APP_SUCCESS';\nexport const LOAD_APP_FAILURE = 'LOADING_PAGE/LOAD_APP_FAILURE';\n","import api from '../utils/api';\n\nclass EventsService {\n  static getEvents() {\n    return api\n      .get('/events')\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static deleteEvent(eventId, revert = false) {\n    return api\n      .post(`/events/delete/${eventId}`, { revert })\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static createEvent(data) {\n    return api\n      .post('/events/create', data)\n      .then(response => response)\n      .catch(error => error);\n  }\n\n  static generateName(data) {\n    return api\n      .post('/events/generate', data)\n      .then(response => response)\n      .catch(error => error);\n  }\n}\n\nexport default EventsService;\n","import {\n  DELETE_PERSONNEL,\n  DELETE_PERSONNEL_FAILURE,\n  DELETE_PERSONNEL_SUCCESS\n} from './constants';\n\nexport const deletePersonnel = id => ({\n  type: DELETE_PERSONNEL,\n  payload: id\n});\n\nexport const deletePersonnelSuccess = ({ ids, personnels }) => ({\n  type: DELETE_PERSONNEL_SUCCESS,\n  payload: {\n    ids,\n    personnels\n  }\n});\n\nexport const deletePersonnelFailure = errors => ({\n  type: DELETE_PERSONNEL_FAILURE,\n  payload: errors\n});\n","import {\n  ADD_PERSONNEL,\n  ADD_PERSONNEL_FAILURE,\n  ADD_PERSONNEL_SUCCESS,\n  TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE\n} from './constants';\n\nexport const addPersonnel = (name, platoon, rank) => ({\n  type: ADD_PERSONNEL,\n  payload: {\n    name,\n    platoon,\n    rank\n  }\n});\n\nexport const addPersonnelSuccess = ({ ids, personnels }) => ({\n  type: ADD_PERSONNEL_SUCCESS,\n  payload: {\n    ids,\n    personnels\n  }\n});\n\nexport const addPersonnelFailure = errors => ({\n  type: ADD_PERSONNEL_FAILURE,\n  payload: errors\n});\n\nexport const toggleAddPersonnelSuccessMessage = () => {\n  return {\n    type: TOGGLE_ADD_PERSONNEL_SUCCESS_MESSAGE\n  };\n};\n","import {\n  DELETE_EVENT,\n  DELETE_EVENT_FAILURE,\n  DELETE_EVENT_SUCCESS\n} from './constants';\n\nexport const deleteEvent = ({ eventId, revert = false }) => ({\n  type: DELETE_EVENT,\n  payload: {\n    eventId,\n    revert\n  }\n});\n\nexport const deleteEventSuccess = ({ ids, events }) => ({\n  type: DELETE_EVENT_SUCCESS,\n  payload: {\n    ids,\n    events\n  }\n});\n\nexport const deleteEventFailure = errors => ({\n  type: DELETE_EVENT_FAILURE,\n  payload: errors\n});\n","import {\n  CREATE_EVENT,\n  CREATE_EVENT_FAILURE,\n  CREATE_EVENT_SUCCESS\n} from './constants';\n\nexport const createEvent = payload => ({\n  type: CREATE_EVENT,\n  payload\n});\n\nexport const createEventSuccess = ({ ids, events }) => ({\n  type: CREATE_EVENT_SUCCESS,\n  payload: { ids, events }\n});\n\nexport const createEventFailure = errors => ({\n  type: CREATE_EVENT_FAILURE,\n  payload: errors\n});\n","import { LOAD_APP, LOAD_APP_FAILURE, LOAD_APP_SUCCESS } from './constants';\n\nexport const loadApp = () => ({\n  type: LOAD_APP\n});\n\nexport const loadAppSuccess = () => ({\n  type: LOAD_APP_SUCCESS\n});\n\nexport const loadAppFailed = () => ({\n  type: LOAD_APP_FAILURE\n});\n","import { LOGIN, LOGIN_FAIL, LOGIN_SUCCESS } from './constants';\n\nexport const login = (username, password) => {\n  return {\n    type: LOGIN,\n    payload: {\n      username,\n      password\n    }\n  };\n};\n\nexport const loginSuccess = () => {\n  return {\n    type: LOGIN_SUCCESS\n  };\n};\n\nexport const loginFailure = errors => {\n  return {\n    type: LOGIN_FAIL,\n    payload: errors\n  };\n};\n","export const LOG_OUT = 'LOGOUT';\nexport const LOG_OUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOGOUT_FAILURE';\nexport const CHECK_AUTH = 'CHECK_AUTH';\nexport const CHECK_AUTH_FAILURE = 'CHECK_AUTH_FAILURE';\nexport const CHECK_AUTH_SUCCESS = 'CHECK_AUTH_SUCCESS';\n\nexport const LOAD_RANKS = 'LOAD_RANKS';\nexport const LOAD_RANKS_SUCCESS = 'LOAD_RANKS_SUCCESS';\nexport const LOAD_RANKS_FAILURE = 'LOAD_RANKS_FAILURE';\n\nexport const LOAD_PLATOONS = 'LOAD_PLATOONS';\nexport const LOAD_PLATOONS_SUCCESS = 'LOAD_PLATOONS_SUCCESS';\nexport const LOAD_PLATOONS_FAILURE = 'LOAD_PLATOONS_FAILURE';\n\nexport const LOAD_EVENTS = 'LOAD_EVENTS';\nexport const LOAD_EVENTS_SUCCESS = 'LOAD_EVENTS_SUCCESS';\nexport const LOAD_EVENTS_FAILURE = 'LOAD_EVENTS_FAILURE';\n\nexport const LOAD_PERSONNELS = 'LOAD_PERSONNELS';\nexport const LOAD_PERSONNELS_SUCCESS = 'LOAD_PERSONNELS_SUCCESS';\nexport const LOAD_PERSONNELS_FAILURE = 'LOAD_PERSONNELS_FAILURE';\n\nexport const LOAD_POINTS = 'LOAD_POINTS';\nexport const LOAD_POINTS_SUCCESS = 'LOAD_POINTS_SUCCESS';\nexport const LOAD_POINTS_FAILURE = 'LOAD_POINTS_FAILURE';\n\nexport const LOAD_STATUSES = 'LOAD_STATUSES';\nexport const LOAD_STATUSES_SUCCESS = 'LOAD_STATUSES_SUCCESS';\nexport const LOAD_STATUSES_FAILURE = 'LOAD_STATUSES_FAILURE';\n","import React, { useState } from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\n\nconst TopNavBar = ({ username, logout }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Navbar color=\"dark\" dark expand=\"md\">\n      <NavbarBrand href=\"/\">Duty App</NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/dashboard\" activeClassName=\"active\" exact>\n              Dashboard\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/events\" activeClassName=\"active\" exact>\n              Events\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/personnels\" activeClassName=\"active\" exact>\n              Personnels\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/ranks\" activeClassName=\"active\" exact>\n              Ranks\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/platoons\" activeClassName=\"active\" exact>\n              Platoons\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/points\" activeClassName=\"active\" exact>\n              Points System\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/statuses\" activeClassName=\"active\" exact>\n              Statuses\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <Nav className=\"ml-auto\" navbar>\n          <UncontrolledDropdown nav inNavbar>\n            <DropdownToggle nav caret>\n              Hello, {username}\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem onClick={logout}>Logout</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n\nTopNavBar.propTypes = {\n  username: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nexport default TopNavBar;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport TopNavBar from '../../components/commons/TopNavBar';\nimport { logout } from '../../actions/authActions';\n\nclass AppLayout extends PureComponent {\n  render() {\n    const { children, username, userLogout } = this.props;\n    return (\n      <>\n        <TopNavBar username={username} logout={userLogout} />\n        {children}\n      </>\n    );\n  }\n}\n\nAppLayout.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  username: PropTypes.string.isRequired,\n  userLogout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  username: state.auth.get('username')\n});\n\nconst mapDispatchToProps = {\n  userLogout: logout\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppLayout);\n"],"sourceRoot":""}